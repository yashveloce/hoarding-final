{"version":3,"sources":["Components/Navbar.js","Components/NavItems/Employee_Master.js","Components/NavItems/Location_Master.js","Components/NavItems/Customer_Master.js","Components/NavItems/Media_Type_Master.js","Components/NavItems/Size_Master.js","Components/NavItems/Industry_Master.js","Components/NavItems/GST_Type_Master.js","Components/NavItems/Labour_Master.js","Components/NavItems/Dashboard.js","Components/NavItems/Inventory_Master.js","Components/NavItems/Labor_Category_Master.js","Components/NavItems/Payment_Type.js","Components/NavItems/Availability.js","Components/NavItems/Inquiry_Master.js","Components/NavItems/Inquiry_Master1.js","Components/NavItems/Booking.js","Components/NavItems/Landlord_Management.js","Components/NavItems/Quick_Media_Proposal.js","Components/NavItems/Purchase_Order_Management.js","Components/NavItems/Flex_and_Vnyl_Management.js","Components/NavItems/MonitoringImages.js","auth.js","Components/Login.js","protected.route.js","Components/NavItems/Availability_Master.js","Components/NavItems/Hoarding_Insurance1.js","Components/NavItems/Hoarding_Erection.js","Components/NavItems/HoardingErrection.js","Components/NavItems/Quick_Media.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","color","nested","paddingLeft","spacing","Navbar","props","useState","selectedIndex","setSelectedIndex","handleListItemClick","event","index","window","matchMedia","matches","menu_function","classes","React","open1","setOpen1","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","localStorage","getItem","style","textAlign","marginTop","className","List","component","to","ListItem","selected","onClick","button","ListItemIcon","ListItemText","primary","fontStyle","backgroundColor","Collapse","in","timeout","unmountOnExit","disablePadding","GET_BANK","gql","INSERT_EMPLOYEE","UPDATE_EMPLOYEE","READ_EMPLOYEE","DELETE_EMPLOYEE","Read_Labour_Master","Employee_Master","showModal","setShow","handleClose","name","address","contact_no","email_id","bank_name","branch_name","ifsc_code","account_no","employee","setEmployee","id","modalEmployee","setModalEmployee","useMutation","insert_employee","update_employee","delete_employee","bank_data","useQuery","read_labour","employee_data","useSubscription","loading","CircularProgress","onInputChange","e","target","value","onEdit","row","console","log","onModalInputChange","columns","field","headerName","renderCell","params","title","marginLeft","type","confirm","variables","toast","configure","error","data","employee_master","rows","newData","map","item","push","sno","Modal","show","onHide","Header","Title","Body","onSubmit","preventDefault","warning","defaultValue","onChange","placeholder","pattern","maxlength","minlength","marginRight","borderColor","Footer","Button","variant","Card","margin","padding","background","boxShadow","borderRadius","success","required","height","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectiononChange","components","Toolbar","GridToolbar","GET_COUNTRY","GET_STATE","GET_CITY","INSERT_LOCATION","GET_LOCATION","UPDATE_LOCATION","DELETE_LOCATION","Location_Master","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","selectedDistrict","setSelectedDistrict","selectedTaluka","setSelectedTaluka","singleCountry","setSingleCountry","singleState","setSingleState","singleCity","setSingleCity","country","state","city","district","taluka","modalLocation","setModalLocation","editLocation","insert_location","update_location","delete_location","get_location","valueGetter","countryByCountry","stateByState","cityByCity","location_master","country_options","countries","states","cities","options","country_data","parseInt","fstate","filter","st","country_id","getOptionLabel","option","getOptionValue","state_data","fcity","ct","state_id","city_data","INSERT_CUSTOMER","READ_CUSTOMER","UPDATE_CUSTOMER","DELETE_CUSTOMER","READ_GEOLOCATIONS","Customer_Master","setName","contact_person","setContact_person","mobile_no","setMobile_no","setEmail_id","gst_no","setGst_no","pan","setPan","res_address","setRes_address","setState","setDistrict","subdistrict","setSubdistrict","modalId","setModalId","modalName","setModalName","modalContact_person","setModalContact_person","modalMobile_no","setModalMobile_no","modalEmail_id","setModalEmail_id","modalGst_no","setModalGst_no","modalPan","setModalPan","modalRes_address","setModalRes_address","modalState","setModalState","modalDistrict","setModalDistrict","modalSubdistrict","setModalSubdistrict","insert_customer","update_customer","delete_customer","read_customer","read_geolocations","State","District","Subdistrict","customer_master","geo_locations","location_type","includes","districts","subdistricts","currentElement","parent_id","district_data","subdistrict_data","getMedia_Type","DELETE_MEDIA","INSERT_MEDIA","UPDATE_MEDIA","Media_Type_Master","media_type","mediaType","setMediaType","modelMediaType","setModelMediaType","update_media","delete_media_type_master","getMedia","hide","editable","media_type_master","disableSelectionOnClick","getSize_MasterQuery","insert_size_MasterQuery","Delete_size_MasterQuery","UPDATE_SIZE","Franchise_Management","no_of_display","modalSize","setModalSize","insert_size_masterData","delete_size_masterData","update_size","getSize","size_master","onModalFormSubmit","getIndustry_master","insert_Industry_MasterQuery","delete_Industry_masterQuery","update_Industry_masterQuery","Industry_Master","handleShow","industry_type","ModalIndustry","setModalIndustry","insert_Industry","delete_Industry_masterData","update_Industry_masterData","getIndustry","industry_master","sl","GST_Type_Master","setId","cgst","sgst","igst","GST","setGST","updateGST","setUpdateGST","GST_MASTER_QUERY","GST_MASTER_Insertion","GST_MASTER_Update","GST_MASTER_Delete","Datatable","insertGSTMaster","updateGSTMaster","deleteGSTMaster","gst_master","editVehicle","deleteVehicle","LABOUR_MASTER_QUERY","LABOUR_MASTER_Insertion","LABOUR_MASTER_Update","LABOUR_MASTER_Delete","Labour_Master","labor_type","labour","setLabour","updateLabor","setUpdateLabor","insertLabourMaster","updateLabourMaster","deleteLabourMaster","labor_master","labour_category_master","labour_category","bank_master","Labour_Category","display","READ_INVENTORY","READ_LANDLORD_MANAGEMENT","Dashboard","totalsq","total","modaltotalsq","modaltotal","read_inventory","read_landlord_management","Inventory_Master","rows1","landlord_management","rows2","d","Date","agreement_to","setMonth","getMonth","rent_increment_reminder","sys_date","toISOString","split","today","date","getFullYear","getDate","d1","d2","newData1","getInventory_Master","Insert_Inventory","Read_Fabricator","delete_Inventory","UPDATE_Inventory","MEDIA_TYPE","Read_hoarding_erection","Location","setLocation","Media_Type","setMedia_Type","Illumination","setIllumination","Width","setWidth","Height","setHeight","NoofDisplay","setNoofDisplay","Totalsqft","setTotalsqft","DisplayRatePM","setDisplayRatePM","OneTimePrintingCost","setOneTimePrintingCost","OneTimeMountingCost","setOneTimeMountingCost","Total","setTotal","AvailabilityFrom","setAvailabilityFrom","AvailabilityTo","setAvailabilityTo","DrpmRate","setDrpmRate","OtpcRate","setOtpcRate","OtmcRate","setOtmcRate","hoarding_insurance","sethoarding_insurance","hoarding_insurance_from","sethoarding_insurance_from","hoarding_insurance_to","sethoarding_insurance_to","Erection","setErection","Status","setStatus","ModalId","ModalState","ModalDistrict","ModalSubdistrict","ModalLocation","ModalMedia_Type","setModalMedia_Type","ModalIllumination","setModalIllumination","ModalWidth","setModalWidth","ModalHeight","setModalHeight","ModalNoofDisplay","setModalNoofDisplay","ModalTotalsqft","setModalTotalsqft","ModalDisplayRatePM","setModalDisplayRatePM","ModalOneTimePrintingCost","setModalOneTimePrintingCost","ModalOneTimeMountingCost","setModalOneTimeMountingCost","ModalTotal","setModalTotal","ModalAvailabilityFrom","setModalAvailabilityFrom","ModalAvailabilityTo","setModalAvailabilityTo","ModalDrpmRate","setModalDrpmRate","ModalOtpcRate","setModalOtpcRate","ModalOtmcRate","setModalOtmcRate","Modalhoarding_insurance","setModalhoarding_insurance","Modalhoarding_insurance_from","setModalhoarding_insurance_from","Modalhoarding_insurance_to","setModalhoarding_insurance_to","ModalErection","setModalErection","ModalStatus","setModalStatus","onStateChange","onDistrictChange","onSubdistrictChange","Insert_InventorymasterData","delete_InventorymasterData","update_InventorymasterData","getInventory","read_fabricator","read_hoarding_erection","user","toString","find","op","modal_mdeia_type_data","label","modalIlluminationData","modaldrpm","modalotpc","modalotmc","hoarding_errection","erection","location","BookedBy","media_type_data","illumination_data","drpm","otpc","otmc","getLabour_Master","InsertLabour_Master","UpdateLabour_Master","Deletelabour_Master","Labour_Category_Master","modallabour","setmodallabour","Insert_labourmasterData","Update_labourmasterData","delete_labourmasterdata","getlabour_category_master","getPayment_master","InsertPayment_Master","UpdatePayment_Master","DeletePayment_Master","Payment_Type","payment_type","modalpayment","setmodalpayment","Insert_paymenttypeData","Update_paymenttypeData","delete_paymenttypeData","getpayment_type","getAVAILABILITY","DELETE_AVAILABILITY","INSERT_AVAILABILITY","UPDATE_AVAILABILITY","Availability","availability","setAvailability","modelAvailability","setModelAvailability","insert_availability","update_availability","delete_availability","getAvailability","READ_MEDIA","INSERT_INQUIRY","UPDATE_INQUIRY","DELETE_INQUIRY","READ_INQUIRY","SEARCH_INVENTORYALL","SEARCH_INVENTORY","READ_STATES","Inquiry_Master","setSelected","showhide","setShowhide","illumination","searchMediaType","setSearchMediaType","searchDate","setSearchDate","sol","setSol","number","setNumber","emailid","setEmailid","whatsappNumber","setWhatsappNumber","startDate","setStartDate","setMedia_type","status","modalSol","setModalSol","modalNumber","setModalNumber","modalEmailid","setModalEmailid","modalWhatsappNumber","setModalWhatsappNumber","modalStartDate","setModalStartDate","modalMedia_type","setModalMedia_type","modalStatus","insert_inquiry","update_inquiry","delete_inquiry","read_media","read_inquiry","useLazyQuery","loadInventory","read_states","loadInventoryAll","invData","whatsapp_number","start_date","inquiry_master","inventory","readonly","media","_gt","visibility","onSelectionModelChange","itm","i","length","SEARCH_QUICK_MEDIA","READ_LABOR","Read_Printer","Read_Mounter","Read_Electrician","Read_Designer","INSERT_BOOKING","READ_BOOKING","UPDATE_BOOKING","DELETE_BOOKING","UPDATE_INVENTORY","READ_QUICK_MEDIA","GET_DATA","UPDATE_BOOKING_ON_DELETE","Booking","setGet_data","shortlisted","setShortlisted","confirmation","setConfirmation","PO","setPO","designer","setDesigner","printer","setPrinter","mounter","setMounter","electrician","setElectrician","startDatePhoto","setStartDatePhoto","monitoringPhoto","setMonitoringPhoto","endDatePhoto","setEndDatePhoto","endDate","setEndDate","Booked","setBooked","modalShortlisted","setModalShortlisted","modalConfirmation","setModalConfirmation","modalPO","setModalPO","modalDesigner","setModalDesigner","modalPrinter","setModalPrinter","modalMounter","setModalMounter","modalElectrician","setModalElectrician","modalStartDatePhoto","setModalStartDatePhoto","modalMonitoringPhoto","setModalMonitoringPhoto","modalEndDatePhoto","setModalEndDatePhoto","update_inventory","insert_booking","update_booking","delete_booking","update_booking_on_delete","read_labor","read_booking","read_printer","read_electrician","read_mounter","read_designer","read_quick_media","onCompleted","get_return_data","search_quick_media","Shortlisted","Confirmation","Designer","Printer","Mounter","Electrician","Start_Date_Photo","End_Date_Photo","Monitoring_Photo","src","Booking_Calender","proposal_no","quick_media","labor","formData","FormData","append","files","axios","post","then","dataimage1","ids","selectedIDs","Set","selectedRowData","has","Sites","Start_Date","End_Date","getlandloard_Master","Insertlanloard_Master","Updatelandloard_Master","Deletelandloard_Master","Landloard_Management","mobile_number","ifsc","rent_amount","site_address","agreement_from","landloard","setlandloard","modallandloard","setModallandloard","Insert_landloardmanagementData","update_landloardmanagementData","delete_landloardmanagementData","getlandloard_management","READ_COUNTRIES","READ_CITIES","setCountry","setCity","read_countries","read_cities","City_Village","Country","Taluka","getPurchase_Master","InsertPurchase_Master","UpdatePurchase_Master","DeletePurchase_Master","SEARCH_BOOKING","GET_BOOKING_DATA","Purchase_Order_Management","get_data","searchField","setSearchField","billing_name","billing_address","booking_number","purchase_order_date","campaign_name","quotation_number","gst_details","company_pan","payment_terms","purchase","setpurchase","modalpurchase","setModalpurchase","insertpurchasedata","updatepurchasedata","deletepurchasedata","getBookingData","getpurchase_order","purchase_order","undefined","booking","getFlex_Master","InsertFlex_Master","deleteFlex_Master","updateFlex_Master","Flex_and_Vinyl_Management","setMedia","designer_selection","designer_payment","printer_selection","printer_payment","mounter_selection","mounter_payment","flex","setflex","Modalflex","setModalflex","Insert_flexinsertData","delete_flexdeleteData","update_flexupdateData","getflex_vinyl_management","flex_vinyl_management","READ_MONITORING","INSERT_MONITORING","UPDATE_MONITORING","DELETE_MONITORING","MonitoringImages","brand_name","clients_name","geo_location","upload_image","monitoring","setMONITORING","modalMONITORING","setModalMONITORING","insert_monitoring","update_monitoring","delete_monitoring","monitoring_data","monitoring_images","cb","setItem","clear","LOGIN_MUTATION","Login","history","useHistory","username","password","role","formState","setFormState","class","alt","Array","isArray","User","auth","login","FormSubmit","for","paddingRight","ProtectedRoute","Component","rest","render","pathname","from","Availability_Master","Hoarding_Insurance1","setFilteredData","setInventory","insurance","setInsurance","insuranceFrom","setInsuranceFrom","insuranceTo","setInsuranceTo","searchInventory","searchInventoryData","filteredInventory","READ_HOARDING","INSERT_HOARDING","UPDATE_HOARDING","DELETE_HOARDING","READ_ELECTRICIAN","READ_CIVIL_CONTRACTOR","READ_EXCAVATOR","HoardingErrection","payment","permission","excavator","excavator_charges","civil_contractor","civil_material","civil_contractor_labour_payment","fabrication_material","fabricator_labour_payment","transport_charges","electrician_selection","electric_material_purchase","electrician_labour_payment","fabricator","hoarding","setHOARDING","modalHOARDING","setModalHOARDING","insert_hoarding","update_hoarding","delete_hoarding","read_excavator","read_civil_contractor","hoarding_data","laborMasterByExcavator","laborMasterByElectricianSelection","INSERT_QUICK_MEDIA","DELETE_QUICK_MEDIA","READ_QUICK","SEARCH_INQUIRY","GET_MOBILE","Quick_Media","delete_quick_media","insert_quick_media","search_inquiry","return_inquiry","get_mobile","mobile_no_exists","read_quick","columns1","at","counter","counter_proposal","inquiry","setDate","refreshClock","useEffect","timerId","setInterval","clearInterval","menu","setMenu","menu_toggle","a","document","getElementById","b","cursor","toLocaleTimeString","hour","minute","second","href","logout","exact","path","Size_Master","Labor_Category_Master","Inquiry_Master1","Quick_Media_Proposal","Hoarding_Erection","wsLink","WebSocketLink","uri","reconnect","httpLink","HttpLink","splitLink","query","definition","getMainDefinition","kind","operation","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d31e2d40.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n// import ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import DraftsIcon from '@material-ui/icons/Drafts';\n// import SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n// import StarBorder from '@material-ui/icons/StarBorder';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n// import GroupIcon from '@material-ui/icons/Group';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport BuildIcon from '@mui/icons-material/Build';\nimport InventoryIcon from '@mui/icons-material/Inventory';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AspectRatioIcon from '@mui/icons-material/AspectRatio';\n// import PinDropIcon from '@material-ui/icons/PinDrop';\nimport { Link } from 'react-router-dom';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AcUnitIcon from '@mui/icons-material/AcUnit';\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport PaymentsIcon from '@mui/icons-material/Payments';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\nimport BookIcon from '@mui/icons-material/Book';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport ApartmentIcon from '@mui/icons-material/Apartment';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport MonitorIcon from '@mui/icons-material/Monitor';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    color: 'black',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nexport default function Navbar(props) {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    if(window.matchMedia(\"(max-width:426px)\").matches)\n    {\n      props.menu_function();\n    }\n  };\n\n  const classes = useStyles();\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n  const [open4, setOpen4] = React.useState(false);\n  const [open5, setOpen5] = React.useState(false);\n  const [open6, setOpen6] = React.useState(false);\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n  const handleClick3 = () => {\n    setOpen3(!open3);\n  };\n  const handleClick4 = () => {\n    setOpen4(!open4);\n  };\n  const handleClick5 = () => {\n    setOpen5(!open5);\n  };\n  const handleClick6 = () => {\n    setOpen6(!open6);\n  };\n  const role = localStorage.getItem(\"userrole\");\n  if (role === \"admin\") {\n    return (\n      <>\n        <h6 style={{ textAlign: 'center', marginTop: '15px', color: 'Black' }} className=\"admin-nav\" >ADMIN</h6>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          className={classes.root}\n        >\n          {/* Dashboard */}\n          <Link to='/'>\n            <ListItem\n              selected={selectedIndex === 0}\n              onClick={(event) => handleListItemClick(event, 0)}\n              style={{ color: 'White' }}\n              button>\n              <DashboardIcon />\n              <ListItemIcon style={{ color: 'white' }}>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" className='menu-item-color' style={{ fontStyle: 'bold' }} />\n\n            </ListItem>\n          </Link>\n\n          {/* Master Creation */}\n\n          <ListItem button onClick={handleClick1} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon style={{ color: 'white' }}>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Master Creation\" className='menu-item-color' />\n            {open1 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {/* Employee Master */}\n              <Link to='/Employee_Master' >\n                <ListItem\n                  selected={selectedIndex === 1}\n                  onClick={(event) => handleListItemClick(event, 1)}\n                  button className={classes.nested}>\n                  <ListItemIcon>\n                    <FlagIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Employee Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labour Master */}\n              <Link to='/Labour_Master' >\n                <ListItem\n                  selected={selectedIndex === 2}\n                  onClick={(event) => handleListItemClick(event, 2)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <BuildIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Labour Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Location Master */}\n              {/* <Link to='/Location_Master' >\n  \n                <ListItem\n                  selected={selectedIndex === 3}\n                  onClick={(event) => handleListItemClick(event, 3)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <PinDropIcon style={{color:'white'}} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Location Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Customer Master */}\n              <Link to='/Customer_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 4}\n                  onClick={(event) => handleListItemClick(event, 4)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    < PersonIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Customer Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Media Type Master */}\n              <Link to='/Media_Type_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 5}\n                  onClick={(event) => handleListItemClick(event, 5)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <StarBorder style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Media Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Size Master */}\n              {/* <Link to='/Size_Master' >\n  \n                <ListItem\n                  selected={selectedIndex === 6}\n                  onClick={(event) => handleListItemClick(event, 6)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AspectRatioIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Size Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Hoarding Insurance */}\n              <Link to='/Hoarding_Insurance' >\n                <ListItem\n                  selected={selectedIndex === 6}\n                  onClick={(event) => handleListItemClick(event, 6)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <MonitorIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Hoarding Insurance\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Hoarding Erection */}\n              <Link to='/HoardingErrection' >\n                <ListItem\n                  selected={selectedIndex === 7}\n                  onClick={(event) => handleListItemClick(event, 7)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <MonitorIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Hoarding Erection\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n\n              {/* GST Type Master */}\n              <Link to='/Inventory_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 9}\n                  onClick={(event) => handleListItemClick(event, 9)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <InventoryIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Inventory Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Industry Master */}\n              <Link to='/Industry_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 8}\n                  onClick={(event) => handleListItemClick(event, 8)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <LocationCityIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Industry Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* GST Type Master */}\n              <Link to='/GST_Type_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 10}\n                  onClick={(event) => handleListItemClick(event, 10)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccountBalanceIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"GST Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labor Category Type Master */}\n              <Link to='/Labor_Category_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 11}\n                  onClick={(event) => handleListItemClick(event, 11)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AcUnitIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Labor Category Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labor Category Type Master */}\n              <Link to='/Payment_Type' >\n                <ListItem\n                  selected={selectedIndex === 12}\n                  onClick={(event) => handleListItemClick(event, 12)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <PaymentsIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Payment Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Availability Master */}\n              {/* <Link to='/Availability_Master' >\n                <ListItem\n                  selected={selectedIndex === 7}\n                  onClick={(event) => handleListItemClick(event, 7)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccessibilityIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Availability Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Availability Master */}\n              {/* <Link to='/Availability' >\n                <ListItem\n                  selected={selectedIndex === 12}\n                  onClick={(event) => handleListItemClick(event, 13)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccessibilityIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Availability Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n\n            </List>\n          </Collapse>\n          {/* Landlord Management */}\n\n          <ListItem button onClick={handleClick2} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Landlord Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n            {/* Landlord Management */}\n            <Link to='/Landlord_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AccessibilityIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Landlord Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Planning */}\n          <ListItem button onClick={handleClick3} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Planning\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open3} timeout=\"auto\" unmountOnExit>\n            {/* Inquiry Master */}\n            <Link to='/Inquiry_Master' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AddIcCallIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Inquiry\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n            {/* Quick Media Proposal */}\n            {/* <Link to='/Quick_Media_Proposal' >\n                <ListItem\n                  selected={selectedIndex === 2}\n                  onClick={(event) => handleListItemClick(event, 2)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AssessmentIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Quick Media Proposal\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n            {/* Quick Proposal */}\n            <Link to='/Quick_Media' >\n              <ListItem\n                selected={selectedIndex === 2}\n                onClick={(event) => handleListItemClick(event, 2)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AssessmentIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Quick Media\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n            {/* Booking */}\n            <Link to='/Booking' >\n              <ListItem\n                selected={selectedIndex === 3}\n                onClick={(event) => handleListItemClick(event, 3)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <BookIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Booking\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n          {/* Purchase Order Management */}\n\n          <ListItem button onClick={handleClick4} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Purchase Order Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open4} timeout=\"auto\" unmountOnExit>\n            {/* Purchase Order Management */}\n            <Link to='/Purchase_Order_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <ApartmentIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Purchase Order Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Flex And Vnyl Management */}\n\n          <ListItem button onClick={handleClick5} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Flex And Vinyl Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open5} timeout=\"auto\" unmountOnExit>\n            {/* Flex And Vnyl Management */}\n            <Link to='/Flex_and_Vinyl_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AddBoxIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Flex And Vinyl Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Flex And Vnyl Management */}\n\n          <ListItem button onClick={handleClick6} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Monitoring Images\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open6} timeout=\"auto\" unmountOnExit>\n            {/* Monitoring Images */}\n            <Link to='/MonitoringImages' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <MonitorIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Monitoring Images\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n\n\n\n        </List>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <h6 style={{ textAlign: 'center', marginTop: '15px', color: 'Black' }} className=\"admin-nav\" >SUPER ADMIN</h6>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          className={classes.root}\n        >\n          {/* Dashboard */}\n          <Link to='/'>\n            <ListItem\n              selected={selectedIndex === 0}\n              onClick={(event) => handleListItemClick(event, 0)}\n              style={{ color: 'White' }}\n              button>\n              <DashboardIcon />\n              <ListItemIcon style={{ color: 'white' }}>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" className='menu-item-color' style={{ fontStyle: 'bold' }} />\n\n            </ListItem>\n          </Link>\n        </List>\n      </>\n    )\n  }\n}\n\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst GET_BANK = gql`\nquery MyQuery {\n    bank_master {\n      id\n      ifsc_code\n      branch_name\n      bank_name\n      account_no\n    }\n  }  \n`\nconst INSERT_EMPLOYEE = gql`\nmutation MyMutation($address: String = \"\", $contact_no: String = \"\", $email_id: String = \"\", $name: String = \"\",$bank_name:String!,$branch_name:String!,$ifsc_code:String!,$account_no:String!) {\n    insert_employee_master_one(object: {address: $address, contact_no: $contact_no, email_id: $email_id, name: $name,bank_name:$bank_name,branch_name:$branch_name,ifsc_code:$ifsc_code,account_no:$account_no}) {\n      id\n    }\n  }\n`\nconst UPDATE_EMPLOYEE = gql`\nmutation MyMutation($id: Int = 0, $address: String = \"\" $contact_no: String = \"\", $email_id: String = \"\", $name: String = \"\",$bank_name:String!,$branch_name:String!,$ifsc_code:String!,$account_no:String!) {\n    update_employee_master_by_pk(pk_columns: {id: $id}, _set: {address: $address, contact_no: $contact_no, email_id: $email_id, name: $name,bank_name:$bank_name,branch_name:$branch_name,ifsc_code:$ifsc_code,account_no:$account_no}) {\n      address\n      bank_name\n      branch_name\n      ifsc_code\n      account_no\n      contact_no\n      email_id\n      id\n      name\n    }\n  }\n`\n\nconst READ_EMPLOYEE = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    employee_master(where: {isDeleted: {_eq: $_eq}}){\n      account_no\n      address\n      bank_name\n      branch_name\n      contact_no\n      email_id\n      id\n      ifsc_code\n      isDeleted\n      name\n    }\n  }\n  \n`\n// const DELETE_EMPLOYEE = gql`\n// mutation MyMutation($id: Int!) {\n//     delete_employee_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n// `\n\nconst DELETE_EMPLOYEE = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_employee_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\nconst Read_Labour_Master = gql`\nquery MyQuery($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n`\n\nexport default function Employee_Master() {\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [employee, setEmployee] = useState({\n        name: '',\n        address: '',\n        contact_no: '',\n        email_id: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc_code: '',\n        account_no: '',\n    });\n    const [modalEmployee, setModalEmployee] = useState({\n        id: '',\n        name: '',\n        address: '',\n        contact_no: '',\n        email_id: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc_code: '',\n        account_no: '',\n    });\n    const [insert_employee, insert_data] = useMutation(INSERT_EMPLOYEE);\n    const [update_employee, update_data] = useMutation(UPDATE_EMPLOYEE);\n    const [delete_employee, delete_data] = useMutation(DELETE_EMPLOYEE);\n    const bank_data = useQuery(GET_BANK);\n    const read_labour = useQuery(Read_Labour_Master);\n    const employee_data = useSubscription(READ_EMPLOYEE);\n    if (bank_data.loading || employee_data.loading || read_labour.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n\n\n\n    const onInputChange = (e) => {\n        //console.log(e.target.name);\n        setEmployee({ ...employee, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        console.log(employee);\n        e.preventDefault();\n        insert_employee({ variables: employee })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalEmployee({\n            id: row.id,\n            name: row.name,\n            address: row.address,\n            contact_no: row.contact_no,\n            email_id: row.email_id,\n            bank_name: row.bank_name,\n            branch_name: row.branch_name,\n            ifsc_code: row.ifsc_code,\n            account_no: row.account_no,\n        })\n        console.log(modalEmployee);\n    }\n    // const onModalFormSubmit=(e)=>{\n    //     e.preventDefault();\n    //     update_employee({variables:{id:modalEmployee.id,name:modalEmployee.name,address:modalEmployee.address,email_id:modalEmployee.email_id,contact_no:modalEmployee.contact_no,bank_id:modalEmployee.bank_id}})\n\n    // }\n    const onModalInputChange = (e) => {\n        setModalEmployee({ ...modalEmployee, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_employee({ variables: modalEmployee })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_employee({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n        {\n            field: 'address',\n            headerName: 'Address',\n            width: 190\n        },\n        {\n            field: 'contact_no',\n            headerName: 'Contact Number',\n            width: 190\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email ID',\n            width: 250\n        },\n        // {\n        //     field: 'bank_id',\n        //     headerName: 'Bank Details',\n        //     width: 160,\n        //     valueGetter: (params) => {\n        //         return params.row.bank_master.bank_name;\n        //     }\n        // },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name',\n            width: 160\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name',\n            width: 180\n        },\n        {\n            field: 'ifsc_code',\n            headerName: 'IFSC',\n            width: 110\n        },\n        {\n            field: 'account_no',\n            headerName: 'Account Number',\n            width: 190\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    console.log(employee_data.data.employee_master);\n    const rows = employee_data.data.employee_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Employee</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalEmployee.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Name</label>\n                                <input defaultValue={modalEmployee.name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Address</label>\n                                <input defaultValue={modalEmployee.address} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"address\" type=\"text\" placeholder=\"enter address\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Contact Number</label>\n                                <input defaultValue={modalEmployee.contact_no} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"contact_no\" type=\"tel\" placeholder=\"enter contact number\" pattern=\"[789][0-9]{9}\" title=\"Please enter valid contact number\" />\n                            </div>\n                        </div>\n                        {/* <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Labour Category</label>\n                                <select defaultValue={modalEmployee.labour_category} onChange={onInputChange} type=\"text\" name=\"labour_category\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                    <option>--SELECT--</option>\n                                    {read_labour.data.labour_category_master.map(Labour_Category => (\n                                        <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div> */}\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Email ID</label>\n                                <input defaultValue={modalEmployee.email_id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"email_id\" type=\"text\" placeholder=\"enter email id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Bank Name</label>\n                                {/* <select defaultValue={modalEmployee.bank_id} className=\"form-control\" onChange={onModalInputChange} name=\"bank_id\" placeholder=\"enter bank details\">\n                                    <option>--SELECT--</option>\n                                    {bank_data.data.bank_master.map(bank => (\n                                        <option value={bank.id} key={bank.id}>{bank.bank_name}</option>\n                                    ))}\n                                </select> */}\n                                <input type=\"text\" defaultValue={modalEmployee.bank_name} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"bank_name\" placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Branch Name</label>\n                                <input type=\"text\" defaultValue={modalEmployee.branch_name} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"branch_name\" placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div><br />\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">IFSC</label>\n                                <input type=\"text\" maxlength=\"11\" minlength=\"11\" defaultValue={modalEmployee.ifsc_code} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"ifsc_code\" placeholder=\"enter ifsc\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Account number</label>\n                                <input type=\"text\" defaultValue={modalEmployee.account_no} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"account_no\" placeholder=\"enter account number\" />\n                            </div>\n                        </div><br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        </div>\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">EMPLOYEE MASTER</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Name</label>\n                            <input type=\"text\" name=\"name\" onChange={onInputChange} className=\"form-control mt-1\" required placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Address</label>\n                            <input type=\"text\" name=\"address\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Contact Number</label>\n                            <input type=\"tel\" name=\"contact_no\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter contact number\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid contact number\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input type=\"email\" name=\"email_id\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter email id\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                        </div>\n                    </div><br />\n                    {/* <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Labour Category</label>\n                            <select onChange={onInputChange} type=\"text\" name=\"labour_category\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                <option>--SELECT--</option>\n                                {read_labour.data.labour_category_master.map(Labour_Category => (\n                                    <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br /> */}\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Bank Name</label>\n                            {/* <select name=\"bank_id\" className=\"form-select\" onChange={onInputChange} placeholder=\"enter bank details\" required>\n                                <option>--SELECT--</option>\n                                {bank_data.data.bank_master.map(bank => (\n                                    <option value={bank.id} key={bank.id}>{bank.bank_name}</option>\n                                ))}\n                            </select> */}\n                            <input type=\"text\" name=\"bank_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Branch Name</label>\n                            <input type=\"text\" name=\"branch_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\"><br />\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">IFSC </label>\n                            <input type=\"text\" maxlength=\"11\" minlength=\"11\" name=\"ifsc_code\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter ifsc\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Account Number</label>\n                            <input type=\"number\" name=\"account_no\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter account number\" required />\n                        </div>\n                    </div>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst GET_COUNTRY = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n    states {\n      id\n      country_id\n      name\n    }\n    cities {\n        id\n        name\n        state_id\n      }\n  }  \n`\nconst GET_STATE = gql`\nquery MyQuery {\n    states {\n      id\n      country_id\n      name\n    }\n  } \n`\nconst GET_CITY = gql`\nquery MyQuery {\n    cities {\n      id\n      name\n      state_id\n    }\n  }\n`\nconst INSERT_LOCATION = gql`\nmutation MyMutation($city: Int = 0, $country: Int = 0, $district: String = \"\", $state: Int = 0, $taluka: String = \"\") {\n    insert_location_master_one(object: {city: $city, country: $country, district: $district, state: $state, taluka: $taluka}) {\n      id\n    }\n  }\n`\n// const INSERT_TALUKA = gql`\n// mutation MyMutation($name: String! ,$cities_id: Int!) {\n//     insert_taluka_one(object: {name: $name, cities_id: $cities_id}) {\n//       cities_id\n//       id\n//       name\n//     }\n//   }\n// `\n\n// const INSERT_DISTRICT = gql`\n// mutation MyMutation($cities_id: Int!, $name: String!) {\n//     insert_district_one(object: {name: $name, cities_id: $cities_id}) {\n//       id\n//     }\n//   }\n  \n// `\n\nconst GET_LOCATION = gql`\nsubscription MySubscription {\n    location_master {\n      city\n      cityByCity {\n        id\n        name\n      }\n      country\n      countryByCountry {\n        id\n        name\n      }\n      district\n      id\n      state\n      stateByState {\n        id\n        name\n      }\n      taluka\n    }\n  }   \n`\nconst UPDATE_LOCATION = gql`\nmutation MyMutation($id: Int=0, $city: Int = 0, $country: Int = 0, $district: String = \"\", $state: Int = 0, $taluka: String = \"\") {\n    update_location_master_by_pk(pk_columns: {id: $id}, _set: {city: $city, country: $country, district: $district, state: $state, taluka: $taluka}) {\n      city\n      country\n      district\n      id\n      state\n      taluka\n    }\n  }\n`\nconst DELETE_LOCATION = gql`\nmutation MyMutation($id: Int = 0) {\n    delete_location_master_by_pk(id: $id) {\n      id\n    }\n  }\n  \n`\n\nexport default function Location_Master() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [selectedCountry, setSelectedCountry] = useState();\n    const [selectedState, setSelectedState] = useState();\n    const [selectedCity, setSelectedCity] = useState();\n    const [selectedDistrict, setSelectedDistrict] = useState();\n    const [selectedTaluka, setSelectedTaluka] = useState();\n    const [singleCountry, setSingleCountry] = useState();\n    const [singleState, setSingleState] = useState();\n    const [singleCity, setSingleCity] = useState();\n    const [modalLocation, setModalLocation] = useState({\n        id: '',\n        country: '',\n        state: '',\n        city: '',\n        district: '',\n        taluka: '',\n    });\n    const onCountryChange = (country_data) => {\n        console.log(country_data.id);\n        setSingleCountry(country_data.id);\n        setSelectedCountry(parseInt(country_data.id));\n        console.log(country_data.id) \n        const fstate = state.data.states.filter(function (st) {\n            return st.country_id === parseInt(country_data.id);\n        })\n        setSelectedState(fstate);\n        console.log(selectedState);\n    }\n    const onStateChange = (state_data) => {\n        console.log(state_data.id)\n        setSingleState(state_data.id);\n        const fcity = city.data.cities.filter(function (ct) {\n            return ct.state_id === parseInt(state_data.id);\n        })\n        setSelectedCity(fcity);\n        console.log(selectedCity)\n        console.log(fcity);\n    }\n    const onCityChange = (city_data)=>{\n        console.log(city_data.id);\n        setSingleCity(city_data.id)\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e);\n        insert_location({ variables: { country: singleCountry, state: singleState, city: singleCity, district: selectedDistrict, taluka:selectedTaluka } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n    const editLocation = (row) => {\n        setModalLocation({\n            id: row.id,\n            country: row.country,\n            state: row.state,\n            city: row.city,\n            district: row.district,\n            taluka: row.taluka\n        })\n        handleShow();\n        //console.log(modalIndustry);\n    }\n    const onModalInputChange = (e) => {\n        setModalLocation({ ...modalLocation, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_location({ variables: { id: modalLocation.id, country: modalLocation.country, state: modalLocation.state, city: modalLocation.city, district: modalLocation.district, taluka: modalLocation.taluka } })\n        toast.configure();\n        toast.warning('Successfully Updated')\n        handleClose();\n    }\n    const delete_location_data = (id) => {\n        delete_location({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    //Queries\n    const [insert_location, insert_data] = useMutation(INSERT_LOCATION)\n    // const [insert_taluka, insert_taluka_data] = useMutation(INSERT_TALUKA)\n    // const [insert_district, insert_district_data] = useMutation(INSERT_DISTRICT)\n    const [update_location, update_data] = useMutation(UPDATE_LOCATION)\n    const [delete_location, delete_data] = useMutation(DELETE_LOCATION)\n    const country = useQuery(GET_COUNTRY);\n    const state = useQuery(GET_STATE);\n    const city = useQuery(GET_CITY);\n    const get_location = useSubscription(GET_LOCATION);\n    if (country.loading || state.loading || city.loading || get_location.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.countryByCountry.name;\n            }\n        },\n        {\n            field: 'state',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.stateByState.name;\n            }\n        },\n        {\n            field: 'district',\n            headerName: 'District',\n            width: 160,\n        },\n        {\n            field: 'taluka',\n            headerName: 'Taluka',\n            width: 160,\n        },\n        {\n            field: 'city',\n            headerName: 'City',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.cityByCity.name;\n            }\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 190,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => { editLocation(params.row) }} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                delete_location_data(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n\n    ];\n    const rows = get_location.data.location_master;\n    const country_options = country.data.countries;\n    const state_options = state.data.states;\n    const city_options = city.data.cities;\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Location</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                \n                        <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalLocation.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Country</label>\n                                {/* <input defaultValue={modalLocation.country} onChange={onModalInputChange} className=\"form-control\" name=\"country\" type=\"text\" /> */}\n                                <select className=\"form-control mt-1\" name=\"country\" defaultValue={modalLocation.country} onChange={onModalInputChange} required>\n                                    <option>--SELECT--</option>\n                                    {country.data.countries.map(country => (\n                                        <option key={country.id} value={country.id}>{country.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">State</label>\n                                {/* <input defaultValue={modalLocation.state} onChange={onModalInputChange} className=\"form-control\" name=\"state\" type=\"text\" /> */}\n                                <select defaultValue={modalLocation.state} onChange={onModalInputChange} name=\"state\" className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {country.data.states.map(state => (\n                                        <option key={state.id} value={state.id}>{state.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">City</label>\n                                {/* <input defaultValue={modalLocation.city} onChange={onModalInputChange} className=\"form-control\" name=\"city\" type=\"text\" /> */}\n                                <select defaultValue={modalLocation.city} onChange={onModalInputChange} className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {country.data.cities.map(city => (\n                                        <option key={city.id} value={city.id}>{city.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">District</label>\n                                <input defaultValue={modalLocation.district} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"district\" type=\"text\" required  pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\"/>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Taluka</label>\n                                <input defaultValue={modalLocation.taluka} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"taluka\" type=\"text\" required  pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\"/>\n                            </div>\n                            </div><br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n                    \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <br/><h4 className=\"text-center\">LOCATION MASTER</h4>\n<br/>\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Country</label>\n                            {/* <select onChange={onCountryChange} name=\"country\" className=\"form-select  mt-1\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {country.data.countries.map(country => (\n                                    <option key={country.id} value={country.id}>{country.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"country\"\n                                options={country_options}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">State</label>\n                            {/* <select onChange={onStateChange} name=\"state\" className=\"form-select  mt-1\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {selectedState === undefined ? '' : selectedState.map(state => (\n                                    <option key={state.id} value={state.id}>{state.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"state\"\n                                options={selectedState}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"field col-md-6 \">\n                            <label className=\"required\">City</label>\n                            {/* <select className=\"form-select mt-1\" name=\"city\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {selectedCity === undefined ? '' : selectedCity.map(city => (\n                                    <option key={city.id} value={city.id}>{city.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"state\"\n                                options={selectedCity}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                        <div className=\"field col-md-6 \">\n                            <label className=\"required\">District</label>\n                            <input onChange={(e) => { setSelectedDistrict(e.target.value) }} type=\"text\" name=\"district\" className=\"form-control mt-1\" placeholder=\"enter district\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Taluka</label>\n                            <input onChange={(e) => { setSelectedTaluka(e.target.value) }} type=\"text\" name=\"taluka\" className=\"form-control mt-1\" placeholder=\"enter taluka\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div>\n                    <br/>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br/>\n                        <br/>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                    </div>\n                </form>\n            </Card>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst INSERT_CUSTOMER = gql`\nmutation MyMutation( $contact_person: String = \"\", $email_id: String = \"\", $gst_no: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\", $res_address: String = \"\",$State:Int!,$District:Int!,$Subdistrict:Int!) {\n    insert_customer_master_one(object: {contact_person: $contact_person, email_id: $email_id, gst_no: $gst_no, mobile_no: $mobile_no, name: $name, pan: $pan, res_address: $res_address,State:$State,District:$District,Subdistrict:$Subdistrict}) {\n      id\n    }\n  }  \n`\nconst READ_CUSTOMER = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    customer_master(where: {isDeleted: {_eq: $_eq}}) {\n      District\n      State\n      Subdistrict\n      contact_person\n      email_id\n      gst_no\n      id\n      isDeleted\n      mobile_no\n      name\n      pan\n      res_address\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n    }\n  }  \n`\nconst UPDATE_CUSTOMER = gql`\nmutation MyMutation($id: Int = 10, $contact_person: String = \"\",  $email_id: String = \"\", $gst_no: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\", $res_address: String = \"\",$State:Int!,$District:Int!,$Subdistrict:Int!) {\n    update_customer_master_by_pk(pk_columns: {id: $id}, _set: {cities: $cities, contact_person: $contact_person, email_id: $email_id, gst_no: $gst_no, mobile_no: $mobile_no, name: $name, pan: $pan, res_address: $res_address,State:$State,District:$District,Subdistrict:$Subdistrict}) {\n      id\n    }\n  }\n  \n`\n\n// const DELETE_CUSTOMER = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_customer_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n\n// `\n\nconst DELETE_CUSTOMER = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_customer_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n`\nconst READ_GEOLOCATIONS = gql`\nquery MyQuery {\n    geo_locations {\n      external_id\n      id\n      location_type\n      name\n      parent_id\n      pin\n    }\n  }  \n`\n\nexport default function Customer_Master() {\n    const [customValidity, setCustomValidity] = useState();\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [name, setName] = useState();\n    const [contact_person, setContact_person] = useState();\n    const [mobile_no, setMobile_no] = useState();\n    const [email_id, setEmail_id] = useState();\n    const [gst_no, setGst_no] = useState();\n    const [pan, setPan] = useState();\n    const [res_address, setRes_address] = useState();\n    const [state, setState] = useState();\n    const [district, setDistrict] = useState();\n    const [subdistrict, setSubdistrict] = useState();\n\n    const [modalId, setModalId] = useState();\n    const [modalName, setModalName] = useState();\n    const [modalContact_person, setModalContact_person] = useState();\n    const [modalMobile_no, setModalMobile_no] = useState();\n    const [modalEmail_id, setModalEmail_id] = useState();\n    const [modalGst_no, setModalGst_no] = useState();\n    const [modalPan, setModalPan] = useState();\n    const [modalRes_address, setModalRes_address] = useState();\n    const [modalState, setModalState] = useState();\n    const [modalDistrict, setModalDistrict] = useState();\n    const [modalSubdistrict, setModalSubdistrict] = useState();\n\n    //Queries\n    const [insert_customer] = useMutation(INSERT_CUSTOMER);\n    const [update_customer] = useMutation(UPDATE_CUSTOMER);\n    const [delete_customer] = useMutation(DELETE_CUSTOMER);\n    const read_customer = useSubscription(READ_CUSTOMER);\n    const read_geolocations = useQuery(READ_GEOLOCATIONS);\n    //Loader\n    if (read_customer.loading||read_geolocations.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    // const onInputChange = (e) => {\n    //     setCustomer({ ...customer, [e.target.name]: e.target.value });\n    // }\n    const onNameChange = (e) => {\n        setName(e.target.value);\n    }\n    const onContact_personChange = (e) => {\n        setContact_person(e.target.value);\n    }\n    const onMobile_noChange = (e) => {\n        setMobile_no(e.target.value);\n    }\n    const onEmail_idChange = (e) => {\n        setEmail_id(e.target.value);\n    }\n    const onGst_noChange = (e) => {\n        setGst_no(e.target.value);\n    }\n    const onPanChange = (e) => {\n        setPan(e.target.value);\n    }\n\n    const onRes_addressChange = (e) => {\n        setRes_address(e.target.value);\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id);\n    }\n    const onDistrictChange = (district_data) => {\n        setDistrict(district_data.id);\n    }\n    const onSubdistrictChange = (subdistrict_data) => {\n        setSubdistrict(subdistrict_data.id);\n    }\n    //Modal Form Data\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value);\n    }\n    const onModalNameChange = (e) => {\n        setModalName(e.target.value);\n    }\n    const onModalContact_personChange = (e) => {\n        setModalContact_person(e.target.value);\n    }\n    const onModalMobile_noChange = (e) => {\n        setModalMobile_no(e.target.value);\n    }\n    const onModalEmail_idChange = (e) => {\n        setModalEmail_id(e.target.value);\n    }\n    const onModalGst_noChange = (e) => {\n        setModalGst_no(e.target.value);\n    }\n    const onModalPanChange = (e) => {\n        setModalPan(e.target.value);\n    }\n\n    const onModalRes_addressChange = (e) => {\n        setModalRes_address(e.target.value);\n    }\n    const onModalStateChange = (e) => {\n        setModalState(e.target.value);\n    }\n    const onModalDistrictChange = (e) => {\n        setModalDistrict(e.target.value);\n    }\n    const onModalSubdistrictChange = (e) => {\n        setModalSubdistrict(e.target.value);\n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(customer);\n        insert_customer({ variables: { name: name, res_address: res_address, contact_person: contact_person, mobile_no: mobile_no, email_id: email_id, gst_no: gst_no, pan: pan, State: state, District: district, Subdistrict: subdistrict } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalId(row.id)\n        setModalName(row.name)\n        setModalContact_person(row.contact_person)\n        setModalMobile_no(row.mobile_no)\n        setModalEmail_id(row.email_id)\n        setModalGst_no(row.gst_no)\n        setModalPan(row.pan)\n        setModalRes_address(row.res_address)\n        setModalState(row.State)\n        setModalDistrict(row.District)\n        setModalSubdistrict(row.Subdistrict)\n    }\n    // const onModalInputChange = (e) => {\n    //     setModalCustomer({ ...modalCustomer, [e.target.name]: e.target.value })\n    // }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_customer({ variables: { id: modalId, name: modalName, res_address: modalRes_address, contact_person: modalContact_person, mobile_no: modalMobile_no, email_id: modalEmail_id, gst_no: modalGst_no, pan: modalPan, State: modalState, District: modalDistrict, Subdistrict: modalSubdistrict } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_customer({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n\n        {\n            field: 'mobile_no',\n            headerName: 'Mobile Number',\n            width: 190\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email ID',\n            width: 160\n        },\n        {\n            field: 'contact_person',\n            headerName: 'Contact Person',\n            width: 190\n        },\n        {\n            field: 'gst_no',\n            headerName: 'GST Number',\n            width: 160\n        },\n        {\n            field: 'pan',\n            headerName: 'PAN Number',\n            width: 160\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160\n        },\n        {\n            field: 'District',\n            headerName: 'District',\n            width: 160\n        },\n        {\n            field: 'Subdistrict',\n            headerName: 'Subdistrict',\n            width: 160\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_customer.data.customer_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    //console.log(rows);\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Customer</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Name</label>\n                                <input defaultValue={modalName} onChange={onModalNameChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Contact Person</label>\n                                <input defaultValue={modalContact_person} onChange={onModalContact_personChange} className=\"form-control mt-1\" name=\"contact_person\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Mobile Number</label>\n                                <input defaultValue={modalMobile_no} onChange={onModalMobile_noChange} className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Email ID</label>\n                                <input defaultValue={modalEmail_id} onChange={onModalEmail_idChange} className=\"form-control mt-1\" name=\"email_id\" type=\"email\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">PAN Number</label>\n                                <input defaultValue={modalPan} onChange={onModalPanChange} className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan\" name=\"pan\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">GST Number</label>\n                                <input defaultValue={modalGst_no} onChange={onModalGst_noChange} className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid pan\" name=\"pan\" type=\"text\" required />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">State</label>\n                                {/* <Select\n                                    name=\"state\"\n                                    defaultValue={modalState}\n                                    options={\n                                        read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                    }\n                                    onChange={onModalStateChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                /> */}\n                                <select className='form-control' name=\"state\" defaultValue={modalState} onChange={onModalStateChange}>\n                                    <option>Select...</option>\n                                    {\n                                        read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\")).map((state)=>(\n                                            <option key={state.id} value={state.id}>{state.name}</option>\n                                        ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">District</label>\n                                {/* <Select\n                                    name=\"district\"\n                                    options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                        if (currentElement.location_type === \"DISTRICT\" && currentElement.parent_id === state) {\n                                            //console.log(currentElement);\n                                            return currentElement;\n                                        }\n                                    }\n                                    )}\n                                    onChange={onModalDistrictChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                /> */}\n                                <select className='form-control' defaultValue={modalDistrict} name=\"district\" onChange={onModalDistrictChange}>\n                                    <option>Select...</option>\n                                    {\n                                        read_geolocations.data.geo_locations.filter((districts) => districts.location_type.includes(\"DISTRICT\")).map((district)=>(\n                                            <option key={district.id} value={district.id}>{district.name}</option>\n                                        ))\n                                    }\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Subdistrict</label>\n                                <select className='form-control' defaultValue={modalSubdistrict} name=\"subdistrict\" onChange={onModalSubdistrictChange}>\n                                    <option>Select...</option>\n                                    {\n                                        read_geolocations.data.geo_locations.filter((subdistricts) => subdistricts.location_type.includes(\"DISTRICT\")).map((subdistrict)=>(\n                                            <option key={subdistrict.id} value={subdistrict.id}>{subdistrict.name}</option>\n                                        ))\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Resident Address</label>\n                                <input defaultValue={modalRes_address} onChange={onModalRes_addressChange} className=\"form-control\" name=\"res_address\" type=\"text\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <h4 className=\"text-center\">CUSTOMER MASTER</h4>\n\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Name</label>\n                            <input placeholder=\"enter name\" onChange={onNameChange} type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            <span ></span>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Contact Person</label>\n                            <input onChange={onContact_personChange} placeholder=\"enter contact person\" type=\"text\" name=\"contact_person\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input onChange={onMobile_noChange} placeholder=\"enter mobile number\" type=\"tel\" name=\"mobile_no\" className=\"form-control mt-1\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input onChange={onEmail_idChange} placeholder=\"enter email id\" type=\"email\" name=\"email_id\" className=\"form-control mt-1\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">GST Number</label>\n                            <input onChange={onGst_noChange} placeholder=\"enter gst number\" type=\"text\" name=\"gst_no\" className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">PAN Number</label>\n                            <input onChange={onPanChange} placeholder=\"enter pan number\" type=\"text\" name=\"pan\" className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan\" required />\n                        </div>\n                    </div><br />\n                    <h5 style={{ textAlign: 'center' }}>Address</h5>\n                    <div className='row'>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            <Select\n                                name=\"state\"\n                                options={\n                                    read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                }\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">District</label>\n                            <Select\n                                name=\"district\"\n                                options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"DISTRICT\" && currentElement.parent_id === state) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onDistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Subdistrict</label>\n                            <Select\n                                name=\"subdistrict\"\n                                options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"SUBDISTRICT\" && currentElement.parent_id === district) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onSubdistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div>\n                    {/* <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            \n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                           \n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            \n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br /> */}\n                    <br />\n                    <div className=\"row\">\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Residential Address</label>\n                            <input onChange={onRes_addressChange} type=\"text\" name=\"res_address\" className=\"form-control\" placeholder=\"enter residential address\" />\n                        </div>\n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type=\"reset\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n// import Button from '@restart/ui/esm/Button';\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getMedia_Type = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    media_type_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      media_type\n    }\n  }\n  \n`\nconst DELETE_MEDIA = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_media_type_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n       \n`\nconst INSERT_MEDIA = gql`\nmutation MyMutation($media_type: String = \"\") {\n    insert_media_type_master_one(object: {media_type: $media_type}) {\n      media_type\n    }\n  }\n`\nconst UPDATE_MEDIA = gql`\nmutation MyMutation($id: Int = 0, $media_type: String = \"\") {\n    update_media_type_master_by_pk(pk_columns: {id: $id}, _set: {media_type: $media_type}) {\n      id\n    }\n  }  \n`\nfunction Media_Type_Master() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [mediaType, setMediaType] = useState({\n        media_type: '',\n    }\n    )\n\n    const [modelMediaType, setModelMediaType] = useState({\n        id: '',\n        media_type: '',\n    }\n    )\n    const onInputChange = (e) => {\n        setMediaType({ ...mediaType, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target[0].value)\n        insert_employee({ variables: { media_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setModelMediaType({\n            id: row.id,\n            media_type: row.media_type\n        })\n    }\n    const onModalInputChange = (e) => {\n        setModelMediaType({ ...modelMediaType, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_media({ variables: { id: modelMediaType.id, media_type: modelMediaType.media_type } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const [insert_employee] = useMutation(INSERT_MEDIA);\n    const [update_media] = useMutation(UPDATE_MEDIA);\n    const [delete_media_type_master] = useMutation(DELETE_MEDIA);\n    const onDelete = (id) => {\n        console.log(id);\n        delete_media_type_master({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const getMedia = useSubscription(getMedia_Type);\n    if (getMedia.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getMedia.error) {\n        return \"error\" + getMedia.error;\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'media_type',\n            headerName: 'Media Type',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { onEdit(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    const deleteVehicle = (row) => {\n\n    }\n    // const rows = [\n    //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n\n    //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    // ];\n    console.log(getMedia.data);\n    const rows = getMedia.data.media_type_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Media Type Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modelMediaType.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">Media Types</label>\n                                        <input defaultValue={modelMediaType.media_type} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"media_type\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>MEDIA TYPE MASTER</h3>\n\n<br/>\n                            <form className=\"form-group\" onSubmit={onFormSubmit}>\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Media Types</label>\n                                        <input placeholder=\"enter media types\" onChange={onInputChange} className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"media_type\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}\nexport default Media_Type_Master;","import React, { useState } from 'react'\n// import { DataGrid } from '@material-ui/data-grid';\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { OndemandVideoTwoTone } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nconst getSize_MasterQuery = gql` \nsubscription MySubscription {\n  \n  size_master {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst Size_MasterQuery = gql`\nsubscription MySubscription {\n  size_master {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst insert_size_MasterQuery = gql`\nmutation MyMutation($height: String = \"\", $no_of_display: String = \"\", $width: String = \"\") {\n  insert_size_master(objects: {height: $height, no_of_display: $no_of_display, width: $width}) {\n    affected_rows\n  }\n}`\n\nconst Delete_size_MasterQuery = gql`\nmutation MyMutation($id:Int=0){\n  delete_size_master_by_pk(id:$id) {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst UPDATE_SIZE = gql`\nmutation MyMutation($height: String = \"\", $id: Int = 0, $no_of_display: String = \"\", $width: String = \"\") {\n  update_size_master_by_pk(pk_columns: {id: $id}, _set: {height: $height, no_of_display: $no_of_display, width: $width}) {\n    id\n  }\n}\n`\n\n\n\n\nexport default function Franchise_Management() {\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [modalSize, setModalSize] = useState({\n    id: '',\n    width: '',\n    height: '',\n    no_of_display: ''\n  });\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(e.target)\n    insert_size_masterData({ variables: { width: e.target[0].value, height: e.target[1].value, no_of_display: e.target[2].value } })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n  const onDelete = (id) => {\n    console.log(id);\n    delete_size_masterData({ variables: { id: id } });\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalSize({\n      id: row.id,\n      width: row.width,\n      height: row.height,\n      no_of_display: row.no_of_display\n    })\n  }\n  const onModalInputChange = (e) => {\n    setModalSize({ ...modalSize, [e.target.name]: e.target.value });\n  }\n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modalSize);\n    update_size({ variables: { id: modalSize.id, width: modalSize.width, height: modalSize.height, no_of_display: modalSize.no_of_display } })\n    toast.configure();\n    toast.warning('Successfully Updated')\n    handleClose();\n  }\n  const [insert_size_masterData] = useMutation(insert_size_MasterQuery);\n  const [delete_size_masterData] = useMutation(Delete_size_MasterQuery);\n  const [update_size] = useMutation(UPDATE_SIZE);\n\n\n  const getSize = useSubscription(getSize_MasterQuery);\n  if (getSize.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n  }\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'width', headerName: 'Width', width: 200 },\n\n    { field: 'height', headerName: 'Height', width: 200, },\n\n    { field: 'no_of_display', headerName: 'Number of display', width: 200, },\n\n    // { field: 'country', headerName: 'country', width: 170, },\n\n\n    // { field: 'state', headerName: 'state', width: 170, },\n    // { field: 'district', headerName: 'district', width: 170, },\n    // { field: 'taluka', headerName: 'taluka', width: 170, },\n    // { field: 'mobile no', headerName: 'mobile no', width: 170, },\n    // { field: 'email', headerName: 'email', width: 170, },\n    // { field: 'gst no', headerName: 'gst no', width: 170, },\n    // { field: 'pan', headerName: 'pan', width: 170, },\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} ><i className=\"bi bi-trash-fill\"></i></button>\n\n          </div>\n        );\n      }\n    },\n\n\n  ];\n\n  console.log(getSize.data);\n  const rows = getSize.data.size_master;\n\n  return (\n\n    <div>\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title style={{ marginLeft: \"130px\" }}>Edit Size Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          \n            <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n              <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">ID</label>\n                <input defaultValue={modalSize.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Height</label>\n                <input defaultValue={modalSize.height} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"height\" type=\"number\" required />\n              </div>\n              </div>\n              <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Width</label>\n                <input defaultValue={modalSize.width} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"width\" type=\"number\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">No Of Display</label>\n                <input defaultValue={modalSize.no_of_display} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"no_of_display\" type=\"number\" required />\n              </div>\n              </div>\n              <div className=\"field col-md-6\">\n                <button className=\"btn btn-primary mt-3\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n              </div>\n            </form>\n       \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br/>\n        <h4 className=\"text-center\"> SIZE MASTER</h4>\n\n<br/>\n        <form onSubmit={onFormSubmit} className=\"form-group\">\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Width (In Feet)</label>\n              <input placeholder=\"enter width\" className=\"form-control mt-1\" name=\"width\" type=\"number\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Height (In Feet)</label>\n              <input placeholder=\"enter height\" className=\"form-control mt-1\" name=\"height\" type=\"number\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Number of Display</label>\n              <input placeholder=\"enter number of display\" className=\"form-control mt-1\" name=\"no_of_display\" type=\"number\" required />\n            </div>\n          </div>\n<br/>\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n            <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n            <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n            {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n          </div>\n          <br/>\n        </form>\n\n        {/* <div style={{ height: 500, width: '100%' }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={10}\n          rowsPerPageOptions={[10]}\n          checkboxSelection={false}\n          // components={{\n          //   Toolbar: GridToolbar,\n          // }}\n          style={{borderTop: '4px solid #05386b'}}\n          disableSelectionOnClick\n        />\n      </div> */}\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n\n    </div>\n\n\n\n\n  )\n}","import React, { useState } from 'react';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\n// import { Divider } from '@material-ui/core';\nimport Card from '@mui/material/Card';\nimport {\n    useMutation,\n    useQuery,\n    gql,\n    useSubscription\n} from \"@apollo/client\";\nimport { Delete, Edit } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n\n\nconst getIndustry_master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  industry_master(where: {isDeleted: {_eq: $_eq}}){\n    id\n    industry_type\n  }\n}\n`\nconst Industry_MasterQuery = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  industry_master(where: {isDeleted: {_eq: $_eq}}){\n    id\n    industry_type\n  }\n}`\n\nconst insert_Industry_MasterQuery = gql\n    `mutation MyMutation($industry_type: String = \"\") {\n  insert_industry_master_one(object: { industry_type: $industry_type}) {\n    id\n    industry_type\n  }\n}\n`\n\n// const delete_Industry_masterQuery = gql`\n// mutation MyMutation($id:Int=0) {\n//   delete_industry_master_by_pk(id:$id) {\n//     id\n//     industry_type\n//   }\n// }`\n\nconst delete_Industry_masterQuery = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_industry_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\n\n\nconst update_Industry_masterQuery = gql`\nmutation MyMutation($id: Int = 0, $industry_type: String = \"\") {\n  update_industry_master_by_pk(pk_columns: {id: $id}, _set: {industry_type: $industry_type}) {\n    id\n    industry_type\n  }\n}\n\n`\n\n\nconst rows = [\n    { id: 1, Name: '10', Address: 'prajakta', },\n    { id: 2, Role: '28', Franchise: 'Cersei' },\n    { id: 3, Role: '30', Franchise: 'Jaime' },\n    { id: 4, Role: '40', Franchise: 'Arya' },\n    { id: 5, Role: '50', Franchise: 'Daenerys' },\n\n];\n\nfunction Industry_Master() {\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [ModalIndustry, setModalIndustry] = useState({\n        id: '',\n        industry_type: ''\n    });\n\n    const [insert_Industry] = useMutation(insert_Industry_MasterQuery);\n    const [delete_Industry_masterData] = useMutation(delete_Industry_masterQuery);\n    const [update_Industry_masterData] = useMutation(update_Industry_masterQuery);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        insert_Industry({ variables: { industry_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n\n    const getIndustry = useSubscription(getIndustry_master);\n    if (getIndustry.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onDelete = (id) => {\n        console.log(id);\n        delete_Industry_masterData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const onEdit = (row) => {\n        handleShow();\n        setModalIndustry({\n            id: row.id,\n            industry_type: row.industry_type\n        })\n    }\n\n    const onModalInputChange = (e) => {\n        setModalIndustry({ ...ModalIndustry, [e.target.name]: e.target.value });\n    }\n\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(ModalIndustry);\n        update_Industry_masterData({ variables: { id: ModalIndustry.id, industry_type: ModalIndustry.industry_type } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const editVehicle = (row) => {\n        handleShow();\n        setModalIndustry({\n            id: row.id,\n            industry_type: row.industry_type\n        })\n    }\n\n    const deleteVehicle = (row) => {\n\n    }\n    const columns = [\n        {field:'sl',headerName:'Serial No'},\n        { field: 'id', headerName: 'ID', width: 100 },\n\n        { field: 'industry_type', headerName: 'Industry Type', width: 200 },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\" onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '40%' }} className=\"btn btn-danger\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n\n    ];\n    console.log(getIndustry.data);\n    \n    const rows = getIndustry.data.industry_master;\n    let newData = [];\n    rows.map((item, index) => {\n            newData.push({sl: index + 1, ...item});\n        });\n    return (\n        <>\n\n            <div className=\"container\">\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Industry Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={ModalIndustry.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                                </div>\n\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Industry Type</label>\n                                    <input defaultValue={ModalIndustry.industry_type} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"industry_type\" type=\"text\" />\n                                </div>\n                            </div>\n                            <br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form onSubmit={onFormSubmit} className='form-group'>\n                    <div className=\"col-md-12\">\n                        <br/>\n                        <h4 style={{ width: '100%', textAlign: 'center' }}>INDUSTRY MASTER</h4>\n<br/>\n                        {/* <Divider style={{ marginBottom: '8px', }} /> */}\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                {/* <label> Franchise Name</label> */}\n\n                                {/* <input className=\"form-control \" name=\"licence\" type =\"text\" placeholder='Enter franchise name' required /> */}\n                            </div>\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\"> Industry Type</label>\n                                <input placeholder=\"enter industry type\" className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"licence\" type=\"text\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets\"/>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n<br/>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n                    </div>\n                    <br/>\n                </form>\n            </Card>\n            <br />\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                marginTop: \"2px\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                          Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n\n\n        </>\n\n    );\n}\nexport default Industry_Master;","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport gql from 'graphql-tag';\nimport { Card, CircularProgress } from '@material-ui/core';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n//import { GridToolbar } from '@mui/x-data-grid';\n\nexport default function GST_Type_Master() {\n    const [id, setId] = useState()\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [GST, setGST] = useState({\n        cgst: '',\n        sgst: '',\n        igst: '',\n    })\n    const [updateGST, setUpdateGST] = useState({\n        id: id,\n        cgst: '',\n        sgst: '',\n        igst: '',\n    })\n    const GST_MASTER_QUERY = gql`\n    subscription MySubscription($_eq: String = \"false\"){\n        gst_master(where: {isDeleted: {_eq: $_eq}}) {\n          cgst\n          sgst\n          igst\n          id\n        }\n      }      \n    `;\n\n    const GST_MASTER_Insertion = gql`\n    mutation MyMutation($cgst: String = \"\", $igst: String = \"\", $sgst: String = \"\") {\n        insert_gst_master(objects: {cgst: $cgst, igst: $igst, sgst: $sgst}) {\n          affected_rows\n        }\n      }      \n    `;\n\n    const GST_MASTER_Update = gql`\n    mutation MyMutation($id: Int = 10, $cgst: String = \"\", $igst: String = \"\", $sgst: String = \"\") {\n        update_gst_master_by_pk(pk_columns: {id: $id}, _set: {cgst: $cgst, igst: $igst, sgst: $sgst}) {\n          id\n        }\n      }      \n    `;\n\n    // const GST_MASTER_Delete = gql`\n    // mutation MyMutation($id: Int!) {\n    //     delete_gst_master_by_pk(id: $id) {\n    //       id\n    //     }\n    // }\n    //   `;\n    const GST_MASTER_Delete = gql`\n    mutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n        update_gst_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n          isDeleted\n        }\n      }      \n    `\n    const Datatable = useSubscription(GST_MASTER_QUERY);\n    const [insertGSTMaster] = useMutation(GST_MASTER_Insertion);\n    const [updateGSTMaster] = useMutation(GST_MASTER_Update);\n    const [deleteGSTMaster] = useMutation(GST_MASTER_Delete);\n\n    if (Datatable.loading) {\n        return (\n            <div className='App' style={{ marginTop: '20%', }}><CircularProgress /></div>\n        )\n    }\n    if (Datatable.error) {\n        return (\n            <>Error.</>\n        )\n    }\n    const rows = Datatable.data.gst_master;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n\n    const onInputChange = (e) => {\n        e.preventDefault();\n        setGST({ ...GST, [e.target.name]: e.target.value })\n    }\n\n    const onModalInputChange = (e) => {\n        e.preventDefault();\n        setUpdateGST({ ...updateGST, [e.target.name]: e.target.value })\n    }\n\n    const onModalSubmit = (e) => {\n        e.preventDefault();\n        updateGSTMaster({\n            variables: updateGST,\n        });\n        handleClose();\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(GST);\n        insertGSTMaster(\n            {\n                variables: GST\n            }\n        );\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n    const editVehicle = (row) => {\n        setId(row.id);\n        console.log(id);\n        setUpdateGST(\n            {\n                id: row.id,\n                cgst: row.cgst,\n                sgst: row.sgst,\n                igst: row.igst,\n            }\n        )\n        handleShow();\n    }\n\n    const deleteVehicle = (id) => {\n        deleteGSTMaster({\n            variables: {id: id},\n        })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'cgst',\n            headerName: 'CGST',\n            width: 190,\n            hide: false,\n        },\n        {\n            field: 'sgst',\n            headerName: 'SGST',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'igst',\n            headerName: 'IGST',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 170,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"150%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button style={{ marginRight: '10%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                deleteVehicle(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n    ];\n\n    // const rows = [\n    //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    // ];\n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header >\n                        <Modal.Title>Edit GST Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalSubmit}>\n\n                                {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                <div className=\"row\" >\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">CGST</label>\n                                        <input defaultValue={updateGST.cgst} className=\"form-control mt-1\" name=\"cgst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">SGST</label>\n                                        <input defaultValue={updateGST.sgst} className=\"form-control mt-1\" name=\"sgst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">IGST</label>\n                                        <input defaultValue={updateGST.igst} className=\"form-control mt-1\" name=\"igst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                </div><br />\n                                 <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                            </form>\n                    \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                   <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>ADD GST DETAILS</h3>\n                            <br/>\n                                <form className=\"form-group\" onSubmit={onSubmit}>\n\n                                    {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                    <div className=\"row mt-3\" >\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">CGST</label>\n                                            <input placeholder=\"enter cgst\" className=\"form-control mt-1\" name=\"cgst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">SGST</label>\n                                            <input placeholder=\"enter sgst\" className=\"form-control mt-1\" name=\"sgst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">IGST</label>\n                                            <input placeholder=\"enter igst\" className=\"form-control mt-1\" name=\"igst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                    </div>\n                                    <br/>\n                                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                                    </div>\n                                    <br/>\n                                </form>\n                            \n\n\n\n                \n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n  \n\n                        disableSelectiononChange\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\nimport {\n    gql,\n    useQuery,\n    useMutation,\n    useSubscription,\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Card } from '@material-ui/core';\nimport { toast } from 'react-toastify';\n\nconst LABOUR_MASTER_QUERY = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labor_master(where: {isDeleted: {_eq: $_eq}}){\n      address\n      gst_no\n      id\n      labor_type\n      mobile_no\n      name\n      pan\n      labour_category_master {\n        labour_category\n      }\n      bank_master {\n        account_no\n        bank_name\n        ifsc_code\n        branch_name\n      }\n      bank_id \n    }\n\n\n\n}      \n`;\nconst LABOUR_MASTER_Insertion = gql`\nmutation MyMutation($account_no: String = \"\", $bank_name: String = \"\", $branch_name: String = \"\", $ifsc_code: String = \"\", $address: String = \"\", $gst_no: String = \"\", $labor_type: Int!, $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\") {\n    insert_labor_master(objects: {address: $address, gst_no: $gst_no, labor_type: $labor_type, mobile_no: $mobile_no, name: $name, pan: $pan, bank_master: {data: {account_no: $account_no, bank_name: $bank_name, branch_name: $branch_name, ifsc_code: $ifsc_code}}}) {\n      affected_rows\n    }\n  }        \n`;\n\nconst LABOUR_MASTER_Update = gql`\nmutation MyMutation($id: Int = 10, $address: String = \"\", $gst_no: String = \"\", $labor_type: Int!, $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\") {\n    update_labor_master_by_pk(pk_columns: {id: $id}, _set: {address: $address, gst_no: $gst_no, labor_type: $labor_type, mobile_no: $mobile_no, name: $name, pan: $pan}) {\n      id\n    }\n  }            \n`\n// const LABOUR_MASTER_Delete = gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_labor_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n// `\n\nconst LABOUR_MASTER_Delete = gql`\nmutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n    update_labor_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }   \n`\n\nconst Read_Labour_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n`\n\n\n\n\n\n\nexport default function Labour_Master() {\n    const [id, setId] = useState()\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [labour, setLabour] = useState({\n        address: '',\n        gst_no: '',\n        labor_type: '',\n        mobile_no: '',\n        name: '',\n        pan: '',\n        account_no: '',\n        bank_name: '',\n        ifsc_code: '',\n        branch_name: '',\n    })\n    const [updateLabor, setUpdateLabor] = useState({\n        id: id,\n        address: '',\n        gst_no: '',\n        labor_type: '',\n        mobile_no: '',\n        name: '',\n        pan: '',\n        account_no: '',\n        bank_name: '',\n        ifsc_code: '',\n        branch_name: '',\n    })\n\n\n\n\n\n\n    const Datatable = useSubscription(LABOUR_MASTER_QUERY);\n    const [insertLabourMaster] = useMutation(LABOUR_MASTER_Insertion);\n    const [updateLabourMaster] = useMutation(LABOUR_MASTER_Update);\n    const [deleteLabourMaster] = useMutation(LABOUR_MASTER_Delete);\n\n\n    const read_labour = useSubscription(Read_Labour_Master);\n\n\n    if (Datatable.loading || read_labour.loading) {\n        return (\n            <div className='App' style={{ marginTop: '20%', }}><CircularProgress /></div>\n        )\n    }\n    if (Datatable.error) {\n        return \"Error\" + Datatable.error;\n    }\n    //const rows = Datatable.data.labor_master;\n    const rows = Datatable.data.labor_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n\n    const onInputChange = (e) => {\n        console.log(e.target.value)\n        e.preventDefault();\n        setLabour({ ...labour, [e.target.name]: e.target.value })\n    }\n    const onModalInputChange = (e) => {\n        e.preventDefault();\n        setUpdateLabor({ ...updateLabor, [e.target.name]: e.target.value })\n    }\n\n    const onModalSubmit = (e) => {\n        console.log(updateLabor)\n        e.preventDefault();\n        updateLabourMaster({\n            variables: updateLabor,\n        });\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(labour);\n        insertLabourMaster(\n            { variables: labour }\n        )\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const editVehicle = (row) => {\n        setId(row.id);\n        setUpdateLabor({\n            id: row.id,\n            address: row.address,\n            gst_no: row.gst_no,\n            labor_type: row.labor_type,\n            mobile_no: row.mobile_no,\n            name: row.name,\n            pan: row.pan,\n            account_no: row.account_no,\n            bank_name: row.bank_name,\n            ifsc_code: row.ifsc_code,\n            branch_name: row.branch_name,\n        });\n        handleShow();\n    }\n\n    const deleteVehicle = (id) => {\n        console.log(id);\n        deleteLabourMaster({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'labor_type',\n            headerName: 'Labour Type',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labour_category_master.labour_category;\n            },\n            editable: false,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'mobile_no',\n            headerName: 'Contact Number',\n            width: 190,\n            editable: false,\n        },\n        {\n            field: 'address',\n            headerName: 'Address',\n            width: 190,\n            editable: false,\n        },\n        {\n            field: 'gst_no',\n            headerName: 'GST Number',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'pan',\n            headerName: 'PAN Number',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.bank_name;\n            },\n            editable: false,\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.branch_name;\n            },\n            editable: false,\n        },\n        {\n            field: 'ifsc_code',\n            headerName: 'IFSC',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.ifsc_code;\n            },\n            editable: false,\n        },\n        {\n            field: 'account_no',\n            headerName: 'Account Number',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.account_no;\n            },\n            editable: false,\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"150%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '20%' }} onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button style={{ marginRight: '30%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                console.log(\"----\" + params.row.id);\n                                deleteVehicle(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Labour Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className='card card-primary card-outline' style={{ padding: '20px' }}>\n                            <form className=\"form-group\" onSubmit={onModalSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Labour_Category</label>\n                                        <select placeholder=\"enter labour category\" onChange={onModalInputChange} defaultValue={updateLabor.labor_type} type=\"text\" name=\"labor_type\" className=\"form-control mt-1\" placeholder=\"enter labour category\"  required=\"required\">\n                                            <option>--SELECT--</option>\n                                            {read_labour.data.labour_category_master.map(Labour_Category => (\n                                                <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Name</label>\n                                        <input placeholder=\"enter name\" defaultValue={updateLabor.name} className=\"form-control mt-1\" name=\"name\" type=\"text\" onChange={onModalInputChange} pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Contact Number</label>\n                                        <div style={{ display: 'flex' }}>\n                                            <input placeholder=\"enter contact number\" defaultValue={updateLabor.mobile_no} className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\" onChange={onModalInputChange} required pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                                            {/* <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button> */}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">GST Number</label>\n                                        <input defaultValue={updateLabor.gst_no} className=\"form-control mt-1\" name=\"gst_no\" placeholder=\"enter gst number\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    {/* <div className=\"field col-md-6\">\n                                        <label>Enter OTP</label>\n                                        <input className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Please Enter Your OTP' />\n                                    </div> */}\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">PAN Number</label>\n                                        <input defaultValue={updateLabor.pan} className=\"form-control mt-1\" name=\"pan\" placeholder=\"enter pan number\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Address</label>\n                                        <input defaultValue={updateLabor.address} className=\"form-control mt-1\" name=\"address\" placeholder=\"enter address\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n\n                                </div>\n                                {/* <h5 style={{ width: '100%', textAlign: 'center' }}>BANK DETAILS</h5> */}\n                                {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                {/* <div className=\"row mt-3\" >\n                                    <div className=\"field col-md-4\">\n                                        <label>Bank Name</label>\n                                        <input className=\"form-control\" name=\"bank_name\" type=\"text\" placeholder='enter your bank name' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label>Branch Name</label>\n                                        <input className=\"form-control\" name=\"branch_name\" type=\"text\" placeholder='enter branch name' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label>IFSC</label>\n                                        <input className=\"form-control\" name=\"ifsc_code\" type=\"text\" placeholder='enter your IFSC number' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4 mt-3\">\n                                        <label>Account Number</label>\n                                        <input className=\"form-control\" name=\"account_no\" type=\"text\" placeholder='enter your account number' onChange={onModalInputChange} required />\n                                    </div>\n                                </div> */}\n                                <br />\n                                {/* <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}> */}\n                                <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Update</button>\n                                {/* <button className=\"btn btn-primary\" type='reset'>Reset</button> */}\n                                {/* </div> */}\n                            </form>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <br />\n                    <h4 style={{ width: '100%', textAlign: 'center' }}>LABOUR MASTER</h4>\n\n                    <br />\n\n                    <form className=\"form-group\" onSubmit={onSubmit}>\n                        <div className=\"row\">\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Labour Category</label>\n                                <select onChange={onInputChange} name=\"labor_type\" className=\"form-control mt-1\"  required>\n                                    <option value=\"\">Select...</option>\n                                    {read_labour.data.labour_category_master.map(Labour_Category => (\n                                        <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Name</label>\n                                <input className=\"form-control mt-1\" name=\"name\" type=\"text\" onChange={onInputChange} placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Contact Number</label>\n                                <div style={{ display: 'flex' }}>\n                                    <input className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\" onChange={onInputChange} placeholder=\"enter contact number\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                                    {/* <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button> */}\n                                </div>\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">GST Number</label>\n                                <input onChange={onInputChange} placeholder=\"enter gst number\" type=\"text\" name=\"gst_no\" className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid gst number\" required />\n                            </div>\n                            {/* <div className=\"field col-md-6\">\n                                        <label>Enter OTP</label>\n                                        <input className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Please Enter Your OTP' />\n                                    </div> */}\n\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">PAN Number</label>\n                                <input onChange={onInputChange} placeholder=\"enter pan number\" type=\"text\" name=\"pan\" className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan number\" required />\n                            </div>\n                            <div className=\"field col-md-4 mb-4\">\n                                <label className=\"required\">Address</label>\n                                <input className=\"form-control mt-1\" name=\"address\" placeholder=\"enter address\" type=\"text\" onChange={onInputChange} required />\n                            </div>\n\n                        </div><br />\n                        <h5 style={{ width: '100%', textAlign: 'center' }}>BANK DETAILS</h5>\n                        <br />\n                        {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                        <div className=\"row mt-3\" >\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Bank Name</label>\n                                <input className=\"form-control mt-1\" name=\"bank_name\" type=\"text\" placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" onChange={onInputChange} required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Branch Name</label>\n                                <input className=\"form-control mt-1\" name=\"branch_name\" type=\"text\" placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" onChange={onInputChange} required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">IFSC</label>\n                                <input className=\"form-control mt-1\" maxlength=\"11\" minlength=\"11\" name=\"ifsc_code\" type=\"text\" placeholder=\"enter ifsc\" onChange={onInputChange} required />\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 mt-3\">\n\n                                <label className=\"required\">Account Number</label>\n                                <input className=\"form-control mt-1\" name=\"account_no\" placeholder=\"enter account number\" type=\"number\" onChange={onInputChange} required />\n                            </div>\n                        </div>\n                        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                            <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                            <br />\n                            <br />\n\n                        </div>\n                    </form>\n\n\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst READ_INVENTORY = gql`\nsubscription MySubscription($_eq: date = \"now()\") {\n    Inventory_Master(where: {hoarding_insurance_to: {_eq: $_eq}}) {\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        pin\n        parent_id\n      }\n      hoarding_errection {\n        civil_contractor\n        civil_contractor_labour_payment\n        civil_material\n        electric_material_purchase\n        electrician_labour_payment\n        electrician_selection\n        excavator\n        excavator_charges\n        fabrication_material\n        fabricator\n        fabricator_labour_payment\n        id\n        isDeleted\n        location\n        payment\n        permission\n        transport_charges\n        laborMasterByElectricianSelection {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        laborMasterByExcavator {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        laborMasterByFabricator {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        labor_master {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n      }\n    }\n  }\n`\nconst READ_LANDLORD_MANAGEMENT=gql`\nquery MyQuery($_eq: String = \"false\"){\n    landlord_management(where: {isDeleted: {_eq: $_eq}}){\n      account_no\n      address\n      agreement_from\n      agreement_to\n      bank_name\n      branch_name\n      height\n      id\n      ifsc\n      isDeleted\n      location\n      mobile_number\n      name\n      rent_amount\n      rent_increment_reminder\n      site_address\n      width\n    }\n  }  \n`\n\n\nfunction Dashboard() {\n    //states\n\n\n\n    //Queries\n    const read_inventory = useSubscription(READ_INVENTORY);\n    const read_landlord_management = useQuery(READ_LANDLORD_MANAGEMENT);\n    //const [get_inventory,ret_data] = useLazyQuery(GET_INVENTORY);\n    if (read_inventory.loading || read_landlord_management.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    //Events\n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 160,\n        },\n        {\n            field: 'hoarding_insurance',\n            headerName: 'Insurance',\n            width: 200,\n            editable: false,\n        },\n    ];\n    const columns1=[\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'mobile_number',\n            headerName: 'Mobile Number',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'address',\n            headerName: 'Address',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'location',\n            headerName: 'Location',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'rent_amount',\n            headerName: 'Rent Amount Yearly',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'rent_increment_reminder',\n            headerName: 'Rent Increment Reminder',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'agreement_from',\n            headerName: 'Agreement Tenure From',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'agreement_to',\n            headerName: 'Agreement Tenure To',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'site_address',\n            headerName: 'Site Address',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'width',\n            headerName: 'Width',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'height',\n            headerName: 'Height',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'ifsc',\n            headerName: 'IFSC',\n            width: 150,\n            hide: false,\n        },\n        {\n            field: 'account_no',\n            headerName: 'Account Number',\n            width: 150,\n            hide: false,\n        },\n    ]\n    const rows = read_inventory.data.Inventory_Master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    const rows1 = read_landlord_management.data.landlord_management;\n    const rows2=[];\n    read_landlord_management.data.landlord_management.map((item)=>{\n        //console.log(item.agreement_to);\n        var d = new Date(item.agreement_to);\n        d.setMonth(d.getMonth() - parseInt(item.rent_increment_reminder));\n        var sys_date=d.toISOString().split('T')[0]\n        //console.log(sys_date);\n        var today = new Date(),\n\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n        var d1 = new Date(date);\n        var d2 = new Date(sys_date);\n        if(d1.getMonth()===d2.getMonth())\n        {\n            rows2.push(item);\n        }\n    })\n    console.log(rows2)\n    let newData1 = []\n    rows1.map((item, index) => {\n        newData1.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <h4 style={{ width: '100%', textAlign: 'center' }}>Dashboard</h4>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                marginTop: \"2px\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 300, width: '100%' }}>\n                    <h4>Insurance Reminder</h4>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                marginTop: \"2px\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 300, width: '100%' }}>\n                    <h4>Landlord Rent Reminder</h4>\n                    <DataGrid\n                        rows={rows2}\n                        columns={columns1}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Dashboard","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { toast } from 'react-toastify';\nimport { gql, useMutation, useLazyQuery, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst getInventory_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      hoarding_errection {\n        isDeleted\n        id\n        fabricator_labour_payment\n        fabricator\n        fabrication_material\n        excavator_charges\n        excavator\n        electrician_selection\n        electrician_labour_payment\n        civil_contractor\n        civil_material\n        electric_material_purchase\n        civil_contractor_labour_payment\n        location\n        payment\n        permission\n        transport_charges\n      }\n    }\n  }\n`\nconst Insert_Inventory = gql`\nmutation MyMutation($AvailabilityFrom: date = \"\",$AvailabilityTo: date = \"\", $DisplayRatePM: String = \"\", $Height: String = \"\", $Illumination: String = \"\", $Location: String = \"\", $Media_Type:Int!, $NoofDisplay: String = \"\", $OneTimeMountingCost: String = \"\", $OneTimePrintingCost: String = \"\", $Total: String = \"\", $Totalsqft: String = \"\", $Width: String = \"\", $id: Int = 10,$DrpmRate:String!,$OtpcRate:String!,$OtmcRate:String!,$hoarding_insurance:String=\"\",$hoarding_insurance_from:date!,$hoarding_insurance_to:date!,$Status:String!,$erection:Int!,$State:Int!,$District:Int!,$Subdistrict:Int!,$BookedBy:String!) {\n    insert_Inventory_Master_one(object: {AvailabilityFrom: $AvailabilityFrom, AvailabilityTo: $AvailabilityTo, DisplayRatePM: $DisplayRatePM, DrpmRate: $DrpmRate, Height: $Height, Illumination: $Illumination, Location: $Location, Media_Type: $Media_Type, NoofDisplay: $NoofDisplay, OneTimeMountingCost: $OneTimeMountingCost, OneTimePrintingCost: $OneTimePrintingCost, OtmcRate: $OtmcRate, OtpcRate: $OtpcRate, Total: $Total, Totalsqft: $Totalsqft, Width: $Width,Status:$Status, hoarding_insurance: $hoarding_insurance, hoarding_insurance_from: $hoarding_insurance_from, hoarding_insurance_to: $hoarding_insurance_to,erection:$erection,State:$State,District:$District,Subdistrict:$Subdistrict,BookedBy:$BookedBy}){\n      id\n    }\n  }\n  \n`\nconst Read_Fabricator = gql`\nsubscription MySubscription {\n    labor_master(where: {isDeleted: {_eq: \"false\"}, labor_type: {_eq: 21}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  `\nconst delete_Inventory = gql`\n  mutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n  `\n\n// const delete_Inventory = gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_Inventory_Master_by_pk(id: $id) {\n//       City_Village\n//       DisplayRatePM\n//       District\n//       Height\n//       Illumination\n//       Location\n//       Media_Type\n//       NoofDisplay\n//       OneTimeMountingCost\n//       OneTimePrintingCost\n//       Country\n//       State\n//       Taluka\n//       Total\n//       Totalsqft\n//       Width\n//       id\n//       hoarding_insurance\n\n//       Status\n//     }\n//   }\n// `\nconst UPDATE_Inventory = gql`\nmutation MyMutation($AvailabilityFrom: date = \"\",$AvailabilityTo: date = \"\", $DisplayRatePM: String = \"\", $Height: String = \"\", $Illumination: String = \"\", $Location: String = \"\", $Media_Type:Int!, $NoofDisplay: String = \"\", $OneTimeMountingCost: String = \"\", $OneTimePrintingCost: String = \"\", $Total: String = \"\", $Totalsqft: String = \"\", $Width: String = \"\", $id: Int = 10,$DrpmRate:String!,$OtpcRate:String!,$OtmcRate:String!,$hoarding_insurance:String=\"\",$hoarding_insurance_from:date!,$hoarding_insurance_to:date!,$Status:String!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {AvailabilityFrom: $AvailabilityFrom,AvailabilityTo: $AvailabilityTo, DisplayRatePM: $DisplayRatePM, Height: $Height, Illumination: $Illumination, Location: $Location, Media_Type: $Media_Type, NoofDisplay: $NoofDisplay, OneTimeMountingCost: $OneTimeMountingCost, OneTimePrintingCost: $OneTimePrintingCost, Total: $Total, Totalsqft: $Totalsqft, Width: $Width,DrpmRate:$DrpmRate,OtpcRate:$OtpcRate,OtmcRate:$OtmcRate, Status:$Status,hoarding_insurance: $hoarding_insurance, hoarding_insurance_from: $hoarding_insurance_from, hoarding_insurance_to: $hoarding_insurance_to}) {\n      id\n    }\n  }\n  \n`\n\nconst MEDIA_TYPE = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    media_type_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      media_type\n    }\n  }\n`\nconst Read_hoarding_erection = gql`\nsubscription MySubscription {\n    hoarding_errection {\n      id\n      location\n      payment\n      permission\n      transport_charges\n      fabricator_labour_payment\n      fabrication_material\n      excavator_charges\n      excavator\n      electrician_selection\n      electrician_labour_payment\n      electric_material_purchase\n      civil_material\n      civil_contractor_labour_payment\n      civil_contractor\n    }\n  }\n`\n\nconst READ_GEOLOCATIONS = gql`\nquery MyQuery {\n    geo_locations {\n      external_id\n      id\n      location_type\n      name\n      parent_id\n      pin\n    }\n  }  \n`\nconst READ_DISTRICT = gql`\nquery MyQuery($_eq: Int!) {\n    geo_locations(where: {parent_id: {_eq: $_eq}}) {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\nconst READ_SUBDISTRICT = gql`\nquery MyQuery($_eq: Int!) {\n    geo_locations(where: {parent_id: {_eq: $_eq}}) {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\n\nvar totalsq;\nvar total;\nvar modaltotalsq;\nvar modaltotal;\nexport default function Inventory_Master() {\n    const districtData = \"\";\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [State, setState] = useState();\n    const [District, setDistrict] = useState();\n    const [Subdistrict, setSubdistrict] = useState();\n    const [Location, setLocation] = useState();\n    const [Media_Type, setMedia_Type] = useState();\n    const [Illumination, setIllumination] = useState();\n    const [Width, setWidth] = useState(1);\n    const [Height, setHeight] = useState(1);\n    const [NoofDisplay, setNoofDisplay] = useState(1);\n    const [Totalsqft, setTotalsqft] = useState();\n    const [DisplayRatePM, setDisplayRatePM] = useState();\n    const [OneTimePrintingCost, setOneTimePrintingCost] = useState();\n    const [OneTimeMountingCost, setOneTimeMountingCost] = useState();\n    const [Total, setTotal] = useState();\n    const [AvailabilityFrom, setAvailabilityFrom] = useState();\n    const [AvailabilityTo, setAvailabilityTo] = useState();\n    const [DrpmRate, setDrpmRate] = useState();\n    const [OtpcRate, setOtpcRate] = useState();\n    const [OtmcRate, setOtmcRate] = useState();\n    const [hoarding_insurance, sethoarding_insurance] = useState();\n    const [hoarding_insurance_from, sethoarding_insurance_from] = useState();\n    const [hoarding_insurance_to, sethoarding_insurance_to] = useState();\n    const [Erection, setErection] = useState();\n\n    const [Status, setStatus] = useState();\n\n\n    const [ModalId, setModalId] = useState();\n    const [ModalState, setModalState] = useState();\n    const [ModalDistrict, setModalDistrict] = useState();\n    const [ModalSubdistrict, setModalSubdistrict] = useState();\n    const [ModalLocation, setModalLocation] = useState();\n    const [ModalMedia_Type, setModalMedia_Type] = useState();\n    const [ModalIllumination, setModalIllumination] = useState();\n    const [ModalWidth, setModalWidth] = useState(1);\n    const [ModalHeight, setModalHeight] = useState(1);\n    const [ModalNoofDisplay, setModalNoofDisplay] = useState(1);\n    const [ModalTotalsqft, setModalTotalsqft] = useState();\n    const [ModalDisplayRatePM, setModalDisplayRatePM] = useState();\n    const [ModalOneTimePrintingCost, setModalOneTimePrintingCost] = useState();\n    const [ModalOneTimeMountingCost, setModalOneTimeMountingCost] = useState();\n    const [ModalTotal, setModalTotal] = useState();\n    const [ModalAvailabilityFrom, setModalAvailabilityFrom] = useState();\n    const [ModalAvailabilityTo, setModalAvailabilityTo] = useState();\n    const [ModalDrpmRate, setModalDrpmRate] = useState();\n    const [ModalOtpcRate, setModalOtpcRate] = useState();\n    const [ModalOtmcRate, setModalOtmcRate] = useState();\n    const [Modalhoarding_insurance, setModalhoarding_insurance] = useState();\n    const [Modalhoarding_insurance_from, setModalhoarding_insurance_from] = useState();\n    const [Modalhoarding_insurance_to, setModalhoarding_insurance_to] = useState();\n    const [ModalErection, setModalErection] = useState();\n    const [ModalStatus, setModalStatus] = useState();\n\n\n    const onStateChange = (state_data) => {\n        setState(state_data.id);\n\n    }\n    const onDistrictChange = (district_data) => {\n        setDistrict(district_data.id);\n\n    }\n    const onSubdistrictChange = (subdistrict_data) => {\n        setSubdistrict(subdistrict_data.id);\n    }\n    const onLocationChange = (e) => {\n        setLocation(e.target.value)\n    }\n    const onMedia_TypeChange = (media_type_data) => {\n        setMedia_Type(media_type_data.id)\n    }\n    const onIlluminationChange = (illumination_data) => {\n        setIllumination(illumination_data.value)\n    }\n    const onWidthChange = (e) => {\n        totalsq = Height * NoofDisplay * e.target.value;\n        setWidth(e.target.value)\n        setTotalsqft(totalsq.toString());\n    }\n    const onHeightChange = (e) => {\n        totalsq = Width * NoofDisplay * e.target.value;\n        setHeight(e.target.value)\n        setTotalsqft(totalsq.toString());\n    }\n    const onNoofDisplayChange = (e) => {\n        setNoofDisplay(e.target.value)\n        //console.log(e.target.value);\n        totalsq = Width * Height * e.target.value;\n        setTotalsqft(totalsq.toString());\n        //console.log(totalsq);\n    }\n\n    // const onTotalsqftChange = (e) => {\n    //     // setTotalsqft(e.target.value)\n    //     // totalsq = Width * Height * NoofDisplay;\n    //     // setTotalsqft(totalsq);\n    // }\n    const onDrpmRateChange = (e) => {\n        setDrpmRate(e.target.value)\n        const drpm = Totalsqft * e.target.value\n        setDisplayRatePM(drpm);\n        console.log(DisplayRatePM)\n        total = parseInt(OneTimePrintingCost) + parseInt(OneTimeMountingCost) + parseInt(drpm)\n        //console.log(total);\n        setTotal(total.toString())\n    }\n    const onOtpcChange = (e) => {\n        setOtpcRate(e.target.value)\n        const otpc = Totalsqft * e.target.value\n        setOneTimePrintingCost(Totalsqft * e.target.value)\n        total = parseInt(otpc) + parseInt(OneTimeMountingCost) + parseInt(DisplayRatePM)\n        //console.log(total);\n        setTotal(total.toString())\n    }\n    const onOtmcChange = (e) => {\n        setOtmcRate(e.target.value)\n        const otmc = Totalsqft * e.target.value\n        setOneTimeMountingCost(Totalsqft * e.target.value)\n        total = parseInt(OneTimePrintingCost) + parseInt(otmc) + parseInt(DisplayRatePM)\n        console.log(total);\n        setTotal(total.toString())\n    }\n    // const onDisplayRatePMChange = (e) => {\n    //     setDisplayRatePM(e.target.value);\n    //     total=parseInt(OneTimePrintingCost) + parseInt(OneTimeMountingCost) + parseInt(e.target.value)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onOneTimePrintingCostChange = (e) => {\n    //     setOneTimePrintingCost(e.target.value)\n    //     total=parseInt(e.target.value) + parseInt(OneTimeMountingCost) + parseInt(DisplayRatePM)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onOneTimeMountingCostChange = (e) => {\n    //     setOneTimeMountingCost(e.target.value)\n    //     total=parseInt(OneTimePrintingCost) + parseInt(e.target.value) + parseInt(DisplayRatePM)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onTotalChange = (e) => {\n\n    // }\n    const onAvailabilityFromChange = (e) => {\n        setAvailabilityFrom(e.target.value)\n    }\n    const onAvailabilityToChange = (e) => {\n        setAvailabilityTo(e.target.value)\n    }\n\n    const onhoarding_insuranceChange = (e) => {\n        sethoarding_insurance(e.target.value)\n    }\n    const onHoardingInsuranceFromChange = (e) => {\n        sethoarding_insurance_from(e.target.value)\n    }\n    const onHoardingInsuranceToChange = (e) => {\n        sethoarding_insurance_to(e.target.value)\n    }\n    const onErectionChange = (e) => {\n        setErection(e.target.value)\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.target.value)\n    }\n\n\n    //Modal Changes\n    const onModalStateChange = (e) => {\n        setModalState(e.target.value);\n    }\n    const onModalDistrictChange = (e) => {\n        setModalDistrict(e.target.value);\n    }\n    const onModalSubdistrictChange = (e) => {\n        setModalSubdistrict(e.target.value);\n    }\n    const onModalLocationChange = (e) => {\n        setModalLocation(e.target.value)\n    }\n    const onModalMedia_TypeChange = (modal_mdeia_type_data) => {\n        setModalMedia_Type(modal_mdeia_type_data.id)\n    }\n    const onModalIlluminationChange = (modalIlluminationData) => {\n        setModalIllumination(modalIlluminationData.value)\n    }\n    const onModalWidthChange = (e) => {\n        modaltotalsq = ModalHeight * ModalNoofDisplay * e.target.value;\n        setModalWidth(e.target.value)\n        setModalTotalsqft(modaltotalsq.toString());\n    }\n    const onModalHeightChange = (e) => {\n        modaltotalsq = ModalWidth * ModalNoofDisplay * e.target.value;\n        setModalHeight(e.target.value)\n        setModalTotalsqft(modaltotalsq.toString());\n    }\n    const onModalNoofDisplayChange = (e) => {\n        setModalNoofDisplay(e.target.value)\n        //console.log(e.target.value);\n        modaltotalsq = ModalWidth * ModalHeight * e.target.value;\n        setModalTotalsqft(modaltotalsq.toString());\n        //console.log(ModalTotalsqft);\n    }\n\n    // const onTotalsqftChange = (e) => {\n    //     // setTotalsqft(e.target.value)\n    //     // totalsq = Width * Height * NoofDisplay;\n    //     // setTotalsqft(totalsq);\n    // }\n    const onModalDrpmChange = (e) => {\n        setModalDrpmRate(e.target.value)\n        const modaldrpm = ModalTotalsqft * e.target.value\n        setModalDisplayRatePM(modaldrpm);\n        console.log(ModalDisplayRatePM)\n        modaltotal = parseInt(ModalOneTimePrintingCost) + parseInt(ModalOneTimeMountingCost) + parseInt(modaldrpm)\n        //console.log(total);\n        setModalTotal(modaltotal.toString())\n    }\n    const onModalOtpcChange = (e) => {\n        setModalOtpcRate(e.target.value)\n        const modalotpc = ModalTotalsqft * e.target.value\n        setModalOneTimePrintingCost(modalotpc)\n        modaltotal = parseInt(modalotpc) + parseInt(ModalOneTimeMountingCost) + parseInt(ModalDisplayRatePM)\n        //console.log(total);\n        setModalTotal(modaltotal.toString())\n    }\n    const onModalOtmcChange = (e) => {\n        setModalOtmcRate(e.target.value)\n        const modalotmc = ModalTotalsqft * e.target.value\n        setModalOneTimeMountingCost(modalotmc)\n        modaltotal = parseInt(ModalOneTimePrintingCost) + parseInt(modalotmc) + parseInt(ModalDisplayRatePM)\n        console.log(modaltotal);\n        setModalTotal(modaltotal.toString())\n    }\n    // const onModalDisplayRatePMChange = (e) => {\n    //     setModalDisplayRatePM(e.target.value);\n    //     modaltotal=parseInt(ModalOneTimePrintingCost) + parseInt(ModalOneTimeMountingCost) + parseInt(e.target.value)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    // const onModalOneTimePrintingCostChange = (e) => {\n    //     setModalOneTimePrintingCost(e.target.value)\n    //     modaltotal=parseInt(e.target.value) + parseInt(ModalOneTimeMountingCost) + parseInt(ModalDisplayRatePM)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    // const onModalOneTimeMountingCostChange = (e) => {\n    //     setModalOneTimeMountingCost(e.target.value)\n    //     modaltotal=parseInt(ModalOneTimePrintingCost) + parseInt(e.target.value) + parseInt(ModalDisplayRatePM)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    const onModalAvailabilityFromChange = (e) => {\n        setModalAvailabilityFrom(e.target.value)\n    }\n    const onModalAvailabilityToChange = (e) => {\n        setModalAvailabilityTo(e.target.value)\n    }\n    const onModalhoarding_insuranceChange = (e) => {\n        setModalhoarding_insurance(e.target.value)\n    }\n    const onModalhoarding_insurance_fromChange = (e) => {\n        setModalhoarding_insurance_from(e.target.value)\n    }\n    const onModalhoarding_insurance_toChange = (e) => {\n        setModalhoarding_insurance_to(e.target.value)\n    }\n    const onModalStatusChange = (e) => {\n        setModalStatus(e.target.value)\n    }\n    const onModalErectionChange = (e) => {\n        setModalErection(e.target.value)\n    }\n\n\n\n\n\n\n    const [Insert_InventorymasterData] = useMutation(Insert_Inventory);\n    const [delete_InventorymasterData] = useMutation(delete_Inventory);\n    const [update_InventorymasterData] = useMutation(UPDATE_Inventory);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        Insert_InventorymasterData({ variables: { Location: Location, Media_Type: Media_Type, Illumination: Illumination, Width: Width.toString(), Height: Height.toString(), NoofDisplay: NoofDisplay.toString(), Totalsqft: Totalsqft.toString(), DisplayRatePM: DisplayRatePM.toString(), OneTimeMountingCost: OneTimeMountingCost.toString(), OneTimePrintingCost: OneTimePrintingCost.toString(), Total: Total.toString(), AvailabilityFrom: AvailabilityFrom, AvailabilityTo: AvailabilityTo, DrpmRate: DrpmRate.toString(), OtpcRate: OtpcRate.toString(), OtmcRate: OtmcRate.toString(), hoarding_insurance: hoarding_insurance, hoarding_insurance_from: hoarding_insurance_from, hoarding_insurance_to: hoarding_insurance_to, Status: Status, erection: Erection, State: State, District: District, Subdistrict: Subdistrict,BookedBy:user } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    // const onReset = () => {\n    //     States='';\n    //     City_Village='';\n    //     District='';\n    //     Taluka='';\n    //     Location='';\n    //     Media_Type='';\n    //     Illumination='';\n    //     Width='';\n    //     Height='';\n    //     NoofDisplay='';\n    //     Totalsqft='';\n    //     DisplayRatePM='';\n    //     OneTimeMountingCost='';\n    //     OneTimePrintingCost='';\n    //     Total='';\n    //     Availability=''\n    // }\n    const onEdit = (row) => {\n        console.log(row);\n        handleShow();\n        setModalId(row.id);\n        setModalState(row.State);\n        setModalDistrict(row.District);\n        setModalSubdistrict(row.Subdistrict);\n        setModalLocation(row.Location);\n        setModalMedia_Type(row.Media_Type);\n        setModalIllumination(row.Illumination);\n        setModalWidth(row.Width);\n        setModalHeight(row.Height);\n        setModalNoofDisplay(row.NoofDisplay);\n        setModalTotalsqft(row.Totalsqft);\n        setModalDisplayRatePM(row.DisplayRatePM);\n        setModalOneTimePrintingCost(row.OneTimePrintingCost);\n        setModalOneTimeMountingCost(row.OneTimeMountingCost);\n        setModalTotal(row.Total);\n        setModalAvailabilityFrom(row.AvailabilityFrom);\n        setModalAvailabilityTo(row.AvailabilityTo);\n        setModalDrpmRate(row.DrpmRate);\n        setModalOtpcRate(row.OtpcRate);\n        setModalOtmcRate(row.OtmcRate);\n        setModalhoarding_insurance(row.hoarding_insurance);\n        setModalhoarding_insurance_from(row.hoarding_insurance_from);\n        setModalhoarding_insurance_to(row.hoarding_insurance_to);\n        // setModalerrection_cost(row.errection_cost);\n        // setModalerrection_year(row.errection_year);\n        // setModalfabrication_selection(row.fabrication_selection);\n        setModalStatus(row.Status);\n\n\n        //console.log(modalInventory);\n    }\n\n    // const onModalInputChange = (e) => {\n    //     setModalInventory({ ...modalInventory, [e.target.name]: e.target.value })\n    // }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(ModalStates.toString());\n        update_InventorymasterData({ variables: { id: ModalId, State: ModalState, District: ModalDistrict, Subdistrict: ModalSubdistrict, Location: ModalLocation, Media_Type: ModalMedia_Type, Illumination: ModalIllumination, Width: ModalWidth.toString(), Height: ModalHeight.toString(), NoofDisplay: ModalNoofDisplay.toString(), Totalsqft: ModalTotalsqft.toString(), DisplayRatePM: ModalDisplayRatePM.toString(), OneTimeMountingCost: ModalOneTimeMountingCost.toString(), OneTimePrintingCost: ModalOneTimePrintingCost.toString(), Total: ModalTotal.toString(), AvailabilityFrom: ModalAvailabilityFrom, AvailabilityTo: ModalAvailabilityTo, DrpmRate: ModalDrpmRate, OtpcRate: ModalOtpcRate, OtmcRate: ModalOtmcRate, hoarding_insurance: Modalhoarding_insurance, hoarding_insurance_from: Modalhoarding_insurance_from, hoarding_insurance_to: Modalhoarding_insurance_to, Status: ModalStatus } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        //console.log(id);\n        delete_InventorymasterData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const read_geolocations = useQuery(READ_GEOLOCATIONS);\n    const getInventory = useSubscription(getInventory_Master);\n    const media_type = useSubscription(MEDIA_TYPE)\n    const read_fabricator = useSubscription(Read_Fabricator)\n    const read_hoarding_erection = useSubscription(Read_hoarding_erection)\n    if (read_geolocations.loading || getInventory.loading || media_type.loading || read_fabricator.loading || read_hoarding_erection.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    //console.log(getInventory.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 160\n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Illumination',\n            headerName: 'Illumination',\n            width: 150\n        },\n        {\n            field: 'Width',\n            headerName: 'Width',\n            width: 130\n        },\n        {\n            field: 'Height',\n            headerName: 'Height',\n            width: 130\n        },\n        {\n            field: 'NoofDisplay',\n            headerName: 'NoofDisplay',\n            width: 170\n        },\n        {\n            field: 'Totalsqft',\n            headerName: 'Total Sq.Ft.',\n            width: 190\n        },\n        {\n            field: 'DrpmRate',\n            headerName: 'Display Rate P.M. Rate',\n            width: 240\n        },\n        {\n            field: 'DisplayRatePM',\n            headerName: 'Display Rate P.M.',\n            width: 240\n        },\n        {\n            field: 'OtpcRate',\n            headerName: 'One Time Printing Cost Rate',\n            width: 240\n        },\n        {\n            field: 'OneTimePrintingCost',\n            headerName: 'One Time Printing Cost',\n            width: 240\n        },\n        {\n            field: 'OtmcRate',\n            headerName: 'One Time Mounting Cost Rate',\n            width: 240\n        },\n        {\n            field: 'OneTimeMountingCost',\n            headerName: 'One Time Mounting Cost',\n            width: 240\n        },\n        {\n            field: 'Total',\n            headerName: 'Total',\n            width: 190\n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'Booked From',\n            width: 190\n        },\n        {\n            field: 'AvailabilityTo',\n            headerName: 'Booked To',\n            width: 190\n        },\n        {\n            field: 'hoarding_insurance',\n            headerName: 'Hoarding Insurance',\n            width: 190\n        },\n        {\n            field: 'hoarding_insurance_from',\n            headerName: 'Hoarding Insurance From',\n            width: 190\n        },\n        {\n            field: 'hoarding_insurance_to',\n            headerName: 'Hoarding Insurance To',\n            width: 190\n        },\n        // {\n        //     field: 'errection_cost',\n        //     headerName: 'Erection Cost',\n        //     width: 190\n        // },\n        // {\n        //     field: 'errection_year',\n        //     headerName: 'Erection year',\n        //     width: 190\n        // },\n        // {\n        //     field: 'fabrication_selection',\n        //     headerName: 'Fabrication Selection',\n        //     width: 190\n        // },\n        {\n            field: 'Status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'BookedBy',\n            headerName: 'Planner Name',\n            width: 190\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const user = localStorage.getItem(\"userdata\");\n    //console.log(getInventory.data);\n    const rows = getInventory.data.Inventory_Master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    var IlluminationOptions = [\n        { value: 'F LIT', label: 'F LIT' },\n        { value: 'NON LIT', label: 'NON LIT' },\n        { value: 'All', label: 'All' }\n    ]\n    // const rows=\n    //    [\n    //    { id: 1, state: 'Lannister', taluka: 'Cersei', district: 'kop' },\n    //    { id: 1, state: 'Lannister', taluka: 'pk', district: 'kop' },\n    //     { id: 3, state: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    // ]\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Inventory</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-4\">\n                                <label>State</label>\n                                {/* <Select\n                                    name=\"state\"\n                                    value={ModalState}\n                                    options={\n                                        read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                    }\n                                    onChange={onStateChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                /> */}\n                                <Select\n                                    name=\"state\"\n                                    defaultValue={ModalState}\n                                    options={\n                                        read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                    }\n                                    onChange={onStateChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">District</label>\n                                {/* <input defaultValue={modalInventory.State} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"State\" type=\"text\" placeholder=\" enter state\" /> */}\n                                {/* <select defaultValue={ModalStates} onChange={onModalStateChange} type=\"text\" name=\"State\" className=\"form-control mt-1\" data-live-search=\"true\" placeholder=\"enter state\" required>\n                                    <option>--SELECT--</option>\n                                    {read_states.data.states.map(state => (\n                                        <option key={state.id} value={state.id}>{state.name}</option>\n                                    ))}\n                                </select> */}\n\n                                <Select\n                                    name=\"district\"\n                                    options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                        if (currentElement.location_type === \"DISTRICT\" && currentElement.parent_id === State) {\n                                            //console.log(currentElement);\n                                            return currentElement;\n                                        }\n                                    }\n                                    )}\n                                    onChange={onDistrictChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Sub District</label>\n                                {/* <input defaultValue={modalInventory.City_Village} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"City_village\"\n                                    placeholder=\"enter city village\" required /> */}\n                                {/* <select defaultValue={ModalCity_Village} onChange={onModalCity_VillageChange} type=\"text\" name=\"City_Village\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                                    <option>--SELECT--</option>\n                                    {read_cities.data.cities.map(city => (\n                                        <option key={city.id} value={city.id}>{city.name}</option>\n                                    ))}\n                                </select> */}\n\n                                <Select\n                                    name=\"subdistrict\"\n                                    options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                        if (currentElement.location_type === \"SUBDISTRICT\" && currentElement.parent_id === District) {\n                                            //console.log(currentElement);\n                                            return currentElement;\n                                        }\n                                    }\n                                    )}\n                                    onChange={onSubdistrictChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Location</label>\n                                <input defaultValue={ModalLocation} onChange={onModalLocationChange} className=\"form-control mt-1\" name=\"Location\" placeholder=\"enter location\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Media Type</label>\n                                {/* <input defaultValue={ModalMedia_Type} onChange={onModalMedia_TypeChange} className=\"form-control mt-1\" name=\"Media_Type\" placeholder=\"enter media type \" required /> */}\n                                <Select\n                                    name=\"Media_Type\"\n                                    value={media_type.data.media_type_master.find((op) => op.id === ModalMedia_Type)}\n                                    options={media_type.data.media_type_master}\n                                    onChange={onModalMedia_TypeChange}\n                                    getOptionLabel={(option) => option.media_type}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Illumination</label>\n\n                                {/* <input defaultValue={ModalIllumination} onChange={onModalIlluminationChange} className=\"form-control mt-1\" name=\"Illumination\" placeholder=\"enter illumination\" required /> */}\n                                <Select\n                                    name=\"Illumination\"\n                                    value={IlluminationOptions.find(op => op.value === ModalIllumination)}\n                                    options={[\n                                        { value: 'F LIT', label: 'F LIT' },\n                                        { value: 'NON LIT', label: 'NON LIT' }\n                                    ]}\n                                    onChange={onModalIlluminationChange}\n                                    getOptionLabel={(option) => option.label}\n                                    getOptionValue={(option) => option.value}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Width</label>\n                                <input defaultValue={ModalWidth} onChange={onModalWidthChange} className=\"form-control mt-1\" name=\"Width\" placeholder=\"enter width\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Height </label>\n                                <input defaultValue={ModalHeight} onChange={onModalHeightChange} className=\"form-control mt-1\" name=\"Height\" placeholder=\"enter height\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">No of Display </label>\n                                <input defaultValue={ModalNoofDisplay} onChange={onModalNoofDisplayChange} className=\"form-control mt-1\" name=\"NoofDisplay\" placeholder=\"enter no of display\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Total Sq.Ft </label>\n                                <input defaultValue={ModalTotalsqft} className=\"form-control mt-1\" name=\"Totalsqft\" placeholder=\"enter total sq ft\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input defaultValue={ModalDrpmRate} onChange={onModalDrpmChange} className=\"form-control mt-1\" name=\"DrpmRate\" placeholder=\"enter display rate P.M\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Display Rate P.M </label>\n                                <input defaultValue={ModalDisplayRatePM} className=\"form-control mt-1\" name=\"DisplayRatePM\" placeholder=\"enter display rate P.M\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input defaultValue={ModalOtpcRate} onChange={onModalOtpcChange} className=\"form-control mt-1\" name=\"OtpcRate\" placeholder=\"enter rate \" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">One Time Printing Cost </label>\n                                <input defaultValue={ModalOneTimePrintingCost} className=\"form-control mt-1\" name=\"OneTimePrintingCost\" placeholder=\"enter OneTimePrintingCost\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input defaultValue={ModalOtmcRate} onChange={onModalOtmcChange} className=\"form-control mt-4\" name=\"OtmcRate\" placeholder=\"enter rate \" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">One Time Mounting Cost </label>\n                                <input defaultValue={ModalOneTimeMountingCost} className=\"form-control mt-1\" name=\"OneTimeMountingCost\" placeholder=\"enter one time mounting cost\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Total</label>\n                                <input defaultValue={ModalTotal} className=\"form-control mt-1\" name=\"Total\" placeholder=\"enter total\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label>Booking From</label>\n                                <input defaultValue={ModalAvailabilityFrom} onChange={onModalAvailabilityFromChange} className=\"form-control mt-1\" name=\"Availability from\" placeholder=\"enter availability\" />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label>Booking To</label>\n                                <input defaultValue={ModalAvailabilityTo} onChange={onModalAvailabilityToChange} className=\"form-control mt-1\" name=\"Availability to\" placeholder=\"enter availability\" />\n                            </div>\n                        </div>\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <input type=\"text\" defaultValue={Modalhoarding_insurance} name=\"hoarding_insurance\" onChange={onModalhoarding_insuranceChange} className=\"form-control mt-1\" placeholder=\"enter hoarding insurance\" required />\n                            </div>\n\n\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Hoarding Insurance From</label>\n                                <input type=\"date\" defaultValue={Modalhoarding_insurance_from} name=\"hoarding_insurance_from\" onChange={onModalhoarding_insurance_fromChange} className=\"form-control mt-1\" placeholder=\"enter hoarding insurance from\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Hoarding Insurance To</label>\n                                <input type=\"date\" name=\"errection_year \" defaultValue={Modalhoarding_insurance_to} onChange={onModalhoarding_insurance_toChange} className=\"form-control mt-1\" placeholder=\"enter hoarding insurance to\" required />\n                            </div>\n\n\n                        </div><br />\n                        <div className=\"row mt-2\">\n                            {/* <div className=\"field col-md-4\">\n                            <label className=\"required\">Fabrication selection</label>\n                            <input type=\"text\" defaultValue={Modalfabrication_selection}name=\"fabrication_selection\" onChange={onModalfabrication_selectionChange} className=\"form-control mt-1\" placeholder=\"enter availability\" required />\n                        </div> */}\n                            <div className=\"field col-md-4\">\n                                <label>Erection Selection</label>\n                                <select defaultValue={ModalErection} className=\"form-control\" onChange={onModalErectionChange} >\n                                    {read_hoarding_erection.data.hoarding_errection.map((erection) => (\n                                        <option id={erection.id} value={erection.id}>{erection.location}</option>\n                                    ))}\n                                </select>\n\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label>Status</label>\n                                <select defaultValue={ModalStatus} className=\"form-control\" onChange={onModalStatusChange} >\n                                    <option>Select...</option>\n                                    <option>Immediate</option>\n                                    <option>Booked</option>\n                                    <option>Hold</option>\n                                </select>\n\n                            </div>\n\n\n                        </div><br />\n\n                        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                            <br /><br />\n                            {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                        </div>\n\n\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 style={{ width: '100%', textAlign: 'center' }}>INVENTORY MASTER</h4>\n                <br />\n                <form className=\"form-group\" onSubmit={onFormSubmit} padding=\"2px\">\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            <Select\n                                name=\"state\"\n                                options={\n                                    read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                }\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">District</label>\n                            <Select\n                                name=\"district\"\n                                options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"DISTRICT\" && currentElement.parent_id === State) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onDistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                            {/* <input type=\"text\" name=\"State\" onChange={onInputChange} className=\"form-control mt-1\" required placeholder=\"enter state\" title=\"Please enter Alphabets.\" /> */}\n                            {/* <select onChange={onStateChange} type=\"text\" name=\"State\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                                <option>--SELECT--</option>\n                                {read_states.data.states.map(state => (\n                                    <option key={state.id} value={state.id}>{state.name}</option>\n                                ))}\n                            </select> */}\n\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Subdistrict</label>\n                            {/* <input type=\"city/village\" name=\"City_Village\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter village\" required title=\"Please enter valid contact number\" /> */}\n                            {/* <select onChange={onCity_VillageChange} type=\"text\" name=\"City_Village\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                                <option>--SELECT--</option>\n                                {read_cities.data.cities.map(city => (\n                                    <option key={city.id} value={city.id}>{city.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"subdistrict\"\n                                options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"SUBDISTRICT\" && currentElement.parent_id === District) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onSubdistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n\n\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <input type=\"location\" name=\"Location\" onChange={onLocationChange} className=\"form-control mt-1\" placeholder=\"enter location\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Media Type</label>\n                            {/* <input type=\"mediatype\" name=\"Media_Type\" onChange={onMedia_TypeChange} className=\"form-control mt-1\" placeholder=\"enter media type \" required /> */}\n                            <Select\n                                name=\"Media_Type\"\n                                options={media_type.data.media_type_master}\n                                onChange={onMedia_TypeChange}\n                                getOptionLabel={(option) => option.media_type}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Illumination</label>\n\n                            {/* <input type=\"text\" name=\"Illumination\" onChange={onIlluminationChange} className=\"form-control mt-1\" placeholder=\"enter illumination\" required /> */}\n                            <Select\n                                name=\"Illumination\"\n                                options={[\n                                    { value: 'F LIT', label: 'F LIT' },\n                                    { value: 'NON LIT', label: 'NON LIT' }\n                                ]}\n                                onChange={onIlluminationChange}\n                                getOptionLabel={(option) => option.label}\n                                getOptionValue={(option) => option.value}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Width</label>\n                            <input type=\"number\" name=\"Width\" onChange={onWidthChange} className=\"form-control mt-1\" placeholder=\"enter width\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Height </label>\n                            <input type=\"number\" name=\"Height\" onChange={onHeightChange} className=\"form-control mt-1\" placeholder=\"enter height\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">No of Display </label>\n                            <input type=\"number\" name=\"NoofDisplay\" onChange={onNoofDisplayChange} className=\"form-control mt-1\" placeholder=\"enter no of display\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Total Sq.Ft </label>\n                            <input value={Totalsqft} type=\"number\" name=\"Totalsqft\" className=\"form-control mt-1\" placeholder=\"enter total sq.ft\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rate</label>\n                            <input type=\"number\" name=\"DisplayRatePMRate\" onChange={onDrpmRateChange} className=\"form-control mt-1\" placeholder=\"enter rate of display rate P.M\" required />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Display Rate P.M </label>\n                            <input value={DisplayRatePM} type=\"number\" name=\"DisplayRatePM\" className=\"form-control mt-1\" placeholder=\"enter display rate P.M\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Printing Rate Per Sq ft</label>\n                            <input type=\"number\" name=\"OneTimePrintingCostRate\" onChange={onOtpcChange} className=\"form-control mt-1\" placeholder=\"enter one time cost rate\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">One Time Printing Cost</label>\n                            <input value={OneTimePrintingCost} type=\"number\" name=\"OneTimePrintingCost\" className=\"form-control mt-2\" placeholder=\"enter one time printing cost\" required />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mounting Rate Per Sq ft</label>\n                            <input type=\"number\" name=\"OneTimeMountingCostRate\" onChange={onOtmcChange} className=\"form-control mt-1\" placeholder=\"enter one time mounting cost rate\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">One Time Mounting Cost </label>\n                            <input value={OneTimeMountingCost} type=\"number\" name=\"OneTimeMountingCost\" className=\"form-control mt-1\" placeholder=\"enter one time mounting cost\" required />\n                        </div>\n\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Total</label>\n                            <input value={Total} type=\"number\" name=\"Total\" className=\"form-control mt-1\" placeholder=\"enter total\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"\">Booking From</label>\n                            <input type=\"date\" name=\"Availability From\" onChange={onAvailabilityFromChange} className=\"form-control mt-1\" placeholder=\"enter availability\" />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"\">Booking To</label>\n                            <input type=\"date\" name=\"Availability To\" onChange={onAvailabilityToChange} className=\"form-control mt-1\" placeholder=\"enter availability\" />\n                        </div>\n\n                        <br />\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Hoarding Insurance</label>\n                            <input type=\"text\" name=\"hoarding_insurance\" onChange={onhoarding_insuranceChange} className=\"form-control mt-1\" placeholder=\"enter total\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Hoarding Insurance From</label>\n                            <input type=\"date\" name=\"hoardingInsuranceFrom\" onChange={onHoardingInsuranceFromChange} className=\"form-control mt-1\" placeholder=\"enter hoarding insurance from\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Hoarding Insurance To</label>\n                            <input type=\"date\" name=\"errection_year \" onChange={onHoardingInsuranceToChange} className=\"form-control mt-1\" placeholder=\"enter insurance to\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        {/* <div className=\"field col-md-4\">\n                    <label className=\"required\">Fabricator</label>\n                    <select className=\"form-control\" onChange={onfabrication_selectionChange}>\n                                <option>Select...</option>\n                                {read_fabricator.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                        <div className=\"field col-md-4\">\n                            <label>Erection Selection</label>\n                            <select className=\"form-control\" onChange={onErectionChange} >\n                                <option>Select...</option>\n                                {read_hoarding_erection.data.hoarding_errection.map((erection) => (\n                                    <option id={erection.id} value={erection.id}>{erection.location}</option>\n                                ))}\n                            </select>\n\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Status</label>\n                            <select className=\"form-control\" onChange={onStatusChange} >\n                                <option>Select...</option>\n                                <option>Immediate</option>\n                                <option>Booked</option>\n                                <option>Hold</option>\n                            </select>\n                        </div>\n\n\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br /><br />\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                    </div>\n                </form>\n\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Category } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getLabour_Master=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n  \n\n`\n\nconst InsertLabour_Master =gql`\nmutation MyMutation($labour_category: String = \"\") {\n    insert_labour_category_master_one(object: {labour_category: $labour_category}) {\n      id\n    }\n  }\n  \n\n`\n\nconst UpdateLabour_Master =gql`\nmutation MyMutation($id: Int = \"\", $labour_category: String = \"\") {\n    update_labour_category_master_by_pk(pk_columns: {id: $id}, _set: { labour_category: $labour_category}) {\n      id\n      labour_category\n    }\n  }\n  \n\n\n`\n\n// const Deletelabour_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_labour_category_master_by_pk(id: $id) {\n//       id\n//       labour_category\n//     }\n//   }\n  \n// `\n\nconst Deletelabour_Master = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 10) {\n    update_labour_category_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\n\n\n\n\nexport default function Labour_Category_Master() {\n    \n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\nconst[modallabour,setmodallabour]=useState({\n    id:'',\n    labour_category:'',\n})\n\n\nconst onModalInputChange =(e) =>{\n    setmodallabour({ ...modallabour, [e.target.name]: e.target.value });\n  }\n  \n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modallabour);\n    Update_labourmasterData({ variables: { id: modallabour.id, labour_category: modallabour.labour_category } })\n   \n    handleClose();\n  }\n\n\n\n    const[Insert_labourmasterData]=useMutation(InsertLabour_Master);\n    const[Update_labourmasterData]=useMutation(UpdateLabour_Master);\n    const[delete_labourmasterdata]=useMutation(Deletelabour_Master);\n    const onFormSubmit=(e)=>{\n        e.preventDefault();\n        console.log(e.target)\n        Insert_labourmasterData({variables:{labour_category: e.target[0].value}})\n        toast.configure();\n        toast.success('Successfully Inserted')\n       }\n       \n       const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setmodallabour({\n            id: row.id,\n            labour_category: row.labour_category\n        })\n    }\n\n    const onDelete = (id) => {\n        console.log(id);\n        delete_labourmasterdata({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const getlabour_category_master = useSubscription(getLabour_Master);\n    if (getlabour_category_master.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }   \n    console.log(getlabour_category_master.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'labour_category',\n            headerName: 'Labour Category ',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\"onClick={()=>{onEdit(params.row)}}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n    \n\n    const rows=getlabour_category_master.data.labour_category_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n        <div>\n            \n        <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>labour Category Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modallabour.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">labour Category master</label>\n                                        <input defaultValue={modallabour.labour_category} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"labour_category\" type=\"text\" placeholder='Enter labour_category' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n\n\n\n\n\n\n\n        <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Labour Category Master</h3>\n\n<br/>\n                            <form onSubmit={onFormSubmit} className=\"form-group\" >\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Labour Category</label>\n                                        <input placeholder=\"enter labour category\"  className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"labour_category\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        // components={{\n                        //   Toolbar: GridToolbar,\n                        // }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Category } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getPayment_master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    payment_type(where: {isDeleted: {_eq: $_eq}}){\n      id\n      payment_type\n    }\n  }\n  \n  \n\n`\n\n\nconst InsertPayment_Master = gql`\nmutation MyMutation($payment_type: String = \"\") {\n    insert_payment_type_one(object: {payment_type: $payment_type}) {\n      id\n    }\n  }\n  \n\n`\n\nconst UpdatePayment_Master = gql`\nmutation MyMutation($id: Int = \"\", $payment_type: String = \"\") {\n    update_payment_type_by_pk(pk_columns: {id: $id}, _set: { payment_type: $payment_type}) {\n      id\n      payment_type\n    }\n  }\n  \n\n\n`\n\n// const DeletePayment_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_payment_type_by_pk(id: $id) {\n//       id\n//       payment_type\n//     }\n//   }\n  \n// `\n\nconst DeletePayment_Master = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_payment_type_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      isDeleted\n    }\n  }\n  \n`\n\n\nexport default function Payment_Type() {\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [modalpayment, setmodalpayment] = useState({\n        id: '',\n        payment_type: '',\n    })\n\n\n    const onModalInputChange = (e) => {\n        setmodalpayment({ ...modalpayment, [e.target.name]: e.target.value });\n    }\n\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(modalpayment);\n        Update_paymenttypeData({ variables: { id: modalpayment.id, payment_type: modalpayment.payment_type } })\n\n        handleClose();\n    }\n    const [Insert_paymenttypeData] = useMutation(InsertPayment_Master);\n    const [Update_paymenttypeData] = useMutation(UpdatePayment_Master);\n    const [delete_paymenttypeData] = useMutation(DeletePayment_Master);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        Insert_paymenttypeData({ variables: { payment_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setmodalpayment({\n            id: row.id,\n            payment_type: row.payment_type\n        })\n    }\n\n\n\n\n    const onDelete = (id) => {\n        console.log(id);\n        delete_paymenttypeData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const getpayment_type = useSubscription(getPayment_master);\n    if (getpayment_type.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getpayment_type.error) {\n        return \"error\" + getpayment_type.error;\n    }\n    console.log(getpayment_type.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'payment_type',\n            headerName: 'Payment Type ',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\" onClick={() => { onEdit(params.row) }}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    const rows = getpayment_type.data.payment_type;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n            <div>\n\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Payment Type Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6 text-right\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={modalpayment.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter payment type' required />\n                                </div>\n                                <div className=\"field col-md-6 text-right\">\n                                    <label className=\"required\">labour Category master</label>\n                                    <input defaultValue={modalpayment.payment_type} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"payment_type\" type=\"text\" placeholder='Enter payment' required />\n                                </div>\n                            </div><br />\n\n                            <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n\n\n\n\n\n\n\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br />\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Payment Type</h3>\n\n                            <br />\n                            <form onSubmit={onFormSubmit} className=\"form-group\" >\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Payment_Type</label>\n                                        <input placeholder=\"enter Payment Type\" className=\"form-control mt-2\" style={{ marginTop: '10px', width: '80%' }} name=\"payment_type\" type=\"text\" required />\n                                    </div>\n                                </div>\n                                <br />\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                          Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n\n    )\n}","import React, { useState } from 'react';\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n// import Button from '@restart/ui/esm/Button';\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\nconst getAVAILABILITY = gql`\nsubscription MySubscription {\n    availability {\n      id\n      availability\n    }\n  } \n`\nconst DELETE_AVAILABILITY = gql`\n  mutation MyMutation($id: Int = 10) {\n    delete_availability_by_pk(id: $id) {\n      id\n      availability\n    }\n  }\n`\nconst INSERT_AVAILABILITY = gql`\nmutation MyMutation($availability: String = \"\") {\n    insert_availability_one(object: {availability: $availability}) {\n      id\n      availability\n    }\n  }  \n`\nconst UPDATE_AVAILABILITY = gql`\nmutation MyMutation($id: Int!, $availability: String!) {\n    update_availability_by_pk(pk_columns: {id: $id}, _set: {availability: $availability}) {\n      availability\n    }\n  }\n  \n  \n    \n`\nfunction Availability() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [availability, setAvailability] = useState({\n        availability: '',\n    }\n    )\n\n    const [modelAvailability, setModelAvailability] = useState({\n        id: '',\n        availability: '',\n    }\n    )\n    const onInputChange = (e) => {\n        setAvailability({ ...availability, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target[0].value)\n        insert_availability({ variables: { availability: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setModelAvailability({\n            id: row.id,\n            availability: row.availability\n        })\n    }\n    const onModalInputChange = (e) => {\n        setModelAvailability({ ...modelAvailability, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(modelAvailability)\n        update_availability({ variables: { id: modelAvailability.id, availability: modelAvailability.availability } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const [insert_availability] = useMutation(INSERT_AVAILABILITY);\n    const [update_availability] = useMutation(UPDATE_AVAILABILITY);\n    const [delete_availability] = useMutation(DELETE_AVAILABILITY);\n    const onDelete = (id) => {\n        console.log(id);\n        delete_availability({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const getAvailability = useSubscription(getAVAILABILITY);\n    if (getAvailability.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getAvailability.error) {\n        return \"error\" + getAvailability.error;\n    }\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'availability',\n            headerName: 'Availability',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { onEdit(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    //console.log(getAvailability.data);\n    const rows = getAvailability.data.availability;\n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Availability</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modelAvailability.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">Availability Master</label>\n                                        <input defaultValue={modelAvailability.availability} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"availability\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit' style={{ marginLeft: '80px' }}>Save</button>  \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Availability Master</h3>\n\n<br/>\n                            <form className=\"form-group\" onSubmit={onFormSubmit}>\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Availability</label>\n                                        <input placeholder=\"enter availability\" onChange={onInputChange} className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"availability\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '20px', width:'8%' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'8%' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}\nexport default Availability;","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport exportFromJSON from 'export-from-json'\n\n\nconst READ_MEDIA = gql`\nquery MyQuery($_eq: String = \"false\") {\n    media_type_master(where: {isDeleted: {_eq: $_eq}}) {\n      id\n      media_type\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery($_eq: String = \"true\"){\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      hoarding_errection {\n        civil_contractor\n        civil_contractor_labour_payment\n        civil_material\n        electric_material_purchase\n        electrician_labour_payment\n        electrician_selection\n        excavator\n        excavator_charges\n        fabrication_material\n        fabricator\n        fabricator_labour_payment\n        id\n        isDeleted\n        laborMasterByElectricianSelection {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        laborMasterByExcavator {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        laborMasterByFabricator {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          mobile_no\n          labor_type\n          name\n          pan\n        }\n        labor_master {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        location\n        payment\n        permission\n        transport_charges\n      }\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n    }\n  }  \n`\n\n\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\n// const DELETE_INQUIRY = gql`\n// mutation MyMutation($id: Int!) {\n//   delete_inquiry_master_by_pk(id: $id) {\n//     id\n//   }\n// }\n// `\n\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    inquiry_master(where: {isDeleted: {_eq: $_eq}}){\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        DisplayRatePM\n    \n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        Total\n        Totalsqft\n        Width\n        \n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        \n      }\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\nconst SEARCH_INVENTORYALL = gql`\nquery MyQuery($state:Int!,$district:Int!,$subdistrict:Int!,$media_type:Int!,$_gt:date!){\n    Inventory_Master(where: {District: {_eq:$district}, Media_Type: {_eq:$media_type}, State: {_eq:$state}, Subdistrict: {_eq:$subdistrict}, AvailabilityTo: {_lt:$_gt}}) {\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      hoarding_errection {\n        civil_contractor\n        civil_contractor_labour_payment\n        civil_material\n        electric_material_purchase\n        electrician_labour_payment\n        electrician_selection\n        excavator\n        excavator_charges\n        fabrication_material\n        isDeleted\n        id\n        fabricator_labour_payment\n        fabricator\n      }\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n    }\n  }  \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($state:Int!,$district:Int!,$subdistrict:Int!,$media_type:Int!,$illumination:String=\"\",$_gt:date!){\n    Inventory_Master(where: {District: {_eq:$district}, Media_Type: {_eq:$media_type}, State: {_eq:$state}, Subdistrict: {_eq:$subdistrict}, Illumination: {_eq:$illumination}, AvailabilityTo: {_lt:$_gt}}) {\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      hoarding_errection {\n        civil_contractor\n        civil_contractor_labour_payment\n        civil_material\n        electric_material_purchase\n        electrician_labour_payment\n        electrician_selection\n        excavator\n        excavator_charges\n        fabrication_material\n        isDeleted\n        id\n        fabricator_labour_payment\n        fabricator\n      }\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n    }\n  }  \n`\nconst READ_STATES = gql`\nquery MyQuery {\n    geo_locations {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\nconst READ_DISTRICT = gql`\nquery MyQuery($_eq: Int!) {\n    geo_locations(where: {parent_id: {_eq: $_eq}}) {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\nconst READ_SUBDISTRICT = gql`\nquery MyQuery($_eq: Int!) {\n    geo_locations(where: {parent_id: {_eq: $_eq}}) {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\nexport default function Inquiry_Master() {\n    //variables\n    var data_state = \"\";\n    var data_district = \"\";\n    var data_subdistrict = \"\";\n    //States\n    const [selected, setSelected] = useState();\n    const [showhide, setShowhide] = useState('hidden');\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [state, setState] = useState();\n    const [district, setDistrict] = useState();\n    const [subdistrict, setSubdistrict] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n\n    //Form states\n    const [sol, setSol] = useState();\n    const [name, setName] = useState();\n    const [number, setNumber] = useState();\n    const [emailid, setEmailid] = useState();\n    const [whatsappNumber, setWhatsappNumber] = useState();\n    const [startDate, setStartDate] = useState();\n\n    const [media_type, setMedia_type] = useState();\n    const [status, setStatus] = useState();\n    //Modal states\n    const [modalId, setModalId] = useState();\n    const [modalSol, setModalSol] = useState();\n    const [modalName, setModalName] = useState();\n    const [modalNumber, setModalNumber] = useState();\n    const [modalEmailid, setModalEmailid] = useState();\n    const [modalWhatsappNumber, setModalWhatsappNumber] = useState();\n    const [modalStartDate, setModalStartDate] = useState();\n\n    const [modalMedia_type, setModalMedia_type] = useState();\n    const [modalStatus, setModalStatus] = useState();\n    const [modalLocation, setModalLocation] = useState();\n    //Queries\n    const [insert_inquiry] = useMutation(INSERT_INQUIRY);\n    const [update_inquiry] = useMutation(UPDATE_INQUIRY);\n    const [delete_inquiry] = useMutation(DELETE_INQUIRY);\n    // const [get_district, read_district] = useLazyQuery(READ_DISTRICT);\n    // const [get_subdistrict, read_subdistrict] = useLazyQuery(READ_SUBDISTRICT);\n    const read_media = useQuery(READ_MEDIA);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n    const read_states = useQuery(READ_STATES);\n    const [loadInventoryAll, invData] = useLazyQuery(SEARCH_INVENTORYALL);\n\n    //Loader\n    if (read_states.loading || read_inquiry.loading || read_inventory.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n        // get_district({ variables: { _eq: parseInt(state_data.id) } })\n    }\n    const onDistrictChange = (district_data) => {\n        setDistrict(district_data.id)\n        // get_subdistrict({ variables: { _eq: parseInt(district_data.id) } })\n    }\n    const onSubdistrictChange = (subdistrict_data) => {\n        setSubdistrict(subdistrict_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        setSearchDate(e.target.value);\n    }\n\n    const onSearch = (e) => {\n        setShowhide(\"visible\");\n        e.preventDefault();\n        if (illumination === \"ALL\") {\n            loadInventoryAll({ variables: { state: state, district: district, subdistrict: subdistrict, illumination: \"\", media_type: searchMediaType, _gt: searchDate } })\n        }\n        else {\n            loadInventory({ variables: { state: state, district: district, subdistrict: subdistrict, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        }\n    }\n    const onFormSOLChange = (e) => {\n        setSol(e.target.value);\n    }\n    const onFormNameChange = (e) => {\n        setName(e.target.value)\n    }\n    const onFormNumberChange = (e) => {\n        setNumber(e.target.value)\n    }\n    const onFormEmailIdChange = (e) => {\n        setEmailid(e.target.value)\n    }\n    const onFormWhatsappNumberChange = (e) => {\n        setWhatsappNumber(e.target.value);\n    }\n    const onStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    }\n\n    const onMediaChange = (e) => {\n        setMedia_type(e.target.value);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.target.value);\n    }\n    //Modal Statets\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value)\n    }\n    const onModalSOLChange = (e) => {\n        setModalSol(e.target.value);\n    }\n    const onModalNameChange = (e) => {\n        setModalName(e.target.value)\n    }\n    const onModalNumberChange = (e) => {\n        setModalNumber(e.target.value)\n    }\n    const onModalEmail_idChange = (e) => {\n        setModalEmailid(e.target.value)\n    }\n    const onModalWhatsappNumberChange = (e) => {\n        setModalWhatsappNumber(e.target.value);\n    }\n    const onModalLocationChange = (e) => {\n        setModalLocation(e.target.value);\n    }\n    const onModalStartDateChange = (e) => {\n        setModalStartDate(e.target.value);\n    }\n\n    const onModalMediaChange = (e) => {\n        setModalMedia_type(e.target.value);\n    }\n    const onModalStatusChange = (e) => {\n        setModalStatus(e.target.value);\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        for (var i = 0; i < selected.length; i++) {\n            console.log(selected[i]);\n            insert_inquiry({ variables: { sol: sol, name: name, number: number, email_id: emailid, whatsapp_number: whatsappNumber, inventory: selected[i], start_date: startDate, media_type: media_type, status: status } })\n        }\n\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        //console.log(row)\n        handleShow();\n        setModalId(row.id);\n        setModalSol(row.sol);\n        setModalName(row.name);\n        setModalNumber(row.number);\n        setModalEmailid(row.email_id);\n        setModalWhatsappNumber(row.whatsapp_number);\n        setModalStartDate(row.start_date);\n\n        setModalMedia_type(row.media_type);\n        setModalStatus(row.status);\n        setModalLocation(row.Inventory_Master.id)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_inquiry({ variables: { id: modalId, sol: modalSol, name: modalName, number: modalNumber, email_id: modalEmailid, whatsapp_number: modalWhatsappNumber, inventory: modalLocation, start_date: modalStartDate, media_type: modalMedia_type, status: modalStatus } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_inquiry({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const columns1 = [\n        {\n            field: 'id',\n            headerName: 'Id',\n            width: 160,\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 200\n        },\n        {\n            field: 'District',\n            headerName: 'District',\n            width: 200\n        },\n        {\n            field: 'Subdistrict',\n            headerName: 'Subdistrict',\n            width: 200\n        },\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 200\n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Illumination',\n            headerName: 'Illumination',\n            width: 200\n        },\n        {\n            field: 'Width',\n            headerName: 'Width',\n            width: 200\n        },\n        {\n            field: 'Height',\n            headerName: 'Height',\n            width: 200\n        },\n        {\n            field: 'NoofDisplay',\n            headerName: 'No Of Display',\n            width: 200\n        },\n        {\n            field: 'Totalsqft',\n            headerName: 'Total Sq ft',\n            width: 200\n        },\n        {\n            field: 'DrpmRate',\n            headerName: 'DrpmRate',\n            width: 200\n        },\n        {\n            field: 'DisplayRatePM',\n            headerName: 'DisplayRatePM',\n            width: 200\n        },\n        {\n            field: 'OtpcRate',\n            headerName: 'OneTimePrintingCostRate',\n            width: 200\n        },\n        {\n            field: 'OneTimePrintingCost',\n            headerName: 'OneTimePrintingCost',\n            width: 200\n        },\n        {\n            field: 'OtmcRate',\n            headerName: 'OneTimeMountingCostRate',\n            width: 200\n        },\n        {\n            field: 'OneTimeMountingCost',\n            headerName: 'OneTimeMountingCost',\n            width: 200\n        },\n        {\n            field: 'Total',\n            headerName: 'Total',\n            width: 200\n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'Booking From',\n            width: 200\n        },\n        {\n            field: 'AvailabilityTo',\n            headerName: 'Booking To',\n            width: 200\n        },\n    ]\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'sol',\n            headerName: 'Source Of Lead',\n            width: 160\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n        {\n            field: 'number',\n            headerName: 'Number',\n            width: 160,\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email Id',\n            width: 160,\n        },\n        {\n            field: 'whatsapp_number',\n            headerName: 'Whatsapp Number',\n            width: 190\n        },\n        {\n            field: 'start_date',\n            headerName: 'Start Date',\n            width: 190\n        },\n\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_inquiry.data.inquiry_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    const emptyarr = [\n        {\n            id: \"\",\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            DisplayRatePM: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            State: \"\",\n            District: \"\",\n            Subdistrict: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            media_type_master: {\n                id: \"\",\n                media_type: \"\"\n            },\n        }\n    ]\n    var rows1 = emptyarr;\n    //console.log(data);\n    if (illumination === \"ALL\") {\n        if (invData.data) {\n            rows1 = invData.data.Inventory_Master;\n        }\n    }\n    else {\n        if (data) {\n            rows1 = data.Inventory_Master;\n        }\n    }\n\n\n    return (\n        <div>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Customer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Customer Name</label>\n                                    <input defaultValue={modalName} onChange={onModalNameChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Customer Number</label>\n                                    <input defaultValue={modalNumber} onChange={onModalNumberChange} className=\"form-control mt-1\" name=\"contact_person\" type=\"number\" required pattern=\"[789][0-9]{9}\" title=\"Please enter Alphabets.\" />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Email ID</label>\n                                    <input defaultValue={modalEmailid} onChange={onModalEmail_idChange} className=\"form-control mt-1\" name=\"email_id\" type=\"tel\" required pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email\" />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Whatsapp Number</label>\n                                    <input defaultValue={modalWhatsappNumber} onChange={onModalWhatsappNumberChange} className=\"form-control mt-1\" name=\"whatsappNumber\" type=\"number\" pattern=\"[789][0-9]{9}\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Source Of Lead</label>\n                                    <input defaultValue={modalSol} onChange={onModalSOLChange} className=\"form-control mt-1\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Location</label>\n\n                                    <select onChange={onModalLocationChange} className=\"form-control\" defaultValue={modalLocation}>\n                                        <option>Select...</option>\n                                        {read_inventory.data.Inventory_Master.map((inventory) => (\n                                            <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Date</label>\n                                    <input type=\"date\" readonly defaultValue={modalStartDate} onChange={onModalStartDateChange} className=\"form-control mt-1\" required />\n                                </div>\n\n                            </div>\n\n                            <div className=\"row\">\n\n                                <div className=\"field col-md-6\">\n                                    <label>Media Type</label>\n                                    <select defaultValue={modalMedia_type} className=\"form-control\" onChange={onModalMediaChange}>\n                                        <option>Select...</option>\n                                        {read_media.data.media_type_master.map((media) => (\n                                            <option key={media.id} value={media.id}>{media.media_type}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label>Status</label>\n                                    <select defaultValue={modalStatus} onChange={onModalStatusChange} className=\"form-control\">\n                                        <option>Select...</option>\n                                        <option>Completed</option>\n                                        <option>In Process</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <form className=\"form-group\" padding=\"2px\">\n                    <h4 className=\"text-center\">INQUIRY MASTER</h4>\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Source Of Lead</label>\n                            <input placeholder=\"enter source of lead\" type=\"text\" name=\"form_sol\" onChange={onFormSOLChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter source of lead.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Customer Name</label>\n                            <input placeholder=\"enter customer name\" type=\"text\" name=\"form_name\" onChange={onFormNameChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter customer name.\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Customer Number</label>\n                            <input placeholder=\"enter customer number\" type=\"number\" name=\"form_number\" onChange={onFormNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input placeholder=\"enter email id\" type=\"email\" name=\"form_email_id\" onChange={onFormEmailIdChange} className=\"form-control mt-1\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Whatsapp Number</label>\n                            <input placeholder=\"enter whatsapp number\" type=\"number\" name=\"form_whatsapp_no\" onChange={onFormWhatsappNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter whatsapp\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Start Date</label>\n                            <input placeholder=\"enter start date\" type=\"date\" name=\"start_date\" onChange={onStartDateChange} className=\"form-control mt-1\" title=\"Please enter start date\" />\n                        </div>\n                    </div><br />\n\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Media Type</label>\n                            {/* <input placeholder=\"enter media type\" type=\"text\" name=\"media_type\" onChange={onDowntimeChange} className=\"form-control mt-1\" title=\"Please enter media type\" /> */}\n                            <select className=\"form-control\" onChange={onMediaChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div><br />\n                        <div className=\"field col-md-6\">\n                            <label>Status</label>\n                            <select className=\"form-control\" onChange={onStatusChange}>\n                                <option>Select...</option>\n                                <option>Completed</option>\n                                <option>In Process</option>\n                            </select>\n                        </div>\n                    </div>\n\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"8%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            <Select\n                                name=\"state\"\n                                options={\n                                    read_states.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                }\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">District</label>\n                            <Select\n                                name=\"district\"\n                                options={read_states.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"DISTRICT\" && currentElement.parent_id === state) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onDistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Subdistrict</label>\n                            <Select\n                                name=\"subdistrict\"\n                                options={read_states.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"SUBDISTRICT\" && currentElement.parent_id === district) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onSubdistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                                <option>ALL</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '21%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Search</button>\n                    </div>\n                    <br />\n                </form>\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={rows1}\n                        columns={columns1}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                        checkboxSelection\n                        onSelectionModelChange={itm => setSelected(itm)}\n                    />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onFormSubmit} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type=\"reset\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n                    </div>\n                </div>\n\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport Card from '@mui/material/Card'\r\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Select from 'react-select'\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport exportFromJSON from 'export-from-json'\r\n\r\n\r\nconst READ_MEDIA = gql`\r\nquery MyQuery($_eq: String = \"false\") {\r\n    media_type_master(where: {isDeleted: {_eq: $_eq}}) {\r\n      id\r\n      media_type\r\n    }\r\n  }\r\n  \r\n`\r\nconst READ_INVENTORY = gql`\r\nquery MyQuery($_eq: String = \"true\"){\r\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\r\n      AvailabilityFrom\r\n      AvailabilityTo\r\n      BookedBy\r\n      DisplayRatePM\r\n      District\r\n      DrpmRate\r\n      Height\r\n      Illumination\r\n      Location\r\n      Media_Type\r\n      NoofDisplay\r\n      OneTimeMountingCost\r\n      OneTimePrintingCost\r\n      OtmcRate\r\n      OtpcRate\r\n      State\r\n      Status\r\n      Subdistrict\r\n      Total\r\n      Totalsqft\r\n      Width\r\n      erection\r\n      geoLocationByState {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geoLocationBySubdistrict {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geo_location {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      hoarding_errection {\r\n        civil_contractor\r\n        civil_contractor_labour_payment\r\n        civil_material\r\n        electric_material_purchase\r\n        electrician_labour_payment\r\n        electrician_selection\r\n        excavator\r\n        excavator_charges\r\n        fabrication_material\r\n        fabricator\r\n        fabricator_labour_payment\r\n        id\r\n        isDeleted\r\n        laborMasterByElectricianSelection {\r\n          address\r\n          bank_id\r\n          gst_no\r\n          id\r\n          isDeleted\r\n          labor_type\r\n          mobile_no\r\n          name\r\n          pan\r\n        }\r\n        laborMasterByExcavator {\r\n          address\r\n          bank_id\r\n          gst_no\r\n          id\r\n          isDeleted\r\n          labor_type\r\n          mobile_no\r\n          name\r\n          pan\r\n        }\r\n        laborMasterByFabricator {\r\n          address\r\n          bank_id\r\n          gst_no\r\n          id\r\n          isDeleted\r\n          mobile_no\r\n          labor_type\r\n          name\r\n          pan\r\n        }\r\n        labor_master {\r\n          address\r\n          bank_id\r\n          gst_no\r\n          id\r\n          isDeleted\r\n          labor_type\r\n          mobile_no\r\n          name\r\n          pan\r\n        }\r\n        location\r\n        payment\r\n        permission\r\n        transport_charges\r\n      }\r\n      hoarding_insurance\r\n      hoarding_insurance_from\r\n      hoarding_insurance_to\r\n      id\r\n      isDeleted\r\n      media_type_master {\r\n        id\r\n        isDeleted\r\n        media_type\r\n      }\r\n    }\r\n  }  \r\n`\r\n\r\n\r\n\r\nconst INSERT_INQUIRY = gql`\r\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$media_type:Int!,$status:String!) {\r\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\r\n      id\r\n    }\r\n  }\r\n`\r\nconst UPDATE_INQUIRY = gql`\r\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$media_type:Int!,$status:String!) {\r\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\r\n      id\r\n    }\r\n  }\r\n`\r\n// const DELETE_INQUIRY = gql`\r\n// mutation MyMutation($id: Int!) {\r\n//   delete_inquiry_master_by_pk(id: $id) {\r\n//     id\r\n//   }\r\n// }\r\n// `\r\n\r\nconst DELETE_INQUIRY = gql`\r\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\r\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst READ_INQUIRY = gql`\r\nsubscription MySubscription($_eq: String = \"false\"){\r\n    inquiry_master(where: {isDeleted: {_eq: $_eq}}){\r\n      email_id\r\n      Inventory_Master {\r\n        AvailabilityFrom\r\n        AvailabilityTo\r\n        DisplayRatePM\r\n    \r\n        DrpmRate\r\n        Height\r\n        Illumination\r\n        Location\r\n        Media_Type\r\n        NoofDisplay\r\n        OneTimeMountingCost\r\n        OneTimePrintingCost\r\n        OtmcRate\r\n        OtpcRate\r\n        Total\r\n        Totalsqft\r\n        Width\r\n        \r\n        hoarding_insurance\r\n        id\r\n        media_type_master {\r\n          id\r\n          media_type\r\n        }\r\n        \r\n      }\r\n      id\r\n      inventory\r\n      name\r\n      number\r\n      sol\r\n      start_date\r\n      whatsapp_number\r\n      media_type\r\n      media_type_master {\r\n        id\r\n        media_type\r\n        }\r\n        status\r\n    }\r\n  }\r\n`\r\nconst SEARCH_INVENTORYALL=gql`\r\nquery MyQuery($state:Int!,$district:Int!,$subdistrict:Int!,$media_type:Int!,$illumination:String=\"\",$_gt:date!){\r\n    Inventory_Master(where: {District: {_eq:$district}, Media_Type: {_eq:$media_type}, State: {_eq:$state}, Subdistrict: {_eq:$subdistrict}, Illumination: {_eq:$illumination}, AvailabilityTo: {_lt:$_gt}}) {\r\n      AvailabilityFrom\r\n      AvailabilityTo\r\n      BookedBy\r\n      DisplayRatePM\r\n      District\r\n      DrpmRate\r\n      Height\r\n      Illumination\r\n      Location\r\n      Media_Type\r\n      NoofDisplay\r\n      OneTimeMountingCost\r\n      OneTimePrintingCost\r\n      OtmcRate\r\n      OtpcRate\r\n      State\r\n      Status\r\n      Subdistrict\r\n      Total\r\n      Totalsqft\r\n      Width\r\n      erection\r\n      geoLocationByState {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geoLocationBySubdistrict {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geo_location {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      hoarding_errection {\r\n        civil_contractor\r\n        civil_contractor_labour_payment\r\n        civil_material\r\n        electric_material_purchase\r\n        electrician_labour_payment\r\n        electrician_selection\r\n        excavator\r\n        excavator_charges\r\n        fabrication_material\r\n        isDeleted\r\n        id\r\n        fabricator_labour_payment\r\n        fabricator\r\n      }\r\n      hoarding_insurance\r\n      hoarding_insurance_from\r\n      hoarding_insurance_to\r\n      id\r\n      isDeleted\r\n      media_type_master {\r\n        id\r\n        isDeleted\r\n        media_type\r\n      }\r\n    }\r\n  }  \r\n`\r\n\r\nconst SEARCH_INVENTORY=gql`\r\nquery MyQuery($state:Int!,$district:Int!,$subdistrict:Int!,$media_type:Int!,$illumination:String=\"\",$_gt:date!){\r\n    Inventory_Master(where: {District: {_eq:$district}, Media_Type: {_eq:$media_type}, State: {_eq:$state}, Subdistrict: {_eq:$subdistrict}, Illumination: {_eq:$illumination}, AvailabilityTo: {_lt:$_gt}}) {\r\n      AvailabilityFrom\r\n      AvailabilityTo\r\n      BookedBy\r\n      DisplayRatePM\r\n      District\r\n      DrpmRate\r\n      Height\r\n      Illumination\r\n      Location\r\n      Media_Type\r\n      NoofDisplay\r\n      OneTimeMountingCost\r\n      OneTimePrintingCost\r\n      OtmcRate\r\n      OtpcRate\r\n      State\r\n      Status\r\n      Subdistrict\r\n      Total\r\n      Totalsqft\r\n      Width\r\n      erection\r\n      geoLocationByState {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geoLocationBySubdistrict {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geo_location {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      hoarding_errection {\r\n        civil_contractor\r\n        civil_contractor_labour_payment\r\n        civil_material\r\n        electric_material_purchase\r\n        electrician_labour_payment\r\n        electrician_selection\r\n        excavator\r\n        excavator_charges\r\n        fabrication_material\r\n        isDeleted\r\n        id\r\n        fabricator_labour_payment\r\n        fabricator\r\n      }\r\n      hoarding_insurance\r\n      hoarding_insurance_from\r\n      hoarding_insurance_to\r\n      id\r\n      isDeleted\r\n      media_type_master {\r\n        id\r\n        isDeleted\r\n        media_type\r\n      }\r\n    }\r\n  }  \r\n`\r\nconst READ_STATES = gql`\r\nquery MyQuery {\r\n    geo_locations {\r\n      pin\r\n      parent_id\r\n      name\r\n      location_type\r\n      id\r\n      external_id\r\n    }\r\n  }  \r\n`\r\n\r\nexport default function Inquiry_Master() {\r\n    //variables\r\n    var data_country = \"\";\r\n    var data_state = \"\";\r\n    var data_city = \"\";\r\n    //States\r\n    const [selected,setSelected] = useState();\r\n    const [showhide, setShowhide] = useState('hidden');\r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [state, setState] = useState();\r\n    const [district, setDistrict] = useState();\r\n    const [subdistrict, setSubdistrict] = useState();\r\n    const [illumination, setIllumination] = useState();\r\n    const [searchMediaType, setSearchMediaType] = useState();\r\n    const [searchDate, setSearchDate] = useState();\r\n    const [location, setLocation] = useState();\r\n    const [inventoryData, setInventoryData] = useState();\r\n\r\n    //Form states\r\n    const [sol, setSol] = useState();\r\n    const [name, setName] = useState();\r\n    const [number, setNumber] = useState();\r\n    const [emailid, setEmailid] = useState();\r\n    const [whatsappNumber, setWhatsappNumber] = useState();\r\n    const [startDate, setStartDate] = useState();\r\n    \r\n    const [media_type, setMedia_type] = useState();\r\n    const [status, setStatus] = useState();\r\n    //Modal states\r\n    const [modalId, setModalId] = useState();\r\n    const [modalSol, setModalSol] = useState();\r\n    const [modalName, setModalName] = useState();\r\n    const [modalNumber, setModalNumber] = useState();\r\n    const [modalEmailid, setModalEmailid] = useState();\r\n    const [modalWhatsappNumber, setModalWhatsappNumber] = useState();\r\n    const [modalStartDate, setModalStartDate] = useState();\r\n\r\n    const [modalMedia_type, setModalMedia_type] = useState();\r\n    const [modalStatus, setModalStatus] = useState();\r\n    const [modalLocation, setModalLocation] = useState();\r\n    //Queries\r\n    const [insert_inquiry] = useMutation(INSERT_INQUIRY);\r\n    const [update_inquiry] = useMutation(UPDATE_INQUIRY);\r\n    const [delete_inquiry] = useMutation(DELETE_INQUIRY);\r\n    const read_media = useQuery(READ_MEDIA);\r\n    const read_inventory = useQuery(READ_INVENTORY);\r\n    const read_inquiry = useSubscription(READ_INQUIRY);\r\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\r\n    const read_states = useQuery(READ_STATES);\r\n    const [loadInventoryAll, invData] = useLazyQuery(SEARCH_INVENTORYALL);\r\n\r\n    //Loader\r\n    if (read_states.loading||read_inquiry.loading || read_inventory.loading ) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n\r\n    const onStateChange = (state_data) => {\r\n        setState(state_data.id)\r\n    }\r\n    const onDistrictChange = (district_data) => {\r\n        setDistrict(district_data.id)\r\n    }\r\n    const onSubdistrictChange = (subdistrict_data) => {\r\n        setSubdistrict(subdistrict_data.id);\r\n    }\r\n    const onIlluminationChange = (e) => {\r\n        setIllumination(e.target.value);\r\n    }\r\n    const onsearchMediaTypeChange = (e) => {\r\n        setSearchMediaType(e.target.value)\r\n    }\r\n    const onDateChange = (e) => {\r\n        setSearchDate(e.target.value);\r\n    }\r\n    \r\n    const onSearch = (e) => {\r\n        setShowhide(\"visible\");\r\n        e.preventDefault();\r\n        if(illumination===\"ALL\")\r\n        {\r\n            loadInventoryAll({ variables: { state: state, district: district, subdistrict: subdistrict, illumination: \"\", media_type: searchMediaType, _gt: searchDate } })   \r\n        }\r\n        else\r\n        {\r\n            loadInventory({ variables: { state: state, district: district, subdistrict: subdistrict, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\r\n        }\r\n    }\r\n    const onFormSOLChange = (e) => {\r\n        setSol(e.target.value);\r\n    }\r\n    const onFormNameChange = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    const onFormNumberChange = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n    const onFormEmailIdChange = (e) => {\r\n        setEmailid(e.target.value)\r\n    }\r\n    const onFormWhatsappNumberChange = (e) => {\r\n        setWhatsappNumber(e.target.value);\r\n    }\r\n    const onStartDateChange = (e) => {\r\n        setStartDate(e.target.value);\r\n    }\r\n    \r\n    const onMediaChange = (e) => {\r\n        setMedia_type(e.target.value);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    //Modal Statets\r\n    const onModalIdChange = (e) => {\r\n        setModalId(e.target.value)\r\n    }\r\n    const onModalSOLChange = (e) => {\r\n        setModalSol(e.target.value);\r\n    }\r\n    const onModalNameChange = (e) => {\r\n        setModalName(e.target.value)\r\n    }\r\n    const onModalNumberChange = (e) => {\r\n        setModalNumber(e.target.value)\r\n    }\r\n    const onModalEmail_idChange = (e) => {\r\n        setModalEmailid(e.target.value)\r\n    }\r\n    const onModalWhatsappNumberChange = (e) => {\r\n        setModalWhatsappNumber(e.target.value);\r\n    }\r\n    const onModalLocationChange = (e) => {\r\n        setModalLocation(e.target.value);\r\n    }\r\n    const onModalStartDateChange = (e) => {\r\n        setModalStartDate(e.target.value);\r\n    }\r\n    \r\n    const onModalMediaChange = (e) => {\r\n        setModalMedia_type(e.target.value);\r\n    }\r\n    const onModalStatusChange = (e) => {\r\n        setModalStatus(e.target.value);\r\n    }\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        for(var i=0;i<selected.length;i++)\r\n        {   \r\n            console.log(selected[i]);\r\n            insert_inquiry({ variables: { sol: sol, name: name, number: number, email_id: emailid, whatsapp_number: whatsappNumber, inventory:selected[i] , start_date: startDate, media_type: media_type, status: status } })\r\n        }\r\n        \r\n        toast.configure();\r\n        toast.success('Successfully Inserted')\r\n    }\r\n    const onEdit = (row) => {\r\n        //console.log(row)\r\n        handleShow();\r\n        setModalId(row.id);\r\n        setModalSol(row.sol);\r\n        setModalName(row.name);\r\n        setModalNumber(row.number);\r\n        setModalEmailid(row.email_id);\r\n        setModalWhatsappNumber(row.whatsapp_number);\r\n        setModalStartDate(row.start_date);\r\n        \r\n        setModalMedia_type(row.media_type);\r\n        setModalStatus(row.status);\r\n        setModalLocation(row.Inventory_Master.id)\r\n    }\r\n    const onModalFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        update_inquiry({ variables: { id: modalId, sol: modalSol, name: modalName, number: modalNumber, email_id: modalEmailid, whatsapp_number: modalWhatsappNumber, inventory: modalLocation, start_date: modalStartDate,  media_type: modalMedia_type, status: modalStatus } })\r\n        handleClose();\r\n        toast.configure();\r\n        toast.warning('Successfully Updated')\r\n    }\r\n    const onDelete = (id) => {\r\n        delete_inquiry({ variables: { id: id } })\r\n        toast.configure();\r\n        toast.error('Successfully Deleted')\r\n    }\r\n   \r\n    const columns1 = [\r\n        {\r\n            field:'id',\r\n            headerName:'Id',\r\n            width:160,\r\n        },\r\n        { \r\n            field: 'State', \r\n            headerName: 'State', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'District', \r\n            headerName: 'District', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Subdistrict', \r\n            headerName: 'Subdistrict', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Location', \r\n            headerName: 'Location', \r\n            width: 200 \r\n        },\r\n        {\r\n            field: 'Media_Type',\r\n            headerName: 'Media_Type',\r\n            width: 180,\r\n            valueGetter: (params) => {\r\n                return params.row.media_type_master.media_type;\r\n            }\r\n        },\r\n        { \r\n            field: 'Illumination', \r\n            headerName: 'Illumination', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Width', \r\n            headerName: 'Width', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Height', \r\n            headerName: 'Height', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'NoofDisplay', \r\n            headerName: 'No Of Display', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Totalsqft', \r\n            headerName: 'Total Sq ft', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'DrpmRate', \r\n            headerName: 'DrpmRate', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'DisplayRatePM', \r\n            headerName: 'DisplayRatePM', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'OtpcRate', \r\n            headerName: 'OneTimePrintingCostRate', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'OneTimePrintingCost', \r\n            headerName: 'OneTimePrintingCost', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'OtmcRate', \r\n            headerName: 'OneTimeMountingCostRate', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'OneTimeMountingCost', \r\n            headerName: 'OneTimeMountingCost', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Total', \r\n            headerName: 'Total', \r\n            width: 200 \r\n        },\r\n        {\r\n            field: 'AvailabilityFrom',\r\n            headerName: 'Booking From',\r\n            width: 200\r\n        },\r\n        { \r\n            field: 'AvailabilityTo', \r\n            headerName: 'Booking To', \r\n            width: 200 \r\n        },\r\n    ]\r\n    const columns = [\r\n        {\r\n            field: 'sno',\r\n            headerName: 'Serial No',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'sol',\r\n            headerName: 'Source Of Lead',\r\n            width: 160\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 160\r\n        },\r\n        {\r\n            field: 'number',\r\n            headerName: 'Number',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'email_id',\r\n            headerName: 'Email Id',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'whatsapp_number',\r\n            headerName: 'Whatsapp Number',\r\n            width: 190\r\n        },\r\n        {\r\n            field: 'start_date',\r\n            headerName: 'Start Date',\r\n            width: 190\r\n        },\r\n        \r\n        {\r\n            field: 'Media_Type',\r\n            headerName: 'Media_Type',\r\n            width: 180,\r\n            valueGetter: (params) => {\r\n                return params.row.media_type_master.media_type;\r\n            }\r\n        },\r\n        {\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            width: 190\r\n        },\r\n        {\r\n            field: 'inventory',\r\n            headerName: 'Location',\r\n            width: 190,\r\n            valueGetter: (params) => {\r\n                return params.row.Inventory_Master.Location;\r\n            }\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div className=\"\">\r\n                        \r\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\r\n                        <button onClick={() => {\r\n                            const confirmBox = window.confirm(\r\n                                \"Do you really want to delete?\"\r\n                            )\r\n                            if (confirmBox === true) {\r\n                                onDelete(params.row.id)\r\n                            }\r\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n    ];\r\n    const rows = read_inquiry.data.inquiry_master;\r\n    let newData = []\r\n    rows.map((item, index) => {\r\n        newData.push({ sno: index + 1, ...item })\r\n    })\r\n    const emptyarr = [\r\n        {\r\n            id:\"\",\r\n            AvailabilityFrom: \"\",\r\n            AvailabilityTo: \"\",\r\n            DisplayRatePM: \"\",\r\n            DrpmRate: \"\",\r\n            Height: \"\",\r\n            Illumination: \"\",\r\n            State:\"\",\r\n            District:\"\",\r\n            Subdistrict:\"\",\r\n            Location: \"\",\r\n            Media_Type: \"\",\r\n            NoofDisplay: \"\",\r\n            OneTimeMountingCost: \"\",\r\n            OneTimePrintingCost: \"\",\r\n            OtmcRate: \"\",\r\n            OtpcRate: \"\",\r\n            Total: \"\",\r\n            Totalsqft: \"\",\r\n            Width: \"\",\r\n            media_type_master:{\r\n                id: \"\",\r\n                media_type: \"\"\r\n            },\r\n        }\r\n    ]\r\n    var rows1 = emptyarr;\r\n    //console.log(data);\r\n    if(illumination===\"ALL\")\r\n    {\r\n        if(invData.data)\r\n        {\r\n        rows1=invData.data.Inventory_Master;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if(data)\r\n        {\r\n        rows1=data.Inventory_Master;\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Card variant=\"outlined\" className=\"form-card\" style={{\r\n                margin: \"2%\",\r\n                padding: \"2%\",\r\n                background: \"#FFFFFF\",\r\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\r\n                borderRadius: \"10px\"\r\n            }}>\r\n                <Modal show={showModal} onHide={handleClose}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Edit Customer</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <form className=\"form-group\" onSubmit={onModalFormSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">ID</label>\r\n                                    <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Name</label>\r\n                                    <input defaultValue={modalName} onChange={onModalNameChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Number</label>\r\n                                    <input defaultValue={modalNumber} onChange={onModalNumberChange} className=\"form-control mt-1\" name=\"contact_person\" type=\"number\" required pattern=\"[789][0-9]{9}\" title=\"Please enter Alphabets.\" />\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Email ID</label>\r\n                                    <input defaultValue={modalEmailid} onChange={onModalEmail_idChange} className=\"form-control mt-1\" name=\"email_id\" type=\"tel\" required pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Whatsapp Number</label>\r\n                                    <input defaultValue={modalWhatsappNumber} onChange={onModalWhatsappNumberChange} className=\"form-control mt-1\" name=\"whatsappNumber\" type=\"number\" pattern=\"[789][0-9]{9}\" required />\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Source Of Lead</label>\r\n                                    <input defaultValue={modalSol} onChange={onModalSOLChange} className=\"form-control mt-1\" required />\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Location</label>\r\n                                  \r\n                                    <select onChange={onModalLocationChange} className=\"form-control\" defaultValue={modalLocation}>\r\n                                        <option>Select...</option>\r\n                                        {read_inventory.data.Inventory_Master.map((inventory) => (\r\n                                            <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Date</label>\r\n                                    <input type=\"date\" readonly defaultValue={modalStartDate} onChange={onModalStartDateChange} className=\"form-control mt-1\" required />\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                               \r\n                                <div className=\"field col-md-6\">\r\n                                    <label>Media Type</label>\r\n                                    <select defaultValue={modalMedia_type} className=\"form-control\" onChange={onModalMediaChange}>\r\n                                        <option>Select...</option>\r\n                                        {read_media.data.media_type_master.map((media) => (\r\n                                            <option key={media.id} value={media.id}>{media.media_type}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"field col-md-6\">\r\n                                    <label>Status</label>\r\n                                    <select defaultValue={modalStatus} onChange={onModalStatusChange} className=\"form-control\">\r\n                                        <option>Select...</option>\r\n                                        <option>Completed</option>\r\n                                        <option>In Process</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"field\">\r\n                                <button className=\"btn btn-primary\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\r\n                            </div>\r\n                        </form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <form  className=\"form-group\" padding=\"2px\">\r\n                <h4 className=\"text-center\">INQUIRY MASTER</h4>\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Source Of Lead</label>\r\n                            <input placeholder=\"enter source of lead\" type=\"text\" name=\"form_sol\" onChange={onFormSOLChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter source of lead.\" />\r\n                        </div>\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Name</label>\r\n                            <input placeholder=\"enter customer name\" type=\"text\" name=\"form_name\" onChange={onFormNameChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter customer name.\" />\r\n                        </div>\r\n                    </div><br />\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Number</label>\r\n                            <input placeholder=\"enter customer number\" type=\"number\" name=\"form_number\" onChange={onFormNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\r\n                        </div>\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Email ID</label>\r\n                            <input placeholder=\"enter email id\" type=\"email\" name=\"form_email_id\" onChange={onFormEmailIdChange} className=\"form-control mt-1\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" />\r\n                        </div>\r\n                    </div><br />\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Whatsapp Number</label>\r\n                            <input placeholder=\"enter whatsapp number\" type=\"number\" name=\"form_whatsapp_no\" onChange={onFormWhatsappNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter whatsapp\" />\r\n                        </div>\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Start Date</label>\r\n                            <input placeholder=\"enter start date\" type=\"date\" name=\"start_date\" onChange={onStartDateChange} className=\"form-control mt-1\" title=\"Please enter start date\" />\r\n                        </div>\r\n                    </div><br />\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Media Type</label>\r\n                            {/* <input placeholder=\"enter media type\" type=\"text\" name=\"media_type\" onChange={onDowntimeChange} className=\"form-control mt-1\" title=\"Please enter media type\" /> */}\r\n                            <select className=\"form-control\" onChange={onMediaChange}>\r\n                                <option>Select...</option>\r\n                                {read_media.data.media_type_master.map((media) => (\r\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div><br />\r\n                        <div className=\"field col-md-6\">\r\n                            <label>Status</label>\r\n                            <select className=\"form-control\" onChange={onStatusChange}>\r\n                                <option>Select...</option>\r\n                                <option>Completed</option>\r\n                                <option>In Process</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </Card>\r\n            <Card variant=\"outlined\" className=\"form-card\" style={{\r\n                margin: \"2%\",\r\n                padding: \"8%\",\r\n                background: \"#FFFFFF\",\r\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\r\n                borderRadius: \"10px\"\r\n            }}><form className=\"form-group\">\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-4\">\r\n                            <label className=\"required\">State</label>\r\n                            <Select\r\n                                name=\"state\"\r\n                                options={read_states.data.geo_locations}\r\n                                onChange={onStateChange}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-md-4\">\r\n                            <label className=\"required\">District</label>\r\n                            <Select\r\n                                name=\"district\"\r\n                                options={read_states.data.geo_locations}\r\n                                onChange={onDistrictChange}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-md-4\">\r\n                            <label className=\"required\">Subdistrict</label>\r\n                            <Select\r\n                                name=\"subdistrict\"\r\n                                options={read_states.data.geo_locations}\r\n                                onChange={onSubdistrictChange}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.id}\r\n                            />\r\n                        </div>\r\n                    </div><br />\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-4\">\r\n                            <label>Illumination</label>\r\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\r\n                                <option>Select...</option>\r\n                                <option>F LIT</option>\r\n                                <option>NON LIT</option>\r\n                                <option>ALL</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field col-md-4\">\r\n                            <label>Media Type</label>\r\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\r\n                                <option>Select...</option>\r\n                                {read_media.data.media_type_master.map((media) => (\r\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field col-md-4\">\r\n                            <label>Date</label>\r\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\r\n                        </div>\r\n                        \r\n                    </div><br />\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\r\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'21%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\r\n                    </div>\r\n                    <br />\r\n                </form>\r\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\r\n                    <DataGrid\r\n                        rows={rows1}\r\n                        columns={columns1}\r\n                        pageSize={10}\r\n                        rowsPerPageOptions={[10]}\r\n                        components={{\r\n                            Toolbar: GridToolbar,\r\n                        }}\r\n                        checkboxSelection     \r\n                        onSelectionModelChange={itm => setSelected(itm)}\r\n                    />\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\r\n                        <button onClick={onFormSubmit} className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type=\"reset\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n                \r\n            </Card>\r\n            <Card variant=\"outlined\" className=\"form-card\" style={{\r\n                margin: \"2%\",\r\n                padding: \"2%\",\r\n                background: \"#FFFFFF\",\r\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\r\n                borderRadius: \"10px\"\r\n            }}>\r\n                <div style={{ height: 500, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={newData}\r\n                        columns={columns}\r\n                        pageSize={10}\r\n                        rowsPerPageOptions={[10]}\r\n                        checkboxSelection={false}\r\n                        disableSelectiononChange\r\n                        components={{\r\n                            Toolbar: GridToolbar,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import React, { useState, useRef } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useLazyQuery, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport axios from 'axios';\nimport { ContactSupportOutlined } from '@material-ui/icons';\n\n\nconst READ_INVENTORY = gql`\nquery MyQuery($_eq: String = \"false\"){\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\n      AvailabilityFrom\n      AvailabilityTo\n      \n      \n      DisplayRatePM\n      \n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      District\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n     \n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      \n    }\n  }\n  \n`\nconst SEARCH_QUICK_MEDIA = gql`\nquery MyQuery($_eq: String = \"Booked\", $mobile_no: String!, $_eq1: String = \"false\") {\n    quick_media(where: {mobile_no: {_eq: $mobile_no}, inquiry_master: {Inventory_Master: {Status: {_neq: $_eq}}}, isDeleted: {_eq: $_eq1}}) {\n      inquiry\n      mobile_no\n      proposal_no\n      id\n      inquiry_master {\n          inventory\n        Inventory_Master {\n          Location\n          id\n        }\n      }\n    }\n  }\n    \n  \n  \n`\nconst SEARCH_INQUIRY = gql`\nquery MyQuery($number: String!, $_eq: String = \"false\") {\n    inquiry_master(where: {number: {_eq: $number}, isDeleted: {_eq: $_eq}}) {\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        \n        \n        DisplayRatePM\n        \n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimePrintingCost\n        OneTimeMountingCost\n        OtmcRate\n        OtpcRate\n        State\n        District\n        Subdistrict\n        Total\n        Totalsqft\n        Width\n        \n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        \n      }\n      email_id\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n    }\n  }\n  \n`\nconst READ_INQUIRY = gql`\nquery MyQuery($_eq: String = \"false\"){\n    inquiry_master(where: {isDeleted: {_eq: $_eq}}){\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        \n        \n        DisplayRatePM\n        \n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimePrintingCost\n        OneTimeMountingCost\n        OtmcRate\n        OtpcRate\n        State\n        District\n        Subdistrict\n        Total\n        Totalsqft\n        Width\n        \n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        \n      }\n      email_id\n      \n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n    }\n  }\n  \n`\n\nconst READ_LABOR = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labor_master(where: {isDeleted: {_eq: $_eq}}){\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      name\n      pan\n    }\n  }\n`\n\n\nconst Read_Printer = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 2}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }  \n`\nconst Read_Mounter = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 4}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  \n`\nconst Read_Electrician = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 3}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  \n  \n`\nconst Read_Designer = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 6}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }  \n  `\nconst INSERT_BOOKING = gql`\nmutation MyMutation($Confirmation: String!, $Designer: Int = 10, $Electrician: Int = 10, $End_Date_Photo: String = \"\", $Monitoring_Photo: String = \"\", $Mounter: Int = 10, $PO: String = \"\", $Printer: Int = 10, $Shortlisted: String!, $Start_Date_Photo: String = \"\",$Start_Date:date!,$End_Date:date!,$Sites:Int!) {\n    insert_Booking_Calender_one(object: {Confirmation: $Confirmation, Designer: $Designer, Electrician: $Electrician, End_Date_Photo: $End_Date_Photo, Monitoring_Photo: $Monitoring_Photo, Mounter: $Mounter, PO: $PO, Printer: $Printer, Shortlisted: $Shortlisted, Start_Date_Photo: $Start_Date_Photo,Start_Date:$Start_Date,End_Date:$End_Date,Sites:$Sites}) {\n      id\n    }\n  }\n`\n\nconst READ_BOOKING = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    Booking_Calender(where: {isDeleted: {_eq: $_eq}}){\n      Confirmation\n      Designer\n      Electrician\n      End_Date\n      End_Date_Photo\n      Monitoring_Photo\n      Mounter\n      PO\n      Printer\n      Shortlisted\n      Sites\n      Start_Date\n      Start_Date_Photo\n      id\n      laborMasterByElectrician {\n        name\n        id\n      }\n      laborMasterByMounter {\n        id\n        name\n      }\n      laborMasterByPrinter {\n        id\n        name\n      }\n      labor_master {\n        id\n        name\n      }\n      quick_medium {\n        id\n        inquiry\n        mobile_no\n        proposal_no\n        inquiry_master {\n          Inventory_Master {\n            id\n            Location\n          }\n          email_id\n          id\n          inventory\n          media_type\n        }\n      }\n    }\n  }\n     \n`\n\nconst UPDATE_BOOKING = gql`\nmutation MyMutation($id: Int!, $Confirmation: Int = 10, $Designer: Int = 10, $Electrician: Int = 10, $End_Date_Photo: String = \"\", $Monitoring_Photo: String = \"\", $Mounter: Int = 10, $PO: String = \"\", $Printer: Int = 10, $Shortlisted: Int = 10, $Start_Date_Photo: String = \"\") {\n    update_Booking_Calender_by_pk(pk_columns: {id: $id}, _set: {Confirmation: $Confirmation, Designer: $Designer, Electrician: $Electrician, End_Date_Photo: $End_Date_Photo, Monitoring_Photo: $Monitoring_Photo, Mounter: $Mounter, PO: $PO, Printer: $Printer, Shortlisted: $Shortlisted, Start_Date_Photo: $Start_Date_Photo}) {\n      id\n    }\n  }\n`\n\n\n// const Update_Inventory=gql`\n// mutation MyMutation($Status: String = \"\") {\n//     update_Inventory_Master_by_pk(pk_columns: {id: 0}, _set: {Status: $Status}) {\n//       Status\n//     }\n//   }\n// `\n\n\n\n\n// const DELETE_BOOKING = gql`\n// mutation MyMutation($id: Int!) {\n//     delete_Booking_Calender_by_pk(id: $id) {\n//       id\n//     }\n//   }  \n// `\n\nconst DELETE_BOOKING = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_Booking_Calender_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\n\nconst UPDATE_INVENTORY = gql`\nmutation MyMutation($id: Int!, $AvailabilityFrom: date=\"2021-11-23\", $AvailabilityTo: date=\"2021-11-23\",$Status:String=\"Booked\",$BookedBy:String!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {AvailabilityFrom: $AvailabilityFrom, AvailabilityTo: $AvailabilityTo,Status:$Status,BookedBy:$BookedBy}) {\n      AvailabilityFrom\n      AvailabilityTo\n      Status\n      BookedBy\n    }\n  }\n`\nconst READ_QUICK_MEDIA = gql`\nquery MyQuery($_eq: String = \"false\"){\n    quick_media(where: {isDeleted: {_eq: $_eq}}){\n      inquiry\n      id\n      mobile_no\n      inquiry_master {\n        Inventory_Master {\n          Location\n          id\n        }\n      }\n    }\n  }\n  `\nconst GET_DATA = gql`\nquery MyQuery($id: Int = 0, $_eq1: String = \"false\") {\n    quick_media(where: {id: {_eq: $id}, isDeleted: {_eq: $_eq1}}) {\n      inquiry_master {\n        Inventory_Master {\n          id\n        }\n      }\n    }\n  }\n  \n  `\n\nconst UPDATE_BOOKING_ON_DELETE = gql`\n  mutation MyMutation($id: Int!, $BookedBy: String=\"\") {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {BookedBy: $BookedBy}) {\n      BookedBy\n    }\n  }  \n  `\nconst UPDATE_INQUIRY = gql`\n  mutation MyMutation($id: Int = 0, $status: String = \"\") {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {status: $status}) {\n      id\n    }\n  }\n  `\n\nfunction Booking() {\n    //States\n    const [selected, setSelected] = useState();\n    const [get_data, setGet_data] = useState();\n    const [username, setUsername] = useState();\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [shortlisted, setShortlisted] = useState();\n    const [confirmation, setConfirmation] = useState();\n    const [PO, setPO] = useState();\n    const [designer, setDesigner] = useState();\n    const [printer, setPrinter] = useState();\n    const [mounter, setMounter] = useState();\n    const [electrician, setElectrician] = useState();\n    const [startDatePhoto, setStartDatePhoto] = useState();\n    const [monitoringPhoto, setMonitoringPhoto] = useState();\n    const [endDatePhoto, setEndDatePhoto] = useState();\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [Booked, setBooked] = useState();\n    //Modal states\n    const [modalId, setModalId] = useState();\n    const [modalShortlisted, setModalShortlisted] = useState();\n    const [modalConfirmation, setModalConfirmation] = useState();\n    const [modalPO, setModalPO] = useState();\n    const [modalDesigner, setModalDesigner] = useState();\n    const [modalPrinter, setModalPrinter] = useState();\n    const [modalMounter, setModalMounter] = useState();\n    const [modalElectrician, setModalElectrician] = useState();\n    const [modalStartDatePhoto, setModalStartDatePhoto] = useState();\n    const [modalMonitoringPhoto, setModalMonitoringPhoto] = useState();\n    const [modalEndDatePhoto, setModalEndDatePhoto] = useState();\n    const [modalStartDate, setModalStartDate] = useState();\n    const [modalEndDate, setModalEndDate] = useState();\n    //Queries\n    const [update_inventory] = useMutation(UPDATE_INVENTORY);\n    const [insert_booking] = useMutation(INSERT_BOOKING);\n    const [update_booking] = useMutation(UPDATE_BOOKING);\n    const [delete_booking] = useMutation(DELETE_BOOKING);\n    const [update_booking_on_delete] = useMutation(UPDATE_BOOKING_ON_DELETE);\n    const [update_inquiry] = useMutation(UPDATE_INQUIRY);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useQuery(READ_INQUIRY);\n    const read_labor = useSubscription(READ_LABOR);\n    const read_booking = useSubscription(READ_BOOKING);\n    const read_printer = useSubscription(Read_Printer);\n    const read_electrician = useSubscription(Read_Electrician);\n    const read_mounter = useSubscription(Read_Mounter);\n    const read_designer = useSubscription(Read_Designer);\n    const read_quick_media = useQuery(READ_QUICK_MEDIA);\n    const [get_inventory, get_return_data] = useLazyQuery(GET_DATA, {\n        onCompleted: data => {\n            // console.log('data ', data);\n            setGet_data(data);\n        }\n    });\n\n    const [search_quick_media, { loading, error, data }] = useLazyQuery(SEARCH_QUICK_MEDIA)\n    // const [update_Inventory]=useQuery(Update_Inventory)\n    if (read_booking.loading || read_inventory.loading || read_inquiry.loading || read_labor.loading || loading || read_designer.loading || read_electrician.loading || read_printer.loading || read_mounter.loading || read_quick_media.loading || get_return_data.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    //Functions\n    const onShortlistedChange = (e) => {\n        // console.log(e.target.value)\n        setShortlisted(e.target.value);\n        // console.log(shortlisted)\n    }\n    const onConfirmationChange = (e) => {\n        setConfirmation(e.target.value);\n    }\n    const onPOChange = (e) => {\n        setPO(e.target.value);\n    }\n    const onDesignerChange = (e) => {\n        // console.log(e.target.value)\n        setDesigner(e.target.value);\n    }\n    const onPrinterChange = (e) => {\n        setPrinter(e.target.value);\n    }\n    const onMounterChange = (e) => {\n        setMounter(e.target.value);\n    }\n    const onElectricianChange = (e) => {\n        setElectrician(e.target.value);\n    }\n    const onStartDatePhotoChange = (e) => {\n        // console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setStartDatePhoto(dataimage1.data);\n            })\n\n    }\n    const onMonitoringPhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setMonitoringPhoto(dataimage1.data);\n            })\n\n    }\n    const onEndDatePhotoChange = (e) => {\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setEndDatePhoto(dataimage1.data);\n            })\n    }\n    const onStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    }\n    const onEndDateChange = (e) => {\n        setEndDate(e.target.value);\n    }\n    // const onStatusChange=(e)=>{\n    //     setBooked(e.target.value);\n    // }\n    //Modal Functions\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value);\n    }\n    const onModalShortlistedChange = (e) => {\n        setModalShortlisted(e.target.value);\n    }\n    const onModalConfirmationChange = (e) => {\n        setModalConfirmation(e.target.value);\n    }\n    const onModalPOChange = (e) => {\n        setModalPO(e.target.value);\n    }\n    const onModalDesignerChange = (e) => {\n        //console.log(e.target.value);\n        setModalDesigner(e.target.value);\n    }\n    const onModalPrinterChange = (e) => {\n        setModalPrinter(e.target.value);\n    }\n    const onModalMounterChange = (e) => {\n        setModalMounter(e.target.value);\n    }\n    const onModalElectricianChange = (e) => {\n        setModalElectrician(e.target.value);\n    }\n    const onModalStartDatePhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalStartDatePhoto(dataimage1.data);\n            })\n        //setModalStartDatePhoto(e.target.value);\n    }\n    const onModalMonitoringPhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalMonitoringPhoto(dataimage1.data);\n            })\n    }\n    const onModalEndDatePhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalEndDatePhoto(dataimage1.data);\n            })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(selected);\n        if (shortlisted === \"Yes\" && confirmation === \"Yes\") {\n            setBooked('Booked');\n            for (var i = 0; i < selected.length; i++) {\n                //console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, AvailabilityFrom: startDate, AvailabilityTo: endDate, Status: \"Booked\", BookedBy: user } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n        else if (shortlisted === \"Yes\" && confirmation === \"No\") {\n            setBooked('Hold');\n            for (var i = 0; i < selected.length; i++) {\n                console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, AvailabilityFrom: startDate, AvailabilityTo: endDate, Status: \"Hold\", BookedBy: user } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n        //if(shortlisted===\"No\" && confirmation===\"No\")\n        else {\n            setBooked('Immediate');\n            for (var i = 0; i < selected.length; i++) {\n                console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, Status: \"Immediate\", BookedBy: \"\" } })\n                update_inquiry({ variables: { id: selected[i].inquiry_master.id, status: \"Completed\" } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n    }\n    const onEdit = (row) => {\n        handleShow();\n        //console.log(row)\n        setModalId(row.id);\n        setModalShortlisted(row.Shortlisted);\n        setModalConfirmation(row.Confirmation);\n        setModalPO(row.PO);\n        setModalDesigner(row.Designer);\n        setModalPrinter(row.Printer);\n        setModalMounter(row.Mounter);\n        setModalElectrician(row.Electrician);\n        setModalStartDatePhoto(row.Start_Date_Photo);\n        setModalEndDatePhoto(row.End_Date_Photo);\n        setModalMonitoringPhoto(row.Monitoring_Photo)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_booking({ variables: { id: modalId, Shortlisted: modalShortlisted, Confirmation: modalConfirmation, PO: modalPO, Designer: modalDesigner, Printer: modalPrinter, Mounter: modalMounter, Electrician: modalElectrician, Start_Date_Photo: modalStartDatePhoto, End_Date_Photo: modalEndDatePhoto, Monitoring_Photo: modalMonitoringPhoto } });\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        setBooked('');\n        delete_booking({ variables: { id: id } })\n        update_booking_on_delete({ variables: { id: id, BookedBy: Booked } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const onsearch = (e) => {\n        e.preventDefault();\n        //console.log(e.target[0].value)\n        search_quick_media({ variables: { mobile_no: e.target[0].value } })\n    }\n//console.log(read_electrician.data);\n    const columns1 = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'proposal_no',\n            headerName: 'Proposal No',\n            width: 160,\n        },\n        {\n            field: 'mobile_no',\n            headerName: 'Mobile No',\n            width: 160,\n        },\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.inquiry_master.Inventory_Master.Location;\n            }\n        },\n    ]\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n\n        {\n            field: 'PO',\n            headerName: 'PO',\n            width: 160,\n        },\n        {\n            field: 'Designer',\n            headerName: 'Designer',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Printer',\n            headerName: 'Printer',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Mounter',\n            headerName: 'Mounter',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Electrician',\n            headerName: 'Electrician',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Start_Date_Photo',\n            headerName: 'Start Date Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.Start_Date_Photo}`} />,\n        },\n        {\n            field: 'Monitoring_Photo',\n            headerName: 'Monitoring Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.Monitoring_Photo}`} />,\n        },\n        {\n            field: 'End_Date_Photo',\n            headerName: 'End Date Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.End_Date_Photo}`} />,\n        },\n        {\n            field: 'Start_Date',\n            headerName: 'Start Date',\n            width: 160\n        },\n        {\n            field: 'End_Date',\n            headerName: 'End Date',\n            width: 160\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_booking.data.Booking_Calender;\n    const emptyarr = [\n        {\n            id: \"\",\n            proposal_no: \"\",\n            mobile_no: \"\",\n            inquiry_master: {\n                Inventory_Master: {\n                    Location: \"\"\n                }\n            }\n        }\n    ]\n    var rows1 = emptyarr\n    if (data) {\n        rows1 = data.quick_media;\n        //console.log(rows1)\n    }\n\n\n    const user = localStorage.getItem(\"userdata\");\n    //console.log(user);\n    let newData1 = []\n    rows1.map((item, index) => {\n        newData1.push({ sno: index + 1, ...item })\n    })\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    //console.log(data === undefined ?'':data.inquiry_master[0])\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Booking</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input value={modalId} className=\"form-control mt-1\" onChange={onModalIdChange} name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Shortlisted</label>\n                                {/* <select value={modalShortlisted} className=\"form-control\" onChange={onModalShortlistedChange}>\n                                    <option>Select...</option>\n                                    {read_quick_media.data.quick_media.map((shortlist) => (\n                                        <option key={shortlist.id} value={shortlist.id}>{shortlist.inquiry_master.Inventory_Master.Location}</option>\n                                    ))}\n                                </select> */}\n                                <select onChange={onModalShortlistedChange} value={modalShortlisted} className=\"form-control\">\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Confirmation</label>\n                                {/* <select onChange={onModalConfirmationChange} value={modalConfirmation} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_inventory.data.Inventory_Master.map((confirmation) => (\n                                        <option key={confirmation.id} value={confirmation.id}>{confirmation.Location}</option>\n                                    ))}\n                                </select> */}\n                                <select onChange={onModalConfirmationChange} value={modalConfirmation} className=\"form-control\">\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">PO</label>\n                                <input onChange={onModalPOChange} value={modalPO} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Designer</label>\n                                <select onChange={onModalDesignerChange} value={modalDesigner} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_designer.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Mounter</label>\n                                <select onChange={onModalMounterChange} value={modalMounter} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_mounter.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician</label>\n                                <select onChange={onModalElectricianChange} value={modalElectrician} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_electrician.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Start Date Photo</label>\n\n                                <input onChange={onModalStartDatePhotoChange} className=\"form-control\" type=\"file\" />\n\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Printer</label>\n                                <select onChange={onModalPrinterChange} value={modalPrinter} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_printer.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Monitoring Photo</label>\n                                <input onChange={onModalMonitoringPhotoChange} className=\"form-control\" type=\"file\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">End Date Photo</label>\n                                <input onChange={onModalEndDatePhotoChange} className=\"form-control\" type=\"file\" />\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <h4 className=\"text-center\">BOOKING</h4>\n                <form onSubmit={onsearch}>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <div className=\"field col-md-4\">\n                            <label>Search By Customer Mobile</label>\n                            <input className=\"form-control\" type=\"text\" name=\"customer_search\" /><br />\n                            <button className=\"btn btn-primary\" type=\"submit\" style={{ marginRight: '10px', width: '30%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Search</button>\n                        </div>\n                        <div className=\"field col-md-4\"></div>\n                    </div><br />\n                </form>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData1}\n                        columns={columns1}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection\n                        onSelectionModelChange={(ids) => {\n                            const selectedIDs = new Set(ids);\n                            const selectedRowData = rows1.filter((row) =>\n                                selectedIDs.has(row.id)\n                            )\n                            setSelected(selectedRowData)\n                            console.log(selected);\n                        }}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Shortlisted</label>\n                            {/* <select className=\"form-control\" onChange={onShortlistedChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.quick_media.map((shortlist) => (\n                                    <option key={shortlist.id} value={shortlist.id}>{shortlist.inquiry_master.Inventory_Master.Location}</option>\n                                ))}\n                            </select> */}\n                            <select className=\"form-control\" onChange={onShortlistedChange}>\n                                <option>Select...</option>\n                                <option value=\"Yes\">Yes</option>\n                                <option value=\"No\">No</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Confirmation</label>\n                            {/* <select className=\"form-control\" onChange={onConfirmationChange}>\n                                <option>Select...</option>\n                                {read_inventory.data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                ))}\n                            </select> */}\n                            <select className=\"form-control\" onChange={onConfirmationChange}>\n                                <option>Select...</option>\n                                <option value=\"Yes\">Yes</option>\n                                <option value=\"No\">No</option>\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">PO</label>\n                            <input type=\"text\" name=\"PO\" className=\"form-control\" onChange={onPOChange} />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Designer</label>\n                            <select className=\"form-control\" onChange={onDesignerChange}>\n                                <option>Select...</option>\n                                {read_designer.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Printer</label>\n                            <select className=\"form-control\" onChange={onPrinterChange}>\n                                <option>Select...</option>\n                                {read_printer.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Mounter</label>\n                            <select className=\"form-control\" onChange={onMounterChange}>\n                                <option>Select...</option>\n                                {read_mounter.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician</label>\n                            <select className=\"form-control\" onChange={onElectricianChange}>\n                                <option>Select...</option>\n                                {read_electrician.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\" >Start Date Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onStartDatePhotoChange} />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Monitoring Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onMonitoringPhotoChange} />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">End Date Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onEndDatePhotoChange} />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Start Date</label>\n                            <input type=\"date\" name=\"PO\" className=\"form-control\" onChange={onStartDateChange} />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">End Date</label>\n                            <input type=\"date\" name=\"PO\" className=\"form-control\" onChange={onEndDateChange} />\n                        </div>\n\n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type=\"reset\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Booking","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\n\n\nconst getlandloard_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    landlord_management(where: {isDeleted: {_eq: $_eq}}){\n      account_no\n      address\n      agreement_from\n      agreement_to\n      bank_name\n      branch_name\n      height\n      id\n      ifsc\n      location\n      mobile_number\n      name\n      rent_amount\n      rent_increment_reminder\n      site_address\n    \n      width\n    }\n  }\n`\n\n\nconst Insertlanloard_Master = gql`\nmutation MyMutation($account_no: String = \"\", $address: String = \"\", $agreement_from: date!, $agreement_to: date!, $bank_name: String = \"\", $branch_name: String = \"\", $height: String = \"\", $ifsc: String = \"\", $location: String = \"\", $mobile_number: String = \"\", $name: String = \"\", $rent_amount: String = \"\", $rent_increment_reminder: String = \"\", $site_address: String = \"\", $width: String = \"\") {\n    insert_landlord_management_one(object: {account_no: $account_no, address: $address, agreement_from: $agreement_from, agreement_to: $agreement_to, bank_name: $bank_name, branch_name: $branch_name, height: $height, ifsc: $ifsc, location: $location, mobile_number: $mobile_number, name: $name, rent_amount: $rent_amount, rent_increment_reminder: $rent_increment_reminder, site_address: $site_address,  width: $width}) {\n      id\n    }\n  }\n`\n\nconst Updatelandloard_Master = gql`\nmutation MyMutation($id: Int = 0, $account_no: String = \"\", $address: String = \"\", $agreement_from: date = \"\", $agreement_to: date = \"\", $bank_name: String = \"\", $branch_name: String = \"\", $height: String = \"\", $id1: Int = 10, $ifsc: String = \"\", $location: String = \"\", $mobile_number: String = \"\", $name: String = \"\", $rent_amount: String = \"\", $rent_increment_reminder: String = \"\", $site_address: String = \"\", $width: String = \"\") {\n    update_landlord_management_by_pk(pk_columns: {id: $id}, _set: {account_no: $account_no, address: $address, agreement_from: $agreement_from, agreement_to: $agreement_to, bank_name: $bank_name, branch_name: $branch_name, height: $height, ifsc: $ifsc, location: $location, mobile_number: $mobile_number, name: $name, rent_amount: $rent_amount, rent_increment_reminder: $rent_increment_reminder, site_address: $site_address,width: $width}) {\n      account_no\n      address\n      agreement_from\n      agreement_to\n      bank_name\n      branch_name\n      height\n      id\n      ifsc\n      location\n      mobile_number\n      name\n      rent_amount\n      rent_increment_reminder\n      site_address\n      \n      width\n    }\n  }\n  \n\n`\nconst Deletelandloard_Master = gql`\nmutation MyMutation($id: Int = 10, $isDeleted: String = \"true\") {\n    update_landlord_management_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\n// const Deletelandloard_Master=gql`\n\n// mutation MyMutation($id: Int = 10) {\n//     delete_landlord_management_by_pk(id: $id) {\n//       account_no\n//       address\n//       agreement_from\n//       agreement_to\n//       bank_name\n//       branch_name\n//       height\n//       id\n//       ifsc\n//       location\n//       mobile_number\n//       name\n//       rent_amount\n//       rent_increment_reminder\n//       site_address\n\n//       width\n//     }\n//   }\n// `\n\n\n\n\n\n\nfunction Landloard_Management() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [landloard, setlandloard] = useState({\n        name: '',\n        address: '',\n        mobile_number: '',\n        location: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc: '',\n        account_no: '',\n        rent_amount: '',\n        width: '',\n        height: '',\n        site_address: '',\n        agreement_from: '',\n        agreement_to: '',\n        rent_increment_reminder: '',\n\n\n    });\n\n    const [modallandloard, setModallandloard] = useState({\n        id: '',\n        name: '',\n        address: '',\n        mobile_number: '',\n        location: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc: '',\n        account_no: '',\n        rent_amount: '',\n        width: '',\n        height: '',\n        site_address: '',\n        agreement_from: '',\n        agreement_to: '',\n        rent_increment_reminder: '',\n\n    });\n\n    const [Insert_landloardmanagementData] = useMutation(Insertlanloard_Master);\n    const [update_landloardmanagementData] = useMutation(Updatelandloard_Master);\n    const [delete_landloardmanagementData] = useMutation(Deletelandloard_Master);\n\n    const onModalInputChange = (e) => {\n        setModallandloard({ ...modallandloard, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_landloardmanagementData({ variables: modallandloard })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onInputChange = (e) => {\n        setlandloard({ ...landloard, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(landloard)\n        Insert_landloardmanagementData({ variables: landloard })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onDelete = (id) => {\n        delete_landloardmanagementData({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModallandloard({\n            id: row.id,\n            name: row.name,\n            address: row.address,\n            mobile_number: row.mobile_number,\n            site_address: row.site_address,\n            bank_name: row.bank_name,\n            branch_name: row.branch_name,\n            ifsc: row.ifsc,\n            account_no: row.account_no,\n            location: row.location,\n            width: row.width,\n            height: row.height,\n            rent_amount: row.rent_amount,\n            agreement_from: row.agreement_from,\n            agreement_to: row.agreement_to,\n            rent_increment_reminder: row.rent_increment_reminder\n\n\n        })\n        console.log(modallandloard);\n    }\n    const getlandloard_management = useSubscription(getlandloard_Master);\n    if (getlandloard_management.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getlandloard_management.error) {\n        return \"error\" + getlandloard_management.error;\n    }\n    console.log(getlandloard_management.data);\n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'name',\n            headerName: 'Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'address',\n            headerName: 'Address ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'mobile_number',\n            headerName: 'Mobile Number ',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'site_address',\n            headerName: 'Site Address',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'location',\n            headerName: 'Location ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'rent_amount',\n            headerName: 'Rent Amount ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'rent_increment_reminder',\n            headerName: 'Rent Increment Remainder ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'agreement_from',\n            headerName: 'Agreement From ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'agreement_to',\n            headerName: 'Agreement To ',\n            width: 200,\n            editable: false,\n        },\n\n\n        {\n            field: 'width',\n            headerName: 'Width ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'height',\n            headerName: 'Height ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'ifsc',\n            headerName: 'IFSC ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'account_no',\n            headerName: 'Account Number ',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\" onClick={() => { onEdit(params.row) }}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = getlandloard_management.data.landlord_management;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n\n    return (\n        <div>\n\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Landloard Master</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\" padding=\"2px\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-3\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modallandloard.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-3\">\n                                <label className=\"required\">landloard Name</label>\n                                <input placeholder=\"enter name\" defaultValue={modallandloard.name} onChange={onModalInputChange} type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                                <span ></span>\n                            </div>\n                            <div className=\"field col-md-3\">\n                                <label className=\"required\">landloard Address</label>\n                                <input placeholder=\"enter address\" defaultValue={modallandloard.address} onChange={onModalInputChange} type=\"text\" name=\"address\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                            <div className=\"field col-md-3\">\n                                <label className=\"required\">Mobile Number</label>\n                                <input placeholder=\"enter contact \" defaultValue={modallandloard.mobile_number} onChange={onModalInputChange} type=\"text\" name=\"mobile_number\" className=\"form-control mt-1\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row\">\n\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Width</label>\n                                <input placeholder=\"enter Width\" defaultValue={modallandloard.width} onChange={onModalInputChange} type=\"number\" name=\"width\" className=\"form-control mt-1\" title=\"Please enter valid email address\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Height</label>\n                                <input placeholder=\"enter height\" defaultValue={modallandloard.height} onChange={onModalInputChange} type=\"number\" name=\"height\" className=\"form-control mt-1\" title=\"Please enter valid email address\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row\">\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Location</label>\n                                <input placeholder=\"enter location\" defaultValue={modallandloard.location} onChange={onModalInputChange} type=\"text\" name=\"location\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rent Amount Yearly</label>\n                                <input placeholder=\"enter rent amount yearly \" defaultValue={modallandloard.rent_amount} onChange={onModalInputChange} type=\"number\" name=\"rent_amount\" className=\"form-control mt-1\" title=\"Please enter valid pan\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rent Increment Remainder</label>\n                                <input type=\"text\" name=\"rent_increment_reminder\" defaultValue={modallandloard.rent_increment_reminder} onChange={onModalInputChange} className=\"form-control mt-1\" title=\"Please enter valid pan\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row\">\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Agreement Tenure  From</label>\n                                <input type=\"date\" name=\"agreement_from\" defaultValue={modallandloard.agreement_from} onChange={onModalInputChange} className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Agreement Tenure  To</label>\n                                <input type=\"date\" name=\"agreement_to\" defaultValue={modallandloard.agreement_to} onChange={onModalInputChange} className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Site Address</label>\n                                <input type=\"text\" name=\"site_address\" defaultValue={modallandloard.site_address} onChange={onModalInputChange} className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                            </div>\n                        </div>\n                        <br />\n                        <h5 style={{ textAlign: 'center' }}>Bank Details</h5><br />\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Bank Name</label>\n                                <input placeholder=\"enter Bank Name\" defaultValue={modallandloard.bank_name} onChange={onModalInputChange} type=\"text\" name=\"bank_name\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Branch Name</label>\n                                <input placeholder=\"enter Branch Name\" defaultValue={modallandloard.branch_name} onChange={onModalInputChange} type=\"text\" name=\"branch_name\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n\n                            </div>\n\n                        </div><br />\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">IFSC</label>\n                                <input type=\"text\" name=\"ifsc\" defaultValue={modallandloard.ifsc} onChange={onModalInputChange} className=\"form-control\" placeholder=\"enter IFSC\" />\n\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Account Number</label>\n                                <input type=\"text\" name=\"account_no\" defaultValue={modallandloard.account_no} onChange={onModalInputChange} className=\"form-control\" placeholder=\"enter Account Number\" />\n                            </div>\n\n                        </div><br />\n                        <br />\n                        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n\n                            <br />\n                            <br />\n\n                        </div>\n                        <br />\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n\n                </Modal.Footer>\n            </Modal>\n\n\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <h4 className=\"text-center\">Landloard Management</h4><br />\n\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Landloard Name</label>\n                            <input placeholder=\"enter name\" onChange={onInputChange} type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            <span ></span>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Landloard Address</label>\n                            <input placeholder=\"enter address\" onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input placeholder=\"+91 \" onChange={onInputChange} type=\"tel\" name=\"mobile_number\" className=\"form-control mt-1\" required pattern=\"[789][0-9]{9}\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div><br />\n\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <input placeholder=\"enter location\" onChange={onInputChange} type=\"text\" name=\"location\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Amount Yearly</label>\n                            <input placeholder=\"enter rent amount yearly \" onChange={onInputChange} type=\"text\" name=\"rent_amount\" className=\"form-control mt-1\" title=\"Please enter valid pan\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Increment Reminder</label>\n                            <select name=\"rent_increment_reminder\" onChange={onInputChange} className=\"form-control mt-1\" required>\n                                <option value=\"\">Select...</option>\n                                <option key=\"1\" value=\"1\">1 month</option>\n                                <option key=\"2\" value=\"2\">2 month</option>\n                                <option key=\"3\" value=\"3\">3 month</option>\n                                <option key=\"4\" value=\"4\">4 month</option>\n                            </select>\n                            {/* <input   type=\"text\" name=\"rent_increment_reminder\" onChange={onInputChange}className=\"form-control mt-1\"  title=\"Please enter valid pan\" required /> */}\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  From</label>\n                            <input type=\"date\" name=\"agreement_from\" onChange={onInputChange} className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  To</label>\n                            <input type=\"date\" name=\"agreement_to\" onChange={onInputChange} className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Site Address</label>\n                            <input type=\"text\" name=\"site_address\" onChange={onInputChange} className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Width</label>\n                            <input placeholder=\"enter Width\" onChange={onInputChange} type=\"number\" name=\"width\" className=\"form-control mt-1\" title=\"Please enter valid email address\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Height</label>\n                            <input placeholder=\"enter height\" onChange={onInputChange} type=\"number\" name=\"height\" className=\"form-control mt-1\" title=\"Please enter valid email address\" required />\n                        </div>\n                    </div>\n                    <br />\n                    <h5 style={{ textAlign: 'center' }}>Bank Details</h5><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Bank Name</label>\n                            <input placeholder=\"enter bank Name\" onChange={onInputChange} type=\"text\" name=\"bank_name\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Branch Name</label>\n                            <input placeholder=\"enter branch Name\" onChange={onInputChange} type=\"text\" name=\"branch_name\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n\n                        </div>\n\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">IFSC</label>\n                            <input type=\"text\" name=\"ifsc\" onChange={onInputChange} className=\"form-control\" maxlength=\"11\" minlength=\"11\" placeholder=\"enter IFSC\" />\n\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Account Number</label>\n                            <input type=\"number\" name=\"account_no\" onChange={onInputChange} className=\"form-control\" placeholder=\"enter account number\" />\n                        </div>\n\n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    );\n}\n\nexport default Landloard_Management;\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n  }  \n`\n\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n`\nconst READ_MEDIA = gql`\nquery MyQuery {\n    media_type_master {\n      id\n      media_type\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n    \n`\nconst READ_SIZE = gql`\nquery MyQuery {\n    size_master {\n      id\n      height\n      width\n      no_of_display\n    }\n  }  \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($country: Int!,$state:Int!,$city:Int!,$illumination:String!,$media_type:Int!,$_gt: date = \"\") {\n    Inventory_Master(where: {Country: {_eq: $country}, State:{_eq:$state},City_Village:{_eq:$city},Illumination:{_eq:$illumination},Media_Type:{_eq:$media_type},AvailabilityTo: {_lt: $_gt}}) {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        id\n        country {\n            id\n            name\n          }\n          city {\n            id\n            name\n          }\n          state {\n            id\n            name\n          }\n          media_type_master {\n            id\n            media_type\n          }\n      }\n  }\n  \n`\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($id: Int!) {\n  delete_inquiry_master_by_pk(id: $id) {\n    id\n  }\n}\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription {\n    inquiry_master {\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      end_date\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      work_order\n      task_sheet\n      downtime\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\n\nexport default function Inquiry_Master() {\n    //States\n    const [showhide, setShowhide] = useState('hidden');\n    const [country, setCountry] = useState();\n    const [state, setState] = useState();\n    const [city, setCity] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    // const [district, setDistrict] = useState();\n    // const [taluka, setTaluka] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n\n\n    const read_media = useQuery(READ_MEDIA);\n    const read_countries = useQuery(READ_COUNTRIES);\n    const read_states = useQuery(READ_STATES);\n    const read_cities = useQuery(READ_CITIES);\n    //const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n\n    //Loader\n    if (read_inquiry.loading  || read_countries.loading || read_states.loading || read_cities.loading || loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onCountryChange = (country_data) => {\n        setCountry(country_data.id)\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n    }\n    const onCityChange = (city_data) => {\n        setCity(city_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        console.log(e.target.value)\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        console.log(e.target.value);\n        setSearchDate(e.target.value);\n    }\n    // const onDistrictChange = (district_data) => {\n    //     setDistrict(district_data.District);\n    // }\n    // const onTalukaChange = (taluka_data) => {\n    //     setTaluka(taluka_data.Taluka);\n    // }\n    const onLocationChange = (e) => {\n        //console.log(e.target[1].value);\n\n        //console.log(e.target.value);\n        var inv = data.Inventory_Master[0]\n        const filteredInventory = data.Inventory_Master.filter((location) => location.Location.includes(e.target.value))\n        setInventoryData(filteredInventory[0]);\n        //console.log(filteredInventory[0].id)\n        setLocation(filteredInventory[0].id);\n        //setShowhide(\"visible\");\n    }\n    const onSearch = (e) => {\n        e.preventDefault();\n        //console.log(district);\n        // loadInventory({variables:{country:country,state:state,city:city,district:district,taluka:taluka,location:location,size:size,illumination:illumination,media:media}})\n        loadInventory({ variables: { country: country, state: state, city: city, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        //console.log(data);\n        setShowhide(\"visible\");\n    }\n    const columns = [\n        {\n            field: 'Country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.country.name;\n            }\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.state.name;\n            }\n        },\n        {\n            field: 'City_Village',\n            headerName: 'City_Village',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n        { \n            field: 'District', \n            headerName: 'District', \n            width: 200 \n        },\n        { \n            field: 'Taluka', \n            headerName: 'Taluka', \n            width: 200 \n        },\n        { \n            field: 'Location', \n            headerName: 'Location', \n            width: 200 \n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        { \n            field: 'Illumination', \n            headerName: 'Illumination', \n            width: 200 \n        },\n        { \n            field: 'Width', \n            headerName: 'Width', \n            width: 200 \n        },\n        { \n            field: 'Height', \n            headerName: 'Height', \n            width: 200 \n        },\n        { \n            field: 'NoofDisplay', \n            headerName: 'No Of Display', \n            width: 200 \n        },\n        { \n            field: 'Totalsqft', \n            headerName: 'Total Sq ft', \n            width: 200 \n        },\n        { \n            field: 'DrpmRate', \n            headerName: 'DrpmRate', \n            width: 200 \n        },\n        { \n            field: 'DisplayRatePM', \n            headerName: 'DisplayRatePM', \n            width: 200 \n        },\n        { \n            field: 'OtpcRate', \n            headerName: 'OtpcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimePrintingCost', \n            headerName: 'OneTimePrintingCost', \n            width: 200 \n        },\n        { \n            field: 'OtmcRate', \n            headerName: 'OtmcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimeMountingCost', \n            headerName: 'OneTimeMountingCost', \n            width: 200 \n        },\n        { \n            field: 'Total', \n            headerName: 'Total', \n            width: 200 \n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'AvailabilityFrom',\n            width: 200\n        },\n        { \n            field: 'AvailabilityTo', \n            headerName: 'AvailabilityTo', \n            width: 200 \n        },\n    ]\n    //console.log(data);\n    const emptyarr = [\n        {\n            id:45,\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            City_Village: \"\",\n            Country: \"\",\n            DisplayRatePM: \"\",\n            District: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            State: \"\",\n            Taluka: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            city:{\n                id: \"\",\n                name: \"\"\n            },\n            country:{\n                id: \"\",\n                name: \"\"\n            },\n            media_type_master:{\n                id: \"\",\n                media_type: \"\"\n            },\n            state:{\n                id: \"\",\n                name: \"\"\n            }\n        }\n    ]\n    var rows = emptyarr;\n    if(data)\n    {\n       rows=data.Inventory_Master;\n    }\n    console.log(rows);\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n                    <h4 className=\"text-center\">Quick Media Proposal</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"country\" className=\"form-control mt-1\" placeholder=\"enter country\" required>\n                        <option>--SELECT--</option>\n                        {read_countries.data.countries.map(country => (\n                            <option key={country.id} value={country.id}>{country.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"state\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                        <option>--SELECT--</option>\n                        {read_states.data.states.map(state => (\n                            <option key={state.id} value={state.id}>{state.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"cities\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                        <option>--SELECT--</option>\n                        {read_cities.data.cities.map(city => (\n                            <option key={city.id} value={city.id}>{city.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '10%' }}>Search</button>\n                    </div><br />\n                    <div className=\"row\">\n\n                        {/* <div className=\"field col-md-4\" style={{ marginLeft: '30%' }}>\n                            <label className=\"required\" style={{ visibility: 'visible' }}>Location</label>\n                            <select className=\"form-control\" onChange={onLocationChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.Location}>{inventory.Location}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                    </div><br /> <br />\n                </form >\n                {/* <div style={{ height: 500, width: '100%', visibility: showhide }}  >\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Country</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.country.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>State</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.state.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>City</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.city.name} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>District</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.District} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Taluka</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Taluka} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Location</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Location} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Media</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.media_type_master.media_type} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Illumination} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Width</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Width} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Height</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Height} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>No Of Display</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.NoofDisplay} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Total sq ft</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Totalsqft} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DrpmRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Display Rate PM</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DisplayRatePM} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtpcRate} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>One Time Printing Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimePrintingCost} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtmcRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>One Time Mounting Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimeMountingCost} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Total</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Total} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability From</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityFrom} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability To</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityTo} readOnly />\n                        </div>\n                    </div>\n                    <CSVLink data={data === undefined ? '' : data.Inventory_Master}>Download</CSVLink>\n                </div> */}\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription,\n  useLazyQuery\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\nimport Select from 'react-select'\n\n\n\nconst getPurchase_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    purchase_order(where: {isDeleted: {_eq: $_eq}}){\n      billing_name\n      billing_address\n      booking_number\n      purchase_order_date\n      campaign_name\n      quotation_number\n      gst_details\n      company_pan\n      payment_terms\n      id\n    }\n  }\n  \n`\nconst InsertPurchase_Master = gql`\nmutation MyMutation($billing_address: String = \"\", $billing_name: String = \"\", $booking_number: Int!, $campaign_name: String = \"\", $company_pan: String = \"\", $gst_details: String = \"\", $payment_terms: String = \"\", $purchase_order_date: String = \"\", $quotation_number: String = \"\") {\n  insert_purchase_order_one(object: {billing_address: $billing_address, billing_name: $billing_name, booking_number: $booking_number, campaign_name: $campaign_name, company_pan: $company_pan, gst_details: $gst_details, payment_terms: $payment_terms, purchase_order_date: $purchase_order_date, quotation_number: $quotation_number}) {\n    id\n  }\n}\n`\n\n\nconst UpdatePurchase_Master = gql`\nmutation MyMutation($id: Int = 0, $billing_address: String = \"\", $billing_name: String = \"\", $campaign_name: String = \"\", $company_pan: String = \"\", $gst_details: String = \"\", $payment_terms: String = \"\", $purchase_order_date: String = \"\", $booking_number: Int = \"\", $quotation_number: String = \"\") {\n  update_purchase_order_by_pk(pk_columns: {id: $id}, _set: {billing_address: $billing_address, billing_name: $billing_name, campaign_name: $campaign_name, company_pan: $company_pan, gst_details: $gst_details, payment_terms: $payment_terms, purchase_order_date: $purchase_order_date, booking_number: $booking_number, quotation_number: $quotation_number}) {\n    billing_address\n    billing_name\n    campaign_name\n    company_pan\n    gst_details\n    id\n    payment_terms\n    purchase_order_date\n    booking_number\n    quotation_number\n  }\n}\n\n  \n`\n\n// const DeletePurchase_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_purchase_order_by_pk(id: $id) {\n//       billing_name\n//       billing_address\n//       booking_number\n//       purchase_order_date\n//       campaign_name\n//       quotation_number\n//       gst_details\n//       company_pan\n//       payment_terms\n//       id\n//     }\n//   }\n// `\n\nconst DeletePurchase_Master = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n  update_purchase_order_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n    id\n  }\n}\n`\n\nconst SEARCH_BOOKING = gql`\nquery MyQuery{\n  Booking_Calender{\n    BookedBy\n    Confirmation\n    id\n    isDeleted\n    Start_Date_Photo\n    Start_Date\n    Sites\n    Shortlisted\n    Printer\n    PO\n    Mounter\n    Monitoring_Photo\n    End_Date_Photo\n    End_Date\n    Electrician\n    Designer\n    quick_medium {\n      mobile_no\n    }\n  }\n}\n`\nconst GET_BOOKING_DATA=gql`\nquery MyQuery($mobile_no:String!){\n  Booking_Calender(where: {quick_medium: {mobile_no: {_eq: $mobile_no}}}){\n    BookedBy\n    Confirmation\n    id\n    isDeleted\n    Start_Date_Photo\n    Start_Date\n    Sites\n    Shortlisted\n    Printer\n    PO\n    Mounter\n    Monitoring_Photo\n    End_Date_Photo\n    End_Date\n    Electrician\n    Designer\n    quick_medium {\n      mobile_no\n    }\n  }\n}\n`\n\nfunction Purchase_Order_Management() {\n  var filteredBooking = \"\";\n  var booking_dat=[];\n  const [get_data,setGet_data] = useState();\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [searchField,setSearchField]=useState();\n  const [purchase, setpurchase] = useState({\n    id: '',\n    billing_name: '',\n    billing_address: '',\n    booking_number: 0,\n    purchase_order_date: '',\n    campaign_name: '',\n    quotation_number: '',\n    gst_details: '',\n    company_pan: '',\n    payment_terms: '',\n  })\n \n\n  const [modalpurchase, setModalpurchase] = useState({\n    id: '',\n    billing_name: '',\n    billing_address: '',\n    booking_number: 261,\n    purchase_order_date: '',\n    campaign_name: '',\n    quotation_number: '',\n    gst_details: '',\n    company_pan: '',\n    payment_terms: '',\n  });\n\n\n  const [insertpurchasedata] = useMutation(InsertPurchase_Master);\n  const [updatepurchasedata] = useMutation(UpdatePurchase_Master);\n  const [deletepurchasedata] = useMutation(DeletePurchase_Master);\n  const [getBookingData,{loading,error,data}] = useLazyQuery(GET_BOOKING_DATA, {\n    onCompleted: data => {\n        // console.log('data ', data);\n        setGet_data(data);\n    }\n});\n  const getpurchase_order = useSubscription(getPurchase_Master);\n  const searchbookingdata = useQuery(SEARCH_BOOKING);\n  if (searchbookingdata.loading||getpurchase_order.loading||loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n  }\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(purchase)\n    insertpurchasedata({ variables: purchase })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalpurchase({\n      id: row.id,\n      billing_name: row.billing_name,\n      billing_address: row.billing_address,\n      booking_number: row.booking_number,\n      purchase_order_date: row.purchase_order_date,\n      campaign_name: row.campaign_name,\n      quotation_number: row.quotation_number,\n      gst_details: row.gst_details,\n      company_pan: row.company_pan,\n      payment_terms: row.payment_terms,\n    })\n  }\n  const onModalInputChange = (e) => {\n    setModalpurchase({ ...modalpurchase, [e.target.name]: e.target.value });\n  }\n\n  const onInputChange = (e) => {\n    console.log(typeof e.target.value);\n    setpurchase({ ...purchase, [e.target.name]: e.target.value })\n    \n  }\n  \n  \n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modalpurchase);\n    updatepurchasedata({ variables: { id: modalpurchase.id, billing_name: modalpurchase.billing_name, billing_address: modalpurchase.billing_address, booking_number: modalpurchase.booking_number, purchase_order_date: modalpurchase.purchase_order_date, campaign_name: modalpurchase.campaign_name, quotation_number: modalpurchase.quotation_number, gst_details: modalpurchase.gst_details, company_pan: modalpurchase.company_pan, payment_terms: modalpurchase.payment_terms } })\n    toast.configure();\n    toast.warning('Successfully Updated')\n    handleClose();\n  }\n\n  const onDelete = (id) => {\n    console.log(id);\n    deletepurchasedata({ variables: { id: id } });\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n  const onSearchFieldChange=(e)=>{\n    setSearchField(e.target.value);\n  }\n  const onsearch = (e) => {\n    e.preventDefault();\n    getBookingData({variables:{mobile_no:searchField}})\n   \n    //search_booking({ variables: { mobile_no: e.target[0].value } })\n  }\n\n\n  const columns = [\n    {\n      field: 'sno',\n      headerName: 'Serial No',\n      width: 150,\n    },\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'billing_name', headerName: 'Billing Name', width: 200 },\n\n    { field: 'billing_address', headerName: 'Billing Address', width: 200, },\n\n    { field: 'booking_number', headerName: 'Booking number', width: 230, },\n\n    { field: 'purchase_order_date', headerName: 'Purchase Order Date', width: 230, },\n\n\n    { field: 'campaign_name', headerName: 'Campaign', width: 210, },\n    { field: 'quotation_number', headerName: 'Quotation Number', width: 210, },\n    { field: 'gst_details', headerName: 'GST Details', width: 190, },\n    { field: 'company_pan', headerName: 'company Pan', width: 190, },\n    { field: 'payment_terms', headerName: 'Payment Terms', width: 190, },\n    // { field: 'gst no', headerName: 'gst no', width: 170, },\n    // { field: 'pan', headerName: 'pan', width: 170, },\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" onClick={() => {\n              const confirmBox = window.confirm(\n                \"Do you really want to delete?\"\n              )\n              if (confirmBox === true) {\n                onDelete(params.row.id)\n              }\n            }} ><i className=\"bi bi-trash-fill\"></i></button>\n\n          </div>\n        );\n      }\n    },\n\n\n  ];\n\n\n\n  \n  if (getpurchase_order.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n  }\n  //console.log(getpurchase_order.data);\n//console.log(get_data)\n  const rows = getpurchase_order.data.purchase_order;\n  let newData = []\n  rows.map((item, index) => {\n    newData.push({ sno: index + 1, ...item })\n  })\n\n\n\n  return (\n\n    <div>\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title style={{ marginLeft: \"130px\" }}>Edit Purchase Order</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">ID</label>\n                <input defaultValue={modalpurchase.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Billing Name</label>\n                <input defaultValue={modalpurchase.billing_name} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"billing_name\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Billing address</label>\n                <input defaultValue={modalpurchase.billing_address} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"billing_address\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Booking Number</label>\n                <input value={modalpurchase.booking_number} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"booking_number\" type=\"text\" required readonly/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Purchase_order_date</label>\n                <input defaultValue={modalpurchase.purchase_order_date} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"purchse_order_date\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Campaign Name</label>\n                <input defaultValue={modalpurchase.campaign_name} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"campaign_name\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Quotation Number</label>\n                <input defaultValue={modalpurchase.quotation_number} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"quotation_number\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">GST Details</label>\n                <input defaultValue={modalpurchase.gst_details} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"gst_details\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Company Pan</label>\n                <input defaultValue={modalpurchase.company_pan} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"company_pan\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Payment Terms</label>\n                <input defaultValue={modalpurchase.payment_terms} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"payment_terms\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"field col-md-6\">\n              <button className=\"btn btn-primary mt-3\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n            </div>\n          </form>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br />\n        <h4 className=\"text-center\">Purchase Order</h4>\n        <form onSubmit={onsearch}>\n          <div className=\"row\">\n            <div className=\"field col-md-4\"></div>\n            <div className=\"field col-md-4\">\n              <label>Search By Customer Mobile</label>\n              <input onChange={onSearchFieldChange} className=\"form-control\" type=\"text\" name=\"customer_search\" /><br />\n              <button className=\"btn btn-primary\" type=\"submit\" style={{ marginRight: '10px', width: '30%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Search</button>\n            </div>\n            <div className=\"field col-md-4\"></div>\n          </div><br />\n        </form>\n        <form onSubmit={onFormSubmit} className=\"form-group\">\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Billing Name</label>\n              <input placeholder=\"enter billing name\" className=\"form-control mt-1\" onChange={onInputChange} name=\"billing_name\" type=\"text\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Billing Adress</label>\n              <input placeholder=\"enter biiling_address\" className=\"form-control mt-1\" onChange={onInputChange} name=\"billing_address\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Booking Number</label>\n              {/* <input placeholder=\"enter booking number\" className=\"form-control mt-1\" onChange={onInputChange} name=\"booking_number\" type=\"text\" required /> */}\n              <select className=\"form-control\" onChange={onInputChange} name=\"booking_number\" required>\n                <option>Select...</option>\n                {\n                  get_data===undefined?\"\":get_data.Booking_Calender.map((booking)=>(\n                    <option key={booking.id} value={parseInt(booking.id)}>{booking.id}</option>\n                  ))\n                }\n              </select>\n            </div><br />\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Purchase order date</label>\n              <input placeholder=\"enter date\" className=\"form-control mt-1\" onChange={onInputChange} name=\"purchase_order_date\" type=\"date\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Campaign Name</label>\n              <input placeholder=\"enter campaign name\" className=\"form-control mt-1\" onChange={onInputChange} name=\"campaign_name\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Quotation Number</label>\n              <input placeholder=\"enter quotation Number\" className=\"form-control mt-1\" onChange={onInputChange} name=\"quotation_number\" type=\"text\" required />\n            </div>\n          </div><br />\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">GST Details</label>\n              <input placeholder=\"enter gst details\" className=\"form-control mt-1\" onChange={onInputChange} name=\"gst_details\" type=\"text\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Company Pan</label>\n              <input placeholder=\"enter Pan\" className=\"form-control mt-1\" onChange={onInputChange} name=\"company_pan\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Payment Terms</label>\n              <input placeholder=\"enter payment terms\" className=\"form-control mt-1\" onChange={onInputChange} name=\"payment_terms\" type=\"text\" required />\n            </div>\n          </div>\n          <br />\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n            <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n            {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n          </div>\n          <br />\n        </form>\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={newData}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n    </div>\n  );\n\n}\n\nexport default Purchase_Order_Management;","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription\n} from \"@apollo/client\";\n\nconst getFlex_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  flex_vinyl_management(where: {isDeleted: {_eq: $_eq}}){\n    designer_selection\n    designer_payment\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n\nconst InsertFlex_Master = gql`\nmutation MyMutation($designer_selection: String = \"\", $designer_payment: String = \"\", $media: String = \"\", $mounter_payment: String = \"\", $mounter_selection: String = \"\", $printer_payment: String = \"\", $printer_selection: Int = 10) {\n  insert_flex_vinyl_management_one(object: {designer_selection: $designer_selection, designer_payment: $designer_payment, media: $media, mounter_payment: $mounter_payment, mounter_selection: $mounter_selection, printer_payment: $printer_payment, printer_selection: $printer_selection}) {\n    designer_selection\n    designer_payment\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n  \n// const deleteFlex_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//   delete_flex_vinyl_management_by_pk(id: $id) {\n//     designer_selection\n//     designer_payment\n//     id\n//     media\n//     mounter_payment\n//     mounter_selection\n//     printer_payment\n//     printer_selection\n//   }\n// }`\n\nconst deleteFlex_Master=gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n  update_flex_vinyl_management_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n    id\n  }\n}\n\n`\n\nconst updateFlex_Master = gql`\nmutation MyMutation($designer_payment: String = \"\", $designer_selection: String = \"\", $media: String = \"\", $mounter_payment: String = \"\", $mounter_selection: String = \"\", $printer_payment: String = \"\", $printer_selection: Int = 10) {\n  update_flex_vinyl_management_by_pk(pk_columns: {id: 10}, _set: {designer_payment: $designer_payment, designer_selection: $designer_selection, media: $media, mounter_payment: $mounter_payment, mounter_selection: $mounter_selection, printer_payment: $printer_payment, printer_selection: $printer_selection}) {\n    designer_payment\n    designer_selection\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n\n\n\n\nexport default function Flex_and_Vinyl_Management() {\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [showhide, setShowhide] = useState('hidden');\n  const [Media, setMedia] = useState();\n\n  const [modalId, setModalId] = useState();\n  const [modalMedia, setModalMedia] = useState();\n  const [flex, setflex] = useState({\n\n    media: '',\n    designer_selection: '',\n    designer_payment: '',\n    printer_selection: '',\n    printer_payment: '',\n    mounter_selection: '',\n    mounter_payment: '',\n\n\n\n\n  });\n  const [Modalflex, setModalflex] = useState({\n    id: '',\n    media: '',\n    designer_selection: '',\n    designer_payment: '',\n    printer_selection: '',\n    printer_payment: '',\n    mounter_selection: '',\n    mounter_payment: '',\n    \n  })\n\n\n\n\n\n\n\n  const [Insert_flexinsertData] = useMutation(InsertFlex_Master);\n  const [delete_flexdeleteData] = useMutation(deleteFlex_Master);\n  const [update_flexupdateData] = useMutation(updateFlex_Master);\n\n  const onMediaChange = (e) => {\n    if (e.target.value === 'Yes') {\n        setShowhide('visible');\n    }\n    else {\n        setShowhide('hidden');\n    }\n    setMedia(e.target.value);\n    console.log(e.target.value);\n}\n\n  const onInputChange = (e) => {\n    setflex({ ...flex, [e.target.name]: e.target.value })\n  }\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(e.target)\n    Insert_flexinsertData({ variables: flex })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalflex({\n      id: row.id,\n      media: row.media,\n      designer_selection: row.designer_selection,\n      designer_payment: row.designer_payment,\n      printer_selection: row.printer_selection,\n      printer_payment: row.printer_payment,\n      mounter_selection: row.mounter_selection,\n      mounter_payment: row.mounter_payment,\n\n    })\n    console.log(Modalflex);\n  }\n\n  const onModalInputChange = (e) => {\n    setModalflex({ ...Modalflex, [e.target.name]: e.target.value })\n  }\n  const onModalMediaChange = (e) => {\n    if (e.target.value === 'Yes') {\n        setShowhide('visible');\n    }\n    else {\n        setShowhide('hidden');\n    }\n    setModalMedia(e.target.value);\n    console.log(e.target.value);\n}\n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    update_flexupdateData({ variables: Modalflex })\n    handleClose();\n    toast.configure();\n    toast.warning('Successfully Updated')\n  }\n\n\n\n  const onDelete = (id) => {\n    delete_flexdeleteData({ variables: { id: id } })\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n\n\n\n  const getflex_vinyl_management = useSubscription(getFlex_Master);\n  if (getflex_vinyl_management.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    console.log(getflex_vinyl_management.data);\n\n  }\n\n  const columns = [\n    {\n      field: 'sno',\n      headerName: 'Serial No',\n      width: 150,\n  },\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'media', headerName: 'Media', width: 200 },\n    { field: 'designer_selection', headerName: 'Designer_Selection', width: 200 },\n    { field: 'designer_payment', headerName: 'Designer_Payment', width: 200 },\n    { field: 'printer_selection', headerName: 'printer_Selection', width: 200 },\n    { field: 'printer_payment', headerName: 'Printer_Payment', width: 230 },\n    { field: 'mounter_selection', headerName: 'Mounter_Selection', width: 230 },\n    { field: 'mounter_payment', headerName: 'Mounter_Payment', width: 230 },\n\n\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { onEdit(params.row) }} style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button onClick={() => {\n              const confirmBox = window.confirm(\n                \"Do you really want to delete?\"\n              )\n              if (confirmBox === true) {\n                onDelete(params.row.id)\n              }\n            }} style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" ><i className=\"bi bi-trash-fill\"></i></button>\n\n\n\n\n          </div>\n        );\n      }\n    },\n  ];\n\n  const rows = getflex_vinyl_management.data.flex_vinyl_management;\n  let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n  //  const rows = [\n  //     // const rows = [\n  //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  // //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  // //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  // //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  // //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  // //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  // //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  // //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n\n  // //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  // //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  //  ];\n  return (\n    <div>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>Edit Flex And Vinyl Management</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <form onSubmit={onModalFormSubmit} className=\"form-group\" padding=\"1px\">\n\n            <div className=\"row mt-3\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Media</label>\n                <input placeholder=\"enter media\" defaultValue={Modalflex.media} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"media\" type=\"text\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Designer_Selection </label>\n                <input placeholder=\"enter designer selection \" defaultValue={Modalflex.designer_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"designer_selection\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Designer_Payment</label>\n                <input placeholder=\"enter designer payment\" defaultValue={Modalflex.designer_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"designer_payment\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row mt-4\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Printer_Selection</label>\n                <input placeholder=\"enter printer selection\" defaultValue={Modalflex.printer_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"printer_selection\" type=\"number\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">printer_Payment</label>\n                <input placeholder=\"enter printer payment\" defaultValue={Modalflex.printer_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"printer_payment\" type=\"text\" required />\n              </div>\n\n\n            </div>\n            <div className=\"row mt-4\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Mounter_Selection</label>\n                <input placeholder=\"enter mounter selection\" defaultValue={Modalflex.mounter_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"mounter_selection\" type=\"text\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Mounter_Payment</label>\n                <input placeholder=\"enter mounter payment\" defaultValue={Modalflex.mounter_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"mounter_payment\" type=\"text\" required />\n              </div>\n\n\n            </div>\n\n            <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n              <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n              {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n            </div>\n            <br />\n          </form>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br />\n        <h4 className=\"text-center\">Flex Vinyl Management</h4>\n\n        <br />\n        <form onSubmit={onFormSubmit}>\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Media</label>\n              <select className=\"form-control mt-2\" onChange={onMediaChange} >\n                                    <option>Select...</option>\n                                    <option>Flex</option>\n                                    <option>Vinyl</option>\n                                </select>\n              \n            </div>\n\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Designer Selection</label>\n              <input placeholder=\"enter designer selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"designer_selection\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Designer Payment</label>\n              <input placeholder=\"enter designer payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"designer_payment\" type=\"text\" required />\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Printer Selection</label>\n              <input placeholder=\"enter printer selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"printer_selection\" type=\"number\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Printer Payment</label>\n              <input placeholder=\"enter printer payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"printer_payment\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Mounter Selection</label>\n              <input placeholder=\"enter mounter selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"mounter_selection\" type=\"text\" required />\n            </div>\n          </div>\n          \n            \n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Mounter Payment</label>\n              <input placeholder=\"enter mounter payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"mounter_payment\" type=\"text\" required />\n            </div>\n          </div>\n\n          <br />\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n          <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n\n          </div>\n          <br />\n        </form>\n\n        {/* <div style={{ height: 500, width: '100%' }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={10}\n          rowsPerPageOptions={[10]}\n          checkboxSelection={false}\n          // components={{\n          //   Toolbar: GridToolbar,\n          // }}\n          style={{borderTop: '4px solid #05386b'}}\n          disableSelectionOnClick\n        />\n      </div> */}\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={newData}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n\n    </div>\n\n\n\n\n  )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_MONITORING = gql`\nquery MyQuery {\n    monitoring_images {\n      id\n      upload_image\n      status\n      geo_location\n      date\n      clients_name\n      brand_name\n    }\n  }\n`\nconst READ_MONITORING = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    monitoring_images(where: {isDeleted: {_eq: $_eq}}) {\n      id\n      upload_image\n      status\n      geo_location\n      date\n      clients_name\n      brand_name\n    }\n  }  \n`\nconst INSERT_MONITORING = gql`\nmutation MyMutation($brand_name: String = \"\", $clients_name: String = \"\", $date: String = \"\", $geo_location: String = \"\", $status: String = \"\", $upload_image: String = \"\") {\n    insert_monitoring_images_one(object: {brand_name: $brand_name, clients_name: $clients_name, date: $date, geo_location: $geo_location, status: $status, upload_image: $upload_image}) {\n      id\n    }\n  }\n`\nconst UPDATE_MONITORING = gql`\nmutation MyMutation($id: Int = 1, $brand_name: String = \"\", $clients_name: String = \"\", $date: String = \"\", $geo_location: String = \"\", $status: String = \"\", $upload_image: String = \"\", $id1: Int = 10) {\n    update_monitoring_images_by_pk(pk_columns: {id: $id}, _set: {brand_name: $brand_name, clients_name: $clients_name, date: $date, geo_location: $geo_location, status: $status, upload_image: $upload_image}) {\n      brand_name\n      clients_name\n      date\n      geo_location\n      id\n      status\n      upload_image\n    }\n  }  \n`\n// const DELETE_MONITORING = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_monitoring_images_by_pk(id: $id) {\n//       id\n//     }\n//   }  \n// `\n\nconst DELETE_MONITORING = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_monitoring_images_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\nexport default function MonitoringImages() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [monitoring, setMONITORING] = useState({\n        brand_name: '',\n        clients_name: '',\n        date: '',\n        geo_location: '',\n        status: '',\n        upload_image: '',\n    });\n\n    const [modalMONITORING, setModalMONITORING] = useState({\n        id: '',\n        brand_name: '',\n        clients_name: '',\n        date: '',\n        geo_location: '',\n        status: '',\n        upload_image: '',\n    });\n    const [insert_monitoring, insert_data] = useMutation(INSERT_MONITORING);\n    const [update_monitoring, update_data] = useMutation(UPDATE_MONITORING);\n    const [delete_monitoring, delete_data] = useMutation(DELETE_MONITORING);\n    const monitoring_data = useSubscription(READ_MONITORING);\n    if (monitoring_data.loading || monitoring_data.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setMONITORING({ ...monitoring, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        insert_monitoring({ variables: monitoring })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalMONITORING({\n            id: row.id,\n            brand_name: row.brand_name,\n            clients_name: row.clients_name,\n            date: row.date,\n            geo_location: row.geo_location,\n            status: row.status,\n            upload_image: row.upload_image\n        })\n        console.log(modalMONITORING);\n    }\n    const onModalInputChange = (e) => {\n        setModalMONITORING({ ...modalMONITORING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_monitoring({ variables: modalMONITORING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_monitoring({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'upload_image',\n            headerName: 'Upload Image',\n            width: 190\n        },\n        {\n            field: 'status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'geo_location',\n            headerName: 'Location',\n            width: 250\n        },\n        {\n            field: 'clients_name',\n            headerName: 'Client Name',\n            width: 160\n        },\n        {\n            field: 'brand_name',\n            headerName: 'Brand Name',\n            width: 180\n        },\n        {\n            field: 'date',\n            headerName: 'Date',\n            width: 110\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = monitoring_data.data.monitoring_images;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Data</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalMONITORING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Upload Images</label>\n                                <input defaultValue={modalMONITORING.upload_image} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"upload_image\" type=\"text\" placeholder=\"enter address\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Status</label>\n                                <input defaultValue={modalMONITORING.status} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"status\" type=\"text\" placeholder=\"enter status\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Location</label>\n                                <input defaultValue={modalMONITORING.geo_location} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"geo_location\" type=\"text\" placeholder=\"enter location\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Client Name</label>\n                                <input defaultValue={modalMONITORING.clients_name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"clients_name\" type=\"text\" placeholder=\"enter clients name\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Display Brand Name</label>\n                                <input defaultValue={modalMONITORING.brand_name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"brand_name\" type=\"text\" placeholder=\"enter brand name\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Date</label>\n                                <input defaultValue={modalMONITORING.date} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"date\" type=\"date\" placeholder=\"enter brand name\" />\n                            </div>\n\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\"style={{ marginRight: '50px', width:'22%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        </div>\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">MONITORING IMAGES</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Upload Image</label>\n                            <input type=\"text\" name=\"upload_image\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"upload your image\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Status</label>\n                            <input type=\"text\" name=\"status\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter status\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Location</label>\n                            <input type=\"text\" name=\"geo_location\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter location\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Client Name</label>\n                            <input type=\"text\" name=\"clients_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter client's name\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Display Brand Name</label>\n                            <input type=\"text\" name=\"brand_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter brand name\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Date</label>\n                            <input type=\"date\" name=\"date\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter date\" required />\n                        </div>\n                    </div><br />\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","class Auth{\n\n    login(cb){\n        cb();\n        localStorage.setItem(\"authenticated\",\"true\")\n    }\n    logout(cb){\n        cb();\n        localStorage.clear();\n    }\n    isAuthenticated(){\n        return localStorage.getItem(\"authenticated\");\n    }\n}\n\nexport default new Auth();","import React,{useState} from 'react';\nimport { useHistory } from 'react-router';\nimport auth from '../auth';\nimport {\n    useQuery,\n    gql,\n    useMutation\n  } from \"@apollo/client\";\n//import Header from '../components/Header';\n\nconst LOGIN_MUTATION = gql`\nquery MyQuery {\n    User {\n      username\n      password\n      role\n    }\n  }\n`;\n\nconst Login=() =>\n{\n    const history = useHistory();\n    const [formState, setFormState] = useState({\n        username:'',\n        password: '',\n        role:''\n    });\n    const {loading,error,data} = useQuery(LOGIN_MUTATION);\n    //console.log(data.User);\n    const FormSubmit=(e)=>\n    {\n        e.preventDefault();\n        //console.log(formState);\n        Array.isArray(data.User) && data.User.map((user)=>{\n            if(formState.username === user.username && formState.password === user.password)\n            {\n                //console.log(\"-----------------\"+localStorage.getItem(\"authenticated\"));\n                auth.login(()=>{\n                    localStorage.setItem(\"userrole\",user.role)\n                    localStorage.setItem(\"userdata\",formState.username);\n                    history.push(\"/\")\n                })\n                //console.log(\"-----------------\"+localStorage.getItem(\"authenticated\"));\n            }\n            else\n            {\n                console.log(\"Fail\");\n            }\n        })\n    }\n    \n    \n    const onInputChange=(e)=>{\n        setFormState({...formState,[e.target.name]:e.target.value})\n    }\n    //const authToken = localStorage.getItem(AUTH_TOKEN);\n    \n    //console.log(data)\n    return (\n        // <div className=\"container\">\n        //     <div>\n        //         <form onSubmit={(e)=>{FormSubmit(e)}}>\n        //         <div class=\"form-group\">\n        //             <label>Username</label>\n        //             <input type=\"text\" defaultValue={formState.username} onChange={(e)=>{onInputChange(e)}} name=\"username\" className=\"form-control\" placeholder=\"Enter Username\" />\n        //         </div>\n        //         <div class=\"form-group\">\n        //             <label>Password</label>\n        //             <input type=\"text\" defaultValue={formState.password} onChange={(e)=>{onInputChange(e)}} name=\"password\" className=\"form-control\" placeholder=\"Enter Password\" />\n        //         </div>\n        //         <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        //         </form>\n        //     </div>\n        // </div>\n        <section class=\"vh-100\">\n  <div class=\"container-fluid h-custom\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-md-9 col-lg-6 col-xl-5\">\n        <img src=\"https://mdbootstrap.com/img/Photos/new-templates/bootstrap-login-form/draw2.png\" class=\"img-fluid\"\n          alt=\"Sample image\" />\n      </div>\n      <div class=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n        <form onSubmit={(e)=>{FormSubmit(e)}}>\n          {/* <div class=\"d-flex flex-row align-items-center justify-content-center justify-content-lg-start\">\n            <p class=\"lead fw-normal mb-0 me-3\">Sign in with</p>\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-facebook-f\"></i>\n            </button>\n\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-twitter\"></i>\n            </button>\n\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-linkedin-in\"></i>\n            </button>\n          </div> */}\n\n          {/* <div class=\"divider d-flex align-items-center my-4\">\n            <p class=\"text-center fw-bold mx-3 mb-0\">Or</p>\n          </div> */}\n\n        \n          <div class=\"form-outline mb-4\">\n            <label class=\"form-label\" for=\"form3Example3\">Username</label>\n            <input  defaultValue={formState.username} onChange={(e)=>{onInputChange(e)}} name=\"username\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter a valid username\" />\n          </div>\n\n       \n          <div class=\"form-outline mb-3\">\n            <label class=\"form-label\" for=\"form3Example4\">Password</label>\n            <input type=\"password\" defaultValue={formState.password} onChange={(e)=>{onInputChange(e)}} name=\"password\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter password\" />\n          </div>\n\n          \n          <div class=\"text-center text-lg-start mt-4 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary btn-lg\"\n              style={{paddingLeft: \"2.5rem\", paddingRight: \"2.5rem\"}}>Login</button>\n            {/* <p class=\"small fw-bold mt-2 pt-1 mb-0\">Don't have an account? <a href=\"#!\"\n                class=\"link-danger\">Register</a></p> */}\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n  {/* <div class=\"d-flex flex-column flex-md-row text-center text-md-start justify-content-between py-4 px-4 px-xl-5 bg-primary\">\n    \n    <div class=\"text-white mb-3 mb-md-0\">\n      Copyright © 2020. All rights reserved.\n    </div>\n    \n    <div>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-facebook-f\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-twitter\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-google\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white\">\n        <i class=\"fab fa-linkedin-in\"></i>\n      </a>\n    </div>\n    \n  </div> */}\n</section>\n        \n    )\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport auth from \"./auth\";\n\nexport const ProtectedRoute=({component:Component,...rest})=>{\n    const auth = localStorage.getItem(\"authenticated\");\n    // console.log(\"==================================\"+auth)\n   \n    return (\n        <Route\n        {...rest}\n        render={props=>{\n            // console.log(\"Success\")\n            // console.log(\"==================================\"+auth)\n            // auth ? return (<Component {...props} />) : return(\n            //     <Redirect\n            //     to={{\n            //         pathname:\"/\",\n            //         state:{\n            //             from:props.location\n            //         }\n            //     }} />\n            // )\n\n            if (auth===\"true\"){\n                //console.log(\"Login\")\n                return <Component {...props} />\n            }\n            else\n            {\n                return(\n                    <Redirect\n                    to={{\n                        pathname:\"/Login\",\n                        state:{\n                            from:props.location\n                        }\n                    }} />\n                )\n            }\n        }} />\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n  }  \n`\n\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n`\nconst READ_MEDIA = gql`\nquery MyQuery {\n    media_type_master {\n      id\n      media_type\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n    \n`\nconst READ_SIZE = gql`\nquery MyQuery {\n    size_master {\n      id\n      height\n      width\n      no_of_display\n    }\n  }  \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($country: Int!,$state:Int!,$city:Int!,$illumination:String!,$media_type:Int!,$_gt: date = \"\") {\n    Inventory_Master(where: {Country: {_eq: $country}, State:{_eq:$state},City_Village:{_eq:$city},Illumination:{_eq:$illumination},Media_Type:{_eq:$media_type},AvailabilityTo: {_lt: $_gt}}) {\n        Status\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        id\n        country {\n            id\n            name\n          }\n          city {\n            id\n            name\n          }\n          state {\n            id\n            name\n          }\n          media_type_master {\n            id\n            media_type\n          }\n      }\n  }\n  \n`\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($id: Int!) {\n  delete_inquiry_master_by_pk(id: $id) {\n    id\n  }\n}\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription {\n    inquiry_master {\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      end_date\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      work_order\n      task_sheet\n      downtime\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\nconst UPDATE_Inventory = gql`\nmutation MyMutation($id: Int = 0,$Status:String=\"Hold\") {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {Status:$Status}) {\n      id\n    }\n  }\n  \n`\n\nexport default function Availability_Master() {\n    //States\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [showhide, setShowhide] = useState('hidden');\n    const [country, setCountry] = useState();\n    const [state, setState] = useState();\n    const [city, setCity] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    // const [district, setDistrict] = useState();\n    // const [taluka, setTaluka] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n    // Modal States\n    \n    const [ModalId, setModalId] = useState();\n    const [ModalCountry, setModalCountry] = useState();\n    const [ModalStates, setModalStates] = useState();\n    const [ModalTaluka, setModalTaluka] = useState();\n    const [ModalDistrict, setModalDistrict] = useState();\n    const [ModalCity_Village, setModalCity_Village] = useState();\n    const [ModalLocation, setModalLocation] = useState();\n    const [ModalMedia_Type, setModalMedia_Type] = useState();\n    const [ModalIllumination, setModalIllumination] = useState();\n    const [ModalWidth, setModalWidth] = useState(1);\n    const [ModalHeight, setModalHeight] = useState(1);\n    const [ModalNoofDisplay, setModalNoofDisplay] = useState(1);\n    const [ModalTotalsqft, setModalTotalsqft] = useState();\n    const [ModalDisplayRatePM, setModalDisplayRatePM] = useState();\n    const [ModalOneTimePrintingCost, setModalOneTimePrintingCost] = useState();\n    const [ModalOneTimeMountingCost, setModalOneTimeMountingCost] = useState();\n    const [ModalTotal, setModalTotal] = useState();\n    const [ModalAvailabilityFrom, setModalAvailabilityFrom] = useState();\n    const [ModalAvailabilityTo, setModalAvailabilityTo] = useState();\n    const [ModalDrpmRate, setModalDrpmRate] = useState();\n    const [ModalOtpcRate, setModalOtpcRate] = useState();\n    const [ModalOtmcRate, setModalOtmcRate] = useState();\n    const [Modalhoarding_insurance,setModalhoarding_insurance]=useState();\n    const [Modalerrection_cost,setModalerrection_cost]=useState();\n    const [Modalerrection_year,setModalerrection_year]=useState();\n    const [Modalfabrication_selection,setModalfabrication_selection]=useState();\n    const [ModalStatus,setModalStatus]=useState();\n\n    const [update_InventorymasterData] = useMutation(UPDATE_Inventory);\n    const read_media = useQuery(READ_MEDIA);\n    const read_countries = useQuery(READ_COUNTRIES);\n    const read_states = useQuery(READ_STATES);\n    const read_cities = useQuery(READ_CITIES);\n    //const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n\n    //Loader\n    if (read_inquiry.loading  || read_countries.loading || read_states.loading || read_cities.loading || loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onCountryChange = (country_data) => {\n        setCountry(country_data.id)\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n    }\n    const onCityChange = (city_data) => {\n        setCity(city_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        console.log(e.target.value)\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        console.log(e.target.value);\n        setSearchDate(e.target.value);\n    }\n    // const onDistrictChange = (district_data) => {\n    //     setDistrict(district_data.District);\n    // }\n    // const onTalukaChange = (taluka_data) => {\n    //     setTaluka(taluka_data.Taluka);\n    // }\n    const onLocationChange = (e) => {\n        //console.log(e.target[1].value);\n\n        //console.log(e.target.value);\n        var inv = data.Inventory_Master[0]\n        const filteredInventory = data.Inventory_Master.filter((location) => location.Location.includes(e.target.value))\n        setInventoryData(filteredInventory[0]);\n        //console.log(filteredInventory[0].id)\n        setLocation(filteredInventory[0].id);\n        //setShowhide(\"visible\");\n    }\n    const onSearch = (e) => {\n        e.preventDefault();\n        //console.log(district);\n        // loadInventory({variables:{country:country,state:state,city:city,district:district,taluka:taluka,location:location,size:size,illumination:illumination,media:media}})\n        loadInventory({ variables: { country: country, state: state, city: city, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        //console.log(data);\n        setShowhide(\"visible\");\n    }\n    const onEdit = (row) => {\n        //console.log(row);\n        handleShow();\n        setModalId(row.id);\n        setModalStatus(row.Status);\n\n\n        //console.log(modalInventory);\n    }\n    const onModalStatusChange=(e)=>{\n        setModalStatus(e.target.value)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(ModalStates.toString());\n        update_InventorymasterData({ variables: { id: ModalId,Status:ModalStatus} })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'Country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.country.name;\n            }\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.state.name;\n            }\n        },\n        {\n            field: 'City_Village',\n            headerName: 'City_Village',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n        { \n            field: 'District', \n            headerName: 'District', \n            width: 200 \n        },\n        { \n            field: 'Taluka', \n            headerName: 'Taluka', \n            width: 200 \n        },\n        { \n            field: 'Location', \n            headerName: 'Location', \n            width: 200 \n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        { \n            field: 'Illumination', \n            headerName: 'Illumination', \n            width: 200 \n        },\n        { \n            field: 'Width', \n            headerName: 'Width', \n            width: 200 \n        },\n        { \n            field: 'Height', \n            headerName: 'Height', \n            width: 200 \n        },\n        { \n            field: 'NoofDisplay', \n            headerName: 'No Of Display', \n            width: 200 \n        },\n        { \n            field: 'Totalsqft', \n            headerName: 'Total Sq ft', \n            width: 200 \n        },\n        { \n            field: 'DrpmRate', \n            headerName: 'DrpmRate', \n            width: 200 \n        },\n        { \n            field: 'DisplayRatePM', \n            headerName: 'DisplayRatePM', \n            width: 200 \n        },\n        { \n            field: 'OtpcRate', \n            headerName: 'OtpcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimePrintingCost', \n            headerName: 'OneTimePrintingCost', \n            width: 200 \n        },\n        { \n            field: 'OtmcRate', \n            headerName: 'OtmcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimeMountingCost', \n            headerName: 'OneTimeMountingCost', \n            width: 200 \n        },\n        { \n            field: 'Total', \n            headerName: 'Total', \n            width: 200 \n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'AvailabilityFrom',\n            width: 200\n        },\n        { \n            field: 'AvailabilityTo', \n            headerName: 'AvailabilityTo', \n            width: 200 \n        },\n        { \n            field: 'Status', \n            headerName: 'Status', \n            width: 200 \n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 170,\n            renderCell: (params) => {\n              return (\n                <div className=\"\">\n                  <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { onEdit(params.row) }} style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n                </div>\n              );\n            }\n          },\n    ]\n    //console.log(data);\n    const emptyarr = [\n        {\n            id:45,\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            City_Village: \"\",\n            Country: \"\",\n            DisplayRatePM: \"\",\n            District: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            State: \"\",\n            Taluka: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            city:{\n                id: \"\",\n                name: \"\"\n            },\n            country:{\n                id: \"\",\n                name: \"\"\n            },\n            media_type_master:{\n                id: \"\",\n                media_type: \"\"\n            },\n            state:{\n                id: \"\",\n                name: \"\"\n            }\n        }\n    ]\n    var rows = emptyarr;\n    if(data)\n    {\n       rows=data.Inventory_Master;\n    }\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n    console.log(rows);\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Availability Master</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                        <label>Id</label>\n                            <input type='text' name=\"id\" className=\"form-control\" defaultValue={ModalId} />\n                        </div>\n                        <div className=\"field col-md-4\">\n                        <label>Status</label>\n                            <select defaultValue={ModalStatus} className=\"form-control\"onChange={onModalStatusChange} >\n                                <option>Select...</option>\n                                <option>Immediate</option>\n                                <option>Booked</option>\n                                <option>Hold</option>\n                            </select>\n                        </div>\n                        </div><br/>\n\n                        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                            <br /><br />\n                            {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                        </div>\n\n\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n                    <h4 className=\"text-center\">Availability Master</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"country\" className=\"form-control mt-1\" placeholder=\"enter country\" required>\n                        <option>--SELECT--</option>\n                        {read_countries.data.countries.map(country => (\n                            <option key={country.id} value={country.id}>{country.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"state\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                        <option>--SELECT--</option>\n                        {read_states.data.states.map(state => (\n                            <option key={state.id} value={state.id}>{state.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"cities\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                        <option>--SELECT--</option>\n                        {read_cities.data.cities.map(city => (\n                            <option key={city.id} value={city.id}>{city.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                                <option>ALL</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\n                    </div><br />\n                    <div className=\"row\">\n\n                        {/* <div className=\"field col-md-4\" style={{ marginLeft: '30%' }}>\n                            <label className=\"required\" style={{ visibility: 'visible' }}>Location</label>\n                            <select className=\"form-control\" onChange={onLocationChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.Location}>{inventory.Location}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                    </div><br /> <br />\n                </form >\n                {/* <div style={{ height: 500, width: '100%', visibility: showhide }}  >\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Country</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.country.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>State</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.state.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>City</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.city.name} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>District</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.District} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Taluka</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Taluka} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Location</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Location} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Media</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.media_type_master.media_type} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Illumination} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Width</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Width} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Height</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Height} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>No Of Display</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.NoofDisplay} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Total sq ft</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Totalsqft} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DrpmRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Display Rate PM</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DisplayRatePM} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtpcRate} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>One Time Printing Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimePrintingCost} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtmcRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>One Time Mounting Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimeMountingCost} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Total</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Total} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability From</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityFrom} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability To</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityTo} readOnly />\n                        </div>\n                    </div>\n                    <CSVLink data={data === undefined ? '' : data.Inventory_Master}>Download</CSVLink>\n                </div> */}\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($id: Int!) {\n    Inventory_Master_by_pk(id: $id) {\n        id\n        hoarding_insurance_to\n        hoarding_insurance_from\n        hoarding_insurance\n      }\n  }  \n`\n\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      State\n      District\n      Subdistrict\n      DisplayRatePM\n      \n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n    \n      Total\n      Totalsqft\n      Width\n      \n      \n      hoarding_insurance\n      hoarding_insurance_to\n        hoarding_insurance_from\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      \n    }\n  }\n`\nconst UPDATE_INVENTORY=gql`\nmutation MyMutation($hoarding_insurance: String = \"\", $hoarding_insurance_from: date = \"\", $hoarding_insurance_to: date = \"\", $id: Int!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {hoarding_insurance: $hoarding_insurance, hoarding_insurance_from: $hoarding_insurance_from, hoarding_insurance_to: $hoarding_insurance_to}) {\n      id\n    }\n  }  \n`\n\nfunction Hoarding_Insurance1() {\n    //States\n    const [filteredData,setFilteredData] = useState();\n    const [get_data, setGet_data] = useState();\n    const [inventory, setInventory] = useState();\n    const [id,setId] = useState();\n    const [insurance, setInsurance] = useState();\n    const [insuranceFrom, setInsuranceFrom] = useState();\n    const [insuranceTo, setInsuranceTo] = useState();\n\n    //Queries\n    const [update_inventory] = useMutation(UPDATE_INVENTORY);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const [searchInventory, searchInventoryData] = useLazyQuery(SEARCH_INVENTORY, {\n        onCompleted: data => {\n            // console.log('data ', data);\n            setGet_data(data);\n        }\n    });\n    if (read_inventory.loading || searchInventoryData.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n\n    //Events\n    const onInventoryChange = (e) => {\n        setFilteredData(\"\")\n        setInventory(e.target.value);\n        //console.log(typeof e.target.value);\n        searchInventory({ variables: { id: inventory } });\n        const filteredInventory = read_inventory.data.Inventory_Master.filter((location) => location.id.toString().includes(e.target.value))\n        console.log(read_inventory.data.Inventory_Master.filter((location) => location.id.toString().includes(e.target.value)));\n        //setFilteredData(filteredInventory);\n        setId(filteredInventory[0].id)\n        setInsurance(filteredInventory[0].hoarding_insurance)\n        setInsuranceFrom(filteredInventory[0].hoarding_insurance_from)\n        setInsuranceTo(filteredInventory[0].hoarding_insurance_to)\n        //console.log(filteredData[0].hoarding_insurance)\n\n    }\n    const onInsuranceChange=(e)=>{\n        setInsurance(e.target.value);\n    }\n    const onInsuranceFromChange=(e)=>{\n        setInsuranceFrom(e.target.value);\n    }\n    const onInsuranceToChange=(e)=>{\n        setInsuranceTo(e.target.value);\n    }\n    const onFormSubmit=(e)=>{\n        e.preventDefault();\n        update_inventory({variables:{id:id,hoarding_insurance:insurance,hoarding_insurance_from:insuranceFrom,hoarding_insurance_to:insuranceTo}})\n    }\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form className='form-group' onSubmit={onFormSubmit}>\n                    <div className=\"col-md-12\">\n                        <br />\n                        <h4 style={{ width: '100%', textAlign: 'center' }}>HOARDING INSURANCE</h4>\n                        <br />\n                        {/* <Divider style={{ marginBottom: '8px', }} /> */}\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Inventory</label>\n                                <select className=\"form-control mt-1\" onChange={onInventoryChange}>\n                                    <option>Select...</option>\n                                    {read_inventory.data.Inventory_Master.map(inventory => (\n                                        <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <select defaultValue={insurance} onChange={onInsuranceChange} className=\"form-control mt-2\" >\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                            <div className=\"field col-md-2 \">\n                                <label className=\"required\">From Date</label>\n                                <input defaultValue={insuranceFrom} onChange={onInsuranceFromChange} type=\"date\" className=\"form-control\" />\n                            </div>\n                            <div className=\"field col-md-2 \">\n                                <label className=\"required\">To Date</label>\n                                <input defaultValue={insuranceTo} onChange={onInsuranceToChange} type=\"date\" className=\"form-control\" />\n                            </div>\n                        </div>\n\n                    </div>\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n                    </div>\n                    <br />\n                </form>\n            </Card>\n        </div>\n    )\n}\n\nexport default Hoarding_Insurance1\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_HOARDING = gql`\nsubscription MySubscription {\n  hoarding_errection {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    fabricator\n  }\n}\n`\nconst READ_HOARDING = gql`\nsubscription MySubscription {\n    hoarding_errection {\n        laborMasterByExcavator {\n            id\n            labor_type\n            name\n          }\n          laborMasterByElectricianSelection {\n            id\n            labor_type\n            name\n          }\n          labor_master {\n            id\n            labor_type\n            name\n          }\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    id\n    fabricator\n    }   \n}\n`\nconst INSERT_HOARDING = gql`\nmutation MyMutation($location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  insert_hoarding_errection_one(object: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n  }\n}\n`\nconst UPDATE_HOARDING = gql`\nmutation MyMutation($id: Int = 10, $location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  update_hoarding_errection_by_pk(pk_columns: {id: $id}, _set: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n  }\n}\n`\nconst DELETE_HOARDING = gql`\nmutation MyMutation($id: Int = 10) {\n  delete_hoarding_errection_by_pk(id: $id) {\n    id\n  }\n}\n`\nconst READ_LABOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 21}}) {\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      pan\n      name\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nsubscription MySubscription {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n     \n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n`\nconst READ_ELECTRICIAN = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 20}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_CIVIL_CONTRACTOR = gql`\nsubscription MySubscription {\n    labor_master(where: {isDeleted: {_eq: \"false\"},labor_type: {_eq: 24}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_EXCAVATOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 23}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nexport default function HoardingErrection() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [hoarding, setHOARDING] = useState({\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n\n    const [modalHOARDING, setModalHOARDING] = useState({\n        id: '',\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n    const [insert_hoarding, insert_data] = useMutation(INSERT_HOARDING);\n    const [update_hoarding, update_data] = useMutation(UPDATE_HOARDING);\n    const [delete_hoarding, delete_data] = useMutation(DELETE_HOARDING);\n    const read_labor = useSubscription(READ_LABOR);\n    const read_excavator = useSubscription(READ_EXCAVATOR);\n    const read_electrician = useSubscription(READ_ELECTRICIAN);\n    const read_civil_contractor = useSubscription(READ_CIVIL_CONTRACTOR);\n    const read_inventory = useSubscription(READ_INVENTORY);\n    const hoarding_data = useSubscription(READ_HOARDING);\n    if (hoarding_data.loading || hoarding_data.loading || read_labor.loading || read_inventory.loading || read_excavator.loading || read_electrician.loading || read_civil_contractor.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setHOARDING({ ...hoarding, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(hoarding)\n        insert_hoarding({ variables: hoarding })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalHOARDING({\n            id: row.id,\n            location: row.location,\n            payment: row.payment,\n            permission: row.permission,\n            excavator: row.excavator,\n            excavator_charges: row.excavator_charges,\n            civil_contractor: row.civil_contractor,\n            civil_material: row.civil_material,\n            civil_contractor_labour_payment: row.civil_contractor_labour_payment,\n            fabrication_material: row.fabrication_material,\n            fabricator_labour_payment: row.fabricator_labour_payment,\n            transport_charges: row.transport_charges,\n            electrician_selection: row.electrician_selection,\n            electric_material_purchase: row.electric_material_purchase,\n            electrician_labour_payment: row.electrician_labour_payment,\n            fabricator:row.fabricator,\n        })\n        console.log(modalHOARDING);\n    }\n    const onModalInputChange = (e) => {\n        setModalHOARDING({ ...modalHOARDING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_hoarding({ variables: modalHOARDING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_hoarding({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'location',\n            headerName: 'Location Provided By Agent Name',\n            width: 300\n        },\n        {\n            field: 'payment',\n            headerName: 'Payment For Location To Agent Amount',\n            width: 330\n        },\n        {\n            field: 'permission',\n            headerName: 'Permission Cost Amount',\n            width: 250\n        },\n        {\n            field: 'excavator',\n            headerName: 'Excavator Selection',\n            width: 210,\n            valueGetter: (params) => {\n                return params.row.laborMasterByExcavator.name;\n            }\n        },\n        {\n            field: 'excavator_charges',\n            headerName: 'Excavator Charges Amount',\n            width: 260\n        },\n        {\n            field: 'civil_contractor',\n            headerName: 'Civil Contractor Selection',\n            width: 250,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'civil_material',\n            headerName: 'Civil Material Purchase Amount',\n            width: 280\n        },\n        {\n            field: 'civil_contractor_labour_payment',\n            headerName: 'Civil Contractor Labour Payment Amount',\n            width: 340\n        },\n        {\n            field: 'fabrication_material',\n            headerName: 'Fabrication Material Purchase Amount',\n            width: 320\n        },\n        {\n            field: 'fabricator_labour_payment',\n            headerName: 'Fabricator Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'transport_charges',\n            headerName: 'Transport Charges If Any',\n            width: 240\n        },\n        {\n            field: 'electrician_selection',\n            headerName: 'Electrician Selection',\n            width: 220,\n            valueGetter: (params) => {\n                return params.row.laborMasterByElectricianSelection.name;\n            }\n        },\n        {\n            field: 'electric_material_purchase',\n            headerName: 'Electric Material Purchase Amount',\n            width: 310\n        },\n        {\n            field: 'electrician_labour_payment',\n            headerName: 'Electrician Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'fabricator',\n            headerName: 'Fabricator',\n            width: 310\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = hoarding_data.data.hoarding_errection;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Hoarding Errection</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalHOARDING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Location Provided By Agent's Name\n                                </label>\n                                <input defaultValue={modalHOARDING.location} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"location\" type=\"text\" placeholder=\"enter location provided by agent's name\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Payment For Location To Agent Amount</label>\n                                <input defaultValue={modalHOARDING.payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"payment\" type=\"text\" placeholder=\"enter payment for location to agent's amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Permission Cost Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.permission} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"permission\" type=\"text\" placeholder=\"enter permission cost amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Selection</label>\n                                {/* <input defaultValue={modalHOARDING.excavator} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator\" type=\"text\" placeholder=\"select excavator\" /> */}\n                                <select defaultValue={modalHOARDING.excavator} name=\"excavator\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_excavator.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Charges Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.excavator_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator_charges\" type=\"text\" placeholder=\"enter excavator charges amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contractor Selection</label>\n                                {/* <input defaultValue={modalHOARDING.civil_contractor} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor\" type=\"text\" placeholder=\"select civil contractor\" /> */}\n                                <select defaultValue={modalHOARDING.civil_contractor} name=\"civil_contractor\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_civil_contractor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.civil_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_material\" type=\"text\" placeholder=\"enter civil material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contract Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.civil_contractor_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabrication Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.fabrication_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabrication_material\" type=\"text\" placeholder=\"enter fabrication material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.fabricator_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabricator_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Transport Changes If Any\n                                </label>\n                                <input defaultValue={modalHOARDING.transport_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"transport_charges\" type=\"text\" placeholder=\"enter transport charges if any\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Selection</label>\n                                {/* <input defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_selection\" type=\"text\" placeholder=\"select electrician\" /> */}\n                                <select defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} name=\"electrician_selection\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_electrician.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electric Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electric_material_purchase} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electric_material_purchase\" type=\"text\" placeholder=\"enter electric material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Labour Payment Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electrician_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_labour_payment\" type=\"text\" placeholder=\"enter electrician labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator</label>\n                                <select defaultValue={modalHOARDING.fabricator} name=\"fabricator\" className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_labor.data.labor_master.map((labor)=>(\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '25%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"0.5%\",\n                padding: \"0.5%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">HOARDING ERRECTION</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Location Provided By Agent Name</label>\n                            <input type=\"text\" name=\"location\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter location provided by agent name\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Payment For Location To Agent Amount</label>\n                            <input type=\"text\" name=\"payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter payment for location to agent amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Permission Cost Amount</label>\n                            <input type=\"text\" name=\"permission\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter permission cost amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Selection</label>\n                            {/* <input type=\"text\" name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select excavator\" required /> */}\n                            <select name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_excavator.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Charges Amount</label>\n                            <input type=\"text\" name=\"excavator_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter excavator charges amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Selection</label>\n                            {/* <input type=\"text\" name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select civil contractor\" required /> */}\n                            <select name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_civil_contractor.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Material Purchase Amount</label>\n                            <input type=\"text\" name=\"civil_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Labour Payment Amount</label>\n                            <input type=\"text\" name=\"civil_contractor_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil contractor labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabrication Material Purchase Amount</label>\n                            <input type=\"text\" name=\"fabrication_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabrication material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Transport Charges If Any</label>\n                            <input type=\"text\" name=\"transport_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter transport charges if any\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Selection</label>\n                            {/* <input type=\"text\" name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select electrician\" required /> */}\n                            <select name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_electrician.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electric Material Purchase Amount</label>\n                            <input type=\"text\" name=\"electric_material_purchase\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electric material purchase amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Labour Payment Amount</label>\n                            <input type=\"text\" name=\"electrician_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electrician labour payment amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator</label>\n                            <select name=\"fabricator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {\n                                    read_labor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_HOARDING = gql`\nsubscription MySubscription {\n  hoarding_errection {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    fabricator\n  }\n}\n`\nconst READ_HOARDING = gql`\nsubscription MySubscription {\n    hoarding_errection {\n        laborMasterByExcavator {\n            id\n            labor_type\n            name\n          }\n          laborMasterByElectricianSelection {\n            id\n            labor_type\n            name\n          }\n          labor_master {\n            id\n            labor_type\n            name\n          }\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    id\n    fabricator\n    }   \n}\n`\nconst INSERT_HOARDING = gql`\nmutation MyMutation($location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  insert_hoarding_errection_one(object: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n  }\n}\n`\nconst UPDATE_HOARDING = gql`\nmutation MyMutation($id: Int = 10, $location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  update_hoarding_errection_by_pk(pk_columns: {id: $id}, _set: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n  }\n}\n`\nconst DELETE_HOARDING = gql`\nmutation MyMutation($id: Int = 10) {\n  delete_hoarding_errection_by_pk(id: $id) {\n    id\n  }\n}\n`\nconst READ_LABOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 7}}) {\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      pan\n      name\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nsubscription MySubscription {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n     \n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n`\nconst READ_ELECTRICIAN = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 3}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_CIVIL_CONTRACTOR = gql`\nsubscription MySubscription {\n    labor_master(where: {isDeleted: {_eq: \"false\"},labor_type: {_eq: 5}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_EXCAVATOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 1}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nexport default function HoardingErrection() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [hoarding, setHOARDING] = useState({\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n\n    const [modalHOARDING, setModalHOARDING] = useState({\n        id: '',\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n    const [insert_hoarding, insert_data] = useMutation(INSERT_HOARDING);\n    const [update_hoarding, update_data] = useMutation(UPDATE_HOARDING);\n    const [delete_hoarding, delete_data] = useMutation(DELETE_HOARDING);\n    const read_labor = useSubscription(READ_LABOR);\n    const read_excavator = useSubscription(READ_EXCAVATOR);\n    const read_electrician = useSubscription(READ_ELECTRICIAN);\n    const read_civil_contractor = useSubscription(READ_CIVIL_CONTRACTOR);\n    const read_inventory = useSubscription(READ_INVENTORY);\n    const hoarding_data = useSubscription(READ_HOARDING);\n    if (hoarding_data.loading || hoarding_data.loading || read_labor.loading || read_inventory.loading || read_excavator.loading || read_electrician.loading || read_civil_contractor.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setHOARDING({ ...hoarding, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(hoarding)\n        insert_hoarding({ variables: hoarding })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalHOARDING({\n            id: row.id,\n            location: row.location,\n            payment: row.payment,\n            permission: row.permission,\n            excavator: row.excavator,\n            excavator_charges: row.excavator_charges,\n            civil_contractor: row.civil_contractor,\n            civil_material: row.civil_material,\n            civil_contractor_labour_payment: row.civil_contractor_labour_payment,\n            fabrication_material: row.fabrication_material,\n            fabricator_labour_payment: row.fabricator_labour_payment,\n            transport_charges: row.transport_charges,\n            electrician_selection: row.electrician_selection,\n            electric_material_purchase: row.electric_material_purchase,\n            electrician_labour_payment: row.electrician_labour_payment,\n            fabricator:row.fabricator,\n        })\n        console.log(modalHOARDING);\n    }\n    const onModalInputChange = (e) => {\n        setModalHOARDING({ ...modalHOARDING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_hoarding({ variables: modalHOARDING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_hoarding({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'location',\n            headerName: 'Location Provided By Agent Name',\n            width: 300\n        },\n        {\n            field: 'payment',\n            headerName: 'Payment For Location To Agent Amount',\n            width: 330\n        },\n        {\n            field: 'permission',\n            headerName: 'Permission Cost Amount',\n            width: 250\n        },\n        {\n            field: 'excavator',\n            headerName: 'Excavator Selection',\n            width: 210,\n            valueGetter: (params) => {\n                return params.row.laborMasterByExcavator.name;\n            }\n        },\n        {\n            field: 'excavator_charges',\n            headerName: 'Excavator Charges Amount',\n            width: 260\n        },\n        {\n            field: 'civil_contractor',\n            headerName: 'Civil Contractor Selection',\n            width: 250,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'civil_material',\n            headerName: 'Civil Material Purchase Amount',\n            width: 280\n        },\n        {\n            field: 'civil_contractor_labour_payment',\n            headerName: 'Civil Contractor Labour Payment Amount',\n            width: 340\n        },\n        {\n            field: 'fabrication_material',\n            headerName: 'Fabrication Material Purchase Amount',\n            width: 320\n        },\n        {\n            field: 'fabricator_labour_payment',\n            headerName: 'Fabricator Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'transport_charges',\n            headerName: 'Transport Charges If Any',\n            width: 240\n        },\n        {\n            field: 'electrician_selection',\n            headerName: 'Electrician Selection',\n            width: 220,\n            valueGetter: (params) => {\n                return params.row.laborMasterByElectricianSelection.name;\n            }\n        },\n        {\n            field: 'electric_material_purchase',\n            headerName: 'Electric Material Purchase Amount',\n            width: 310\n        },\n        {\n            field: 'electrician_labour_payment',\n            headerName: 'Electrician Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'fabricator',\n            headerName: 'Fabricator',\n            width: 310\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = hoarding_data.data.hoarding_errection;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Hoarding Errection</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalHOARDING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Location Provided By Agent's Name\n                                </label>\n                                <input defaultValue={modalHOARDING.location} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"location\" type=\"text\" placeholder=\"enter location provided by agent's name\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Payment For Location To Agent Amount</label>\n                                <input defaultValue={modalHOARDING.payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"payment\" type=\"text\" placeholder=\"enter payment for location to agent's amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Permission Cost Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.permission} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"permission\" type=\"text\" placeholder=\"enter permission cost amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Selection</label>\n                                {/* <input defaultValue={modalHOARDING.excavator} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator\" type=\"text\" placeholder=\"select excavator\" /> */}\n                                <select defaultValue={modalHOARDING.excavator} name=\"excavator\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_excavator.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Charges Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.excavator_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator_charges\" type=\"text\" placeholder=\"enter excavator charges amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contractor Selection</label>\n                                {/* <input defaultValue={modalHOARDING.civil_contractor} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor\" type=\"text\" placeholder=\"select civil contractor\" /> */}\n                                <select defaultValue={modalHOARDING.civil_contractor} name=\"civil_contractor\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_civil_contractor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.civil_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_material\" type=\"text\" placeholder=\"enter civil material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contract Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.civil_contractor_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabrication Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.fabrication_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabrication_material\" type=\"text\" placeholder=\"enter fabrication material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.fabricator_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabricator_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Transport Changes If Any\n                                </label>\n                                <input defaultValue={modalHOARDING.transport_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"transport_charges\" type=\"text\" placeholder=\"enter transport charges if any\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Selection</label>\n                                {/* <input defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_selection\" type=\"text\" placeholder=\"select electrician\" /> */}\n                                <select defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} name=\"electrician_selection\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_electrician.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electric Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electric_material_purchase} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electric_material_purchase\" type=\"text\" placeholder=\"enter electric material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Labour Payment Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electrician_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_labour_payment\" type=\"text\" placeholder=\"enter electrician labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator</label>\n                                <select defaultValue={modalHOARDING.fabricator} name=\"fabricator\" className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_labor.data.labor_master.map((labor)=>(\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '25%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"0.5%\",\n                padding: \"0.5%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">HOARDING ERRECTION</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Location Provided By Agent Name</label>\n                            <input type=\"text\" name=\"location\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter location provided by agent name\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Payment For Location To Agent Amount</label>\n                            <input type=\"text\" name=\"payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter payment for location to agent amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Permission Cost Amount</label>\n                            <input type=\"text\" name=\"permission\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter permission cost amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Selection</label>\n                            {/* <input type=\"text\" name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select excavator\" required /> */}\n                            <select name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_excavator.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Charges Amount</label>\n                            <input type=\"text\" name=\"excavator_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter excavator charges amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Selection</label>\n                            {/* <input type=\"text\" name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select civil contractor\" required /> */}\n                            <select name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_civil_contractor.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Material Purchase Amount</label>\n                            <input type=\"text\" name=\"civil_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Labour Payment Amount</label>\n                            <input type=\"text\" name=\"civil_contractor_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil contractor labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabrication Material Purchase Amount</label>\n                            <input type=\"text\" name=\"fabrication_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabrication material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Transport Charges If Any</label>\n                            <input type=\"text\" name=\"transport_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter transport charges if any\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Selection</label>\n                            {/* <input type=\"text\" name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select electrician\" required /> */}\n                            <select name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_electrician.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electric Material Purchase Amount</label>\n                            <input type=\"text\" name=\"electric_material_purchase\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electric material purchase amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Labour Payment Amount</label>\n                            <input type=\"text\" name=\"electrician_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electrician labour payment amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator</label>\n                            <select name=\"fabricator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {\n                                    read_labor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst INSERT_QUICK_MEDIA=gql`\nmutation MyMutation($inquiry: Int = 0, $mobile_no: String = \"\",$proposal_no:Int!) {\n    insert_quick_media_one(object: {inquiry: $inquiry, mobile_no: $mobile_no,proposal_no:$proposal_no}) {\n      id\n    }\n  }\n`\n\n// const DELETE_QUICK_MEDIA=gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_quick_media_by_pk(id: $id) {\n//       id\n//     }\n//   }\n  \n// `\n\nconst DELETE_QUICK_MEDIA=gql`\nmutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n    update_quick_media_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\nconst READ_QUICK=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    quick_media(where: {isDeleted: {_eq: $_eq}}) {\n      inquiry\n      inquiry_master {\n        id\n        Inventory_Master {\n          Location\n        }\n      }\n      id\n      mobile_no\n      proposal_no\n    }\n  }\n  \n`\nconst SEARCH_INQUIRY=gql`\nquery MyQuery($number: String!, $_eq: String = \"false\") {\n    inquiry_master(where: {number: {_eq: $number}, isDeleted: {_eq: $_eq}}) {\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        Subdistrict\n        State\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        \n        Status\n        \n        Total\n        Totalsqft\n        Width\n        \n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        \n      }\n      email_id\n      id\n      inventory\n      media_type\n      media_type_master {\n        id\n        media_type\n      }\n      name\n      number\n      sol\n      start_date\n      status\n      whatsapp_number\n    }\n  }\n    \n`\nconst GET_MOBILE=gql`\nquery MyQuery($mobile_no: String!, $_eq: String = \"false\") {\n    quick_media(where: {mobile_no: {_eq: $mobile_no}, isDeleted: {_eq: $_eq}}) {\n      id\n      inquiry\n      mobile_no\n      proposal_no\n    }\n  }\n  \n  \n  \n`\n\nfunction Quick_Media() {\n    //States\n    const [get_data,setGet_data] = useState();\n    const [mobile_no,setMobile_no] = useState();\n    const [selected,setSelected] = useState();\n    //Queries\n    const [delete_quick_media] = useMutation(DELETE_QUICK_MEDIA);\n    const [insert_quick_media] = useMutation(INSERT_QUICK_MEDIA);\n    const [search_inquiry,return_inquiry] = useLazyQuery(SEARCH_INQUIRY);\n    const [get_mobile,mobile_no_exists] = useLazyQuery(GET_MOBILE,{\n        onCompleted: data => {\n            console.log('data ', data);\n            setGet_data(data);\n          }\n    });\n    const read_quick = useSubscription(READ_QUICK)\n    //functions\n    const onSearch=(e)=>{\n        e.preventDefault();\n        //console.log(e.target[0].value)\n        get_mobile({variables:{mobile_no:e.target[0].value}})\n        search_inquiry({variables:{number:e.target[0].value}})\n    }\n    const onMobileNoChange=(e)=>{\n        setMobile_no(e.target.value);\n    }\n    const saveData=(e)=>{\n        console.log(get_data.quick_media);\n        // if(get_data.quick_media)\n        // {\n        //     var counter = \"\";\n        // }\n        // else\n        // {\n        //     var counter=get_data.quick_media.at(-1);\n        // }\n        //console.log(get_data.quick_media===\"[]\"?\"\":console.log(\"Hello\"));\n        //console.assert()\n\n        //console.log(get_data.quick_media.length===0);\n        //Code comented now\n        console.log(get_data.quick_media.length===0?\"\":get_data.quick_media.at(-1))\n        const counter=get_data.quick_media.length===0?\"\":get_data.quick_media.at(-1)\n        console.log(counter);\n        if(counter===\"\")\n        {\n            var counter_proposal=0;\n        }\n        else\n        {\n            var counter_proposal=counter.proposal_no\n        }\n        for(var i=0;i<selected.length;i++)\n        {\n            insert_quick_media({variables:{inquiry:selected[i],mobile_no:mobile_no,proposal_no:counter_proposal+1}});\n        }\n        \n    }\n    const onDelete=(id)=>{\n        delete_quick_media({variables:{id:id}})\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    //Loader\n    if (return_inquiry.loading||read_quick.loading||mobile_no_exists.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    const emptyarr = [\n        {\n            id:\"\",\n            number:\"\",\n            name:\"\",\n            sol:\"\",\n            start_date:\"\",\n            status:\"\",\n            whatsapp_number:\"\",\n            Inventory_Master:\n            {\n                id:\"\",\n                AvailabilityFrom: \"\",\n                AvailabilityTo: \"\",\n                Subdistrict: \"\",\n                State: \"\",\n                DisplayRatePM: \"\",\n                District: \"\",\n                DrpmRate: \"\",\n                Height: \"\",\n                Illumination: \"\",\n                Location: \"\",\n                Media_Type: \"\",\n                NoofDisplay: \"\",\n                OneTimeMountingCost: \"\",\n                OneTimePrintingCost: \"\",\n                OtmcRate: \"\",\n                OtpcRate: \"\",\n                Total: \"\",\n                Totalsqft: \"\",\n                Width: \"\",\n                \n                media_type_master:{\n                    id: \"\",\n                    media_type: \"\"\n                },\n               \n            }\n        }\n    ]\n    //console.log(\"-------------------------------\",mobile_no_exists===undefined?\"\":mobile_no_exists.data);\n    \n    var rows = emptyarr;\n    //console.log(data);\n    if(return_inquiry.data)\n    {\n       rows=return_inquiry.data.inquiry_master;\n    }\n    const rows1=read_quick.data.quick_media;\n    let newData1 = []\n    rows1.map((item, index) => {\n        newData1.push({ sno: index + 1, ...item })\n    })\n    const columns1=[\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field:'id',\n            headerName:'ID',\n            width:200\n        },\n        {\n            field:'mobile_no',\n            headerName:'Mobile No',\n            width:200\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.inquiry_master.Inventory_Master.Location;\n            }\n        },\n        {\n            field:'proposal_no',\n            headerName:'Proposal No',\n            width:200\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        {/* <button onClick={() => onDownload(params.row)} data-toggle=\"tooltip\" title=\"Download\" type=\"button\" className=\"btn btn-primary\"  ><i className=\"bi bi-pencil-fill\"></i></button> */}\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n        \n    ]\n    const columns=[\n        { \n            field: 'id', \n            headerName: 'ID', \n            width: 200 \n        },\n        { \n            field: 'name', \n            headerName: 'Name', \n            width: 200 \n        },\n        { \n            field: 'number', \n            headerName: 'Number', \n            width: 200 \n        },\n        { \n            field: 'sol', \n            headerName: 'Source Of Lead', \n            width: 200 \n        },\n        { \n            field: 'sol', \n            headerName: 'Source Of Lead', \n            width: 200 \n        },\n        { \n            field: 'start_date', \n            headerName: 'Start Date', \n            width: 200 \n        },\n        { \n            field: 'status', \n            headerName: 'Status', \n            width: 200 \n        },\n        { \n            field: 'whatsapp_number', \n            headerName: 'Whatsapp Number', \n            width: 200 \n        },\n        \n        {\n            field: 'media',\n            headerName: 'Media',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Illumination',\n            headerName: 'Illumination',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Illumination;\n            }\n        },\n        {\n            field: 'Width',\n            headerName: 'Width',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Width;\n            }\n        },\n        {\n            field: 'Height',\n            headerName: 'Height',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Height;\n            }\n        },\n        {\n            field: 'NoofDisplay',\n            headerName: 'No Of Display',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.NoofDisplay;\n            }\n        },\n        {\n            field: 'TotalSqft',\n            headerName: 'Total Sq Ft',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Totalsqft;\n            }\n        },\n        {\n            field: 'DrpmRate',\n            headerName: 'DRPM Rate',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.DrpmRate;\n            }\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'availability_from',\n            headerName: 'Availability From',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.AvailabilityFrom;\n            }\n        },\n        {\n            field: 'availability_to',\n            headerName: 'Availability To',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.AvailabilityTo;\n            }\n        },\n        \n    ]\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"4%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form className=\"form-group\" onSubmit={onSearch}>\n                    <h4 className=\"text-center\">Quick Media Proposal</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input onChange={onMobileNoChange} type=\"text\" className=\"form-control\" />\n                        </div>\n                        <div className=\"field col-md-4\"></div><br />\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\n                        <div className=\"field col-md-4\"></div>\n                    </div>\n                </form><br />\n                <div style={{ height: 500, width: '100%'}}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                        onSelectionModelChange={itm => setSelected(itm)}\n                        \n                    />\n                    <button className=\"btn btn-primary\" onClick={saveData} style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                    <br/>\n                </div>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%'}}>\n                <DataGrid\n                    rows={newData1}\n                    columns={columns1}\n                    pageSize={10}\n                    rowsPerPageOptions={[10]}\n                    checkboxSelection={true}\n                    components={{\n                        Toolbar: GridToolbar,\n                    }}\n                        \n                        \n                    /> \n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Quick_Media","import { Divider } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory, Link } from \"react-router-dom\";\nimport Navbar from './Navbar';\nimport { GridMenuIcon } from \"@material-ui/data-grid\";\nimport Employee_Master from './NavItems/Employee_Master';\nimport Location_Master from './NavItems/Location_Master';\nimport Customer_Master from './NavItems/Customer_Master';\nimport Media_Type_Master from './NavItems/Media_Type_Master';\nimport Size_Master from './NavItems/Size_Master';\nimport Industry_Master from './NavItems/Industry_Master';\nimport GST_Type_Master from './NavItems/GST_Type_Master';\nimport Labour_Master from './NavItems/Labour_Master';\nimport Dashboard from './NavItems/Dashboard';\nimport Inventory_Master from \"./NavItems/Inventory_Master\";\nimport Labor_Category_Master from \"./NavItems/Labor_Category_Master\";\nimport Payment_Type from \"./NavItems/Payment_Type\";\nimport Availability from \"./NavItems/Availability\";\nimport Inquiry_Master from \"./NavItems/Inquiry_Master\";\nimport Inquiry_Master1 from \"./NavItems/Inquiry_Master1\";\nimport Booking from \"./NavItems/Booking\";\nimport Landloard_Management from \"./NavItems/Landlord_Management\";\nimport Quick_Media_Proposal from \"./NavItems/Quick_Media_Proposal\";\nimport Purchase_Order_Management from \"./NavItems/Purchase_Order_Management\";\nimport Flex_and_Vinyl_Management from \"./NavItems/Flex_and_Vnyl_Management\";\nimport MonitoringImages from \"./NavItems/MonitoringImages\";\nimport Login from \"./Login\";\nimport { ProtectedRoute } from '../protected.route';\nimport auth from '../auth';\nimport Availability_Master from \"./NavItems/Availability_Master\";\nimport Hoarding_Insurance1 from \"./NavItems/Hoarding_Insurance1\";\nimport Hoarding_Erection from \"./NavItems/Hoarding_Erection\";\nimport HoardingErrection from \"./NavItems/HoardingErrection\";\nimport Quick_Media from \"./NavItems/Quick_Media\";\n\n// import { MenuOpen } from \"@material-ui/icons\";\n\nconst Body = () => {\n  const [date, setDate] = useState(new Date());\n\n  function refreshClock() {\n    setDate(new Date());\n  }\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000);\n    return function cleanup() {\n      clearInterval(timerId);\n    };\n  }, []);\n  const history = useHistory();\n  const homeRedirect = () => {\n    history.push('/')\n  }\n\n  const [menu, setMenu] = useState(false);\n  const menu_toggle = () => {\n    let a = document.getElementById('sidebar');\n    let b = document.getElementById('main');\n    if (menu) {\n      a.style.display = 'none';\n      b.className = 'col-md-12 main';\n      setMenu(false);\n    } else {\n      a.style.display = 'block';\n      b.className = 'col-md-10 main';\n      setMenu(true);\n    }\n\n  }\n\n  return (\n    <div>\n      <div>\n        <header className=\"header\" id=\"header\" >\n          <GridMenuIcon onClick={menu_toggle} id='menu-btn' style={{ margin: '32px', color: 'black' }} />\n          <div className='adu'>\n            <h4 style={{ cursor: 'pointer', marginLeft: '10px', color: 'black' }} onClick={homeRedirect}>\n              BHARTI EXPO-ADS\n            </h4>\n          </div>\n          <div style={{ display: 'flex', width: '100%', flex: '1' }}>\n            <div className=\"text-black\">\n              <br />\n              <h4 style={{ textAlign: 'center' }}>\n                {date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })}\n              </h4>\n            </div>\n\n            <nav className=\"navbar navbar-dark navbar-expand-sm\" >\n\n\n              <div className=\"collapse navbar-collapse\" id=\"navbar-list-4\">\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\"\n                      id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                      aria-expanded=\"false\">\n                      <img src=\"https://www.w3schools.com/howto/img_avatar.png\" width=\"20\" height=\"20\"\n                        className=\"rounded-circle\" />\n                    </a>\n                    <div style={{ marginLeft: '260px' }} class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                      <a class=\"dropdown-item\" href=\"#\">Dashboard</a>\n                      <a class=\"dropdown-item\" href=\"#\">Edit Profile</a>\n                      <li className=\"nav-item\" onClick={() => {\n                        auth.logout(() => {\n                          history.push(\"/Login\");\n                        })\n                        console.log(localStorage.getItem(\"authenticated\"))\n                      }}>\n                        <Link className=\"dropdown-item\">\n                          Logout\n                        </Link>\n                      </li>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </div>\n        </header>\n      </div>\n      <div className='body1'>\n\n        <div className=\"sidenav\" id='sidebar'>\n          <Navbar menu_function={menu_toggle}/>\n        </div>\n        <div className=\" main\" id='main'>\n          <Switch>\n            <ProtectedRoute exact path='/hoarding-final' component={Login} />\n            <ProtectedRoute exact path='/' component={Dashboard} />\n            <ProtectedRoute exact path='/Employee_Master' component={Employee_Master} />\n            <ProtectedRoute exact path='/Labour_Master' component={Labour_Master} />\n            <ProtectedRoute exact path='/Location_Master' component={Location_Master} />\n            <ProtectedRoute exact path='/Customer_Master' component={Customer_Master} />\n            <ProtectedRoute exact path='/Media_Type_Master' component={Media_Type_Master} />\n            <ProtectedRoute exact path='/Size_Master' component={Size_Master} />\n            <ProtectedRoute exact path='/Inventory_Master' component={Inventory_Master} />\n            <ProtectedRoute exact path='/Industry_Master' component={Industry_Master} />\n            <ProtectedRoute exact path='/GST_Type_Master' component={GST_Type_Master} />\n            <ProtectedRoute exact path='/Labor_Category_Master' component={Labor_Category_Master} />\n            <ProtectedRoute exact path='/Payment_Type' component={Payment_Type} />\n            <ProtectedRoute exact path=\"/Availability\" component={Availability} />\n            <ProtectedRoute exact path=\"/Inquiry_Master\" component={Inquiry_Master} />\n            <ProtectedRoute exact path=\"/Inquiry_Master1\" component={Inquiry_Master1} />\n            <ProtectedRoute exact path=\"/Booking\" component={Booking} />\n            <ProtectedRoute exact path=\"/Landlord_Management\" component={Landloard_Management} />\n            <ProtectedRoute exact path=\"/Quick_Media_Proposal\" component={Quick_Media_Proposal} />\n            <ProtectedRoute exact path=\"/Purchase_Order_Management\" component={Purchase_Order_Management} />\n            <ProtectedRoute exact path=\"/Flex_and_Vinyl_Management\" component={Flex_and_Vinyl_Management} />\n            <ProtectedRoute exact path=\"/MonitoringImages\" component={MonitoringImages} />\n            <ProtectedRoute exact path=\"/Availability_Master\" component={Availability_Master} />\n            <ProtectedRoute exact path=\"/Hoarding_Insurance\" component={Hoarding_Insurance1} />\n            <ProtectedRoute exact path=\"/Hoarding_Erection\" component={Hoarding_Erection} />\n            <ProtectedRoute exact path=\"/Quick_Media\" component={Quick_Media} />\n            <ProtectedRoute exact path=\"/HoardingErrection\" component={HoardingErrection} />\n          </Switch>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Body;\n","import './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Body from './Components/Body';\n//import 'bootstrap/dist/css/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  split,\n  ApolloProvider\n} from \"@apollo/client\";\n\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport Login from './Components/Login';\n// import jsPDF from 'jspdf';\n\nconst wsLink = new WebSocketLink({\n  uri: 'wss://refined-stork-71.hasura.app/v1/graphql',\n  options: {\n    reconnect: true\n  }\n});\nconsole.log(wsLink);\nconst httpLink = new HttpLink({\n  uri: 'https://refined-stork-71.hasura.app/v1/graphql',\n  // headers: {\n  //   'x-hasura-access-key': 'YrlJbtD2GXzRiZk16RqL4AIAHwrI25nvzcUDAIPQlozRWw007jDGsro4mILTcmb6'\n  // }\n})\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <Switch>\n        <Route exact path=\"/Login\" component={Login} />\n          <Route path=\"/\"> <Body /></Route>\n        </Switch>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}