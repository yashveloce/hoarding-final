{"version":3,"sources":["Components/Navbar.js","Components/NavItems/Employee_Master.js","Components/NavItems/Location_Master.js","Components/NavItems/Customer_Master.js","Components/NavItems/Media_Type_Master.js","Components/NavItems/Size_Master.js","Components/NavItems/Industry_Master.js","Components/NavItems/GST_Type_Master.js","Components/NavItems/Labour_Master.js","Components/NavItems/Dashboard.js","Components/NavItems/Inventory_Master.js","Components/NavItems/Labor_Category_Master.js","Components/NavItems/Payment_Type.js","Components/NavItems/Availability.js","Components/NavItems/Inquiry_Master.js","Components/NavItems/Inquiry_Master1.js","Components/NavItems/Booking.js","Components/NavItems/Landlord_Management.js","Components/NavItems/Quick_Media_Proposal.js","Components/NavItems/Purchase_Order_Management.js","Components/NavItems/Flex_and_Vnyl_Management.js","Components/NavItems/MonitoringImages.js","auth.js","Components/Login.js","protected.route.js","Components/NavItems/Availability_Master.js","Components/NavItems/Hoarding_Insurance1.js","Components/NavItems/Hoarding_Erection.js","Components/NavItems/HoardingErrection.js","Components/NavItems/Quick_Media.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","color","nested","paddingLeft","spacing","Navbar","props","useState","selectedIndex","setSelectedIndex","handleListItemClick","event","index","window","matchMedia","matches","menu_function","classes","React","open1","setOpen1","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","localStorage","getItem","style","textAlign","marginTop","className","List","component","to","ListItem","selected","onClick","button","ListItemIcon","ListItemText","primary","fontStyle","backgroundColor","Collapse","in","timeout","unmountOnExit","disablePadding","GET_BANK","gql","INSERT_EMPLOYEE","UPDATE_EMPLOYEE","READ_EMPLOYEE","DELETE_EMPLOYEE","Read_Labour_Master","Employee_Master","showModal","setShow","handleClose","name","address","contact_no","email_id","bank_name","branch_name","ifsc_code","account_no","labour_category","employee","setEmployee","id","modalEmployee","setModalEmployee","useMutation","insert_employee","update_employee","delete_employee","bank_data","useQuery","read_labour","employee_data","useSubscription","loading","CircularProgress","onInputChange","e","target","value","onEdit","row","console","log","onModalInputChange","columns","field","headerName","valueGetter","params","labour_category_master","renderCell","title","marginLeft","type","confirm","variables","toast","configure","error","data","employee_master","rows","newData","map","item","push","sno","Modal","show","onHide","Header","Title","Body","onSubmit","preventDefault","warning","defaultValue","onChange","placeholder","pattern","maxlength","minlength","marginRight","borderColor","Footer","Button","variant","Card","margin","padding","background","boxShadow","borderRadius","success","required","height","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectiononChange","components","Toolbar","GridToolbar","GET_COUNTRY","GET_STATE","GET_CITY","INSERT_LOCATION","GET_LOCATION","UPDATE_LOCATION","DELETE_LOCATION","Location_Master","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","selectedDistrict","setSelectedDistrict","selectedTaluka","setSelectedTaluka","singleCountry","setSingleCountry","singleState","setSingleState","singleCity","setSingleCity","country","state","city","district","taluka","modalLocation","setModalLocation","editLocation","insert_location","update_location","delete_location","get_location","countryByCountry","stateByState","cityByCity","location_master","country_options","countries","states","cities","options","country_data","parseInt","fstate","filter","st","country_id","getOptionLabel","option","getOptionValue","state_data","fcity","ct","state_id","city_data","INSERT_CUSTOMER","READ_CUSTOMER","UPDATE_CUSTOMER","DELETE_CUSTOMER","Customer_Master","setName","contact_person","setContact_person","mobile_no","setMobile_no","setEmail_id","gst_no","setGst_no","pan","setPan","res_address","setRes_address","modalId","setModalId","modalName","setModalName","modalContact_person","setModalContact_person","modalMobile_no","setModalMobile_no","modalEmail_id","setModalEmail_id","modalGst_no","setModalGst_no","modalPan","setModalPan","modalRes_address","setModalRes_address","insert_customer","update_customer","delete_customer","read_customer","customer_master","getMedia_Type","DELETE_MEDIA","INSERT_MEDIA","UPDATE_MEDIA","Media_Type_Master","media_type","mediaType","setMediaType","modelMediaType","setModelMediaType","update_media","delete_media_type_master","getMedia","hide","editable","media_type_master","disableSelectionOnClick","getSize_MasterQuery","insert_size_MasterQuery","Delete_size_MasterQuery","UPDATE_SIZE","Franchise_Management","no_of_display","modalSize","setModalSize","insert_size_masterData","delete_size_masterData","update_size","getSize","size_master","onModalFormSubmit","getIndustry_master","insert_Industry_MasterQuery","delete_Industry_masterQuery","update_Industry_masterQuery","Industry_Master","handleShow","industry_type","ModalIndustry","setModalIndustry","insert_Industry","delete_Industry_masterData","update_Industry_masterData","getIndustry","industry_master","sl","GST_Type_Master","setId","cgst","sgst","igst","GST","setGST","updateGST","setUpdateGST","GST_MASTER_QUERY","GST_MASTER_Insertion","GST_MASTER_Update","GST_MASTER_Delete","Datatable","insertGSTMaster","updateGSTMaster","deleteGSTMaster","gst_master","editVehicle","deleteVehicle","LABOUR_MASTER_QUERY","LABOUR_MASTER_Insertion","LABOUR_MASTER_Update","LABOUR_MASTER_Delete","Labour_Master","labor_type","labour","setLabour","updateLabor","setUpdateLabor","insertLabourMaster","updateLabourMaster","deleteLabourMaster","labor_master","bank_master","Labour_Category","display","GET_INVENTORY","READ_INVENTORY","INSERT_INSURANCE","READ_INSURANCE","UPDATE_INSURANCE","DELETE_INSURANCE","Hoarding_Insurance","totalsq","total","modaltotalsq","modaltotal","setShowhide","modalInventory","setModalInventory","modalInsurance","setModalInsurance","modalFromDate","setModalFromDate","modalToDate","setModalToDate","update_insurance","read_inventory","read_insurance","useLazyQuery","get_inventory","ret_data","Inventory_Master","Location","hoarding_insurance","hoarding_insurance_to","Date","toISOString","split","inventory","insurance","from_date","to_date","getInventory_Master","Insert_Inventory","Read_Fabricator","delete_Inventory","UPDATE_Inventory","MEDIA_TYPE","Read_hoarding_erection","READ_GEOLOCATIONS","State","setState","District","setDistrict","Subdistrict","setSubdistrict","setLocation","Media_Type","setMedia_Type","Illumination","setIllumination","Width","setWidth","Height","setHeight","NoofDisplay","setNoofDisplay","Totalsqft","setTotalsqft","DisplayRatePM","setDisplayRatePM","OneTimePrintingCost","setOneTimePrintingCost","OneTimeMountingCost","setOneTimeMountingCost","Total","setTotal","AvailabilityFrom","setAvailabilityFrom","AvailabilityTo","setAvailabilityTo","DrpmRate","setDrpmRate","OtpcRate","setOtpcRate","OtmcRate","setOtmcRate","sethoarding_insurance","hoarding_insurance_from","sethoarding_insurance_from","sethoarding_insurance_to","Erection","setErection","Status","setStatus","ModalId","ModalState","setModalState","ModalDistrict","setModalDistrict","ModalSubdistrict","setModalSubdistrict","ModalLocation","ModalMedia_Type","setModalMedia_Type","ModalIllumination","setModalIllumination","ModalWidth","setModalWidth","ModalHeight","setModalHeight","ModalNoofDisplay","setModalNoofDisplay","ModalTotalsqft","setModalTotalsqft","ModalDisplayRatePM","setModalDisplayRatePM","ModalOneTimePrintingCost","setModalOneTimePrintingCost","ModalOneTimeMountingCost","setModalOneTimeMountingCost","ModalTotal","setModalTotal","ModalAvailabilityFrom","setModalAvailabilityFrom","ModalAvailabilityTo","setModalAvailabilityTo","ModalDrpmRate","setModalDrpmRate","ModalOtpcRate","setModalOtpcRate","ModalOtmcRate","setModalOtmcRate","Modalhoarding_insurance","setModalhoarding_insurance","Modalhoarding_insurance_from","setModalhoarding_insurance_from","Modalhoarding_insurance_to","setModalhoarding_insurance_to","ModalErection","setModalErection","ModalStatus","setModalStatus","onStateChange","onDistrictChange","district_data","onSubdistrictChange","subdistrict_data","Insert_InventorymasterData","delete_InventorymasterData","update_InventorymasterData","read_geolocations","getInventory","read_fabricator","read_hoarding_erection","toString","geo_locations","location_type","includes","currentElement","parent_id","find","op","modal_mdeia_type_data","label","modalIlluminationData","modaldrpm","modalotpc","modalotmc","hoarding_errection","erection","location","media_type_data","illumination_data","drpm","otpc","otmc","getLabour_Master","InsertLabour_Master","UpdateLabour_Master","Deletelabour_Master","Labour_Category_Master","modallabour","setmodallabour","Insert_labourmasterData","Update_labourmasterData","delete_labourmasterdata","getlabour_category_master","getPayment_master","InsertPayment_Master","UpdatePayment_Master","DeletePayment_Master","Payment_Type","payment_type","modalpayment","setmodalpayment","Insert_paymenttypeData","Update_paymenttypeData","delete_paymenttypeData","getpayment_type","getAVAILABILITY","DELETE_AVAILABILITY","INSERT_AVAILABILITY","UPDATE_AVAILABILITY","Availability","availability","setAvailability","modelAvailability","setModelAvailability","insert_availability","update_availability","delete_availability","getAvailability","READ_MEDIA","INSERT_INQUIRY","UPDATE_INQUIRY","DELETE_INQUIRY","READ_INQUIRY","SEARCH_INVENTORYALL","SEARCH_INVENTORY","READ_STATES","Inquiry_Master","setSelected","showhide","subdistrict","illumination","searchMediaType","setSearchMediaType","searchDate","setSearchDate","sol","setSol","number","setNumber","emailid","setEmailid","whatsappNumber","setWhatsappNumber","startDate","setStartDate","setMedia_type","status","modalSol","setModalSol","modalNumber","setModalNumber","modalEmailid","setModalEmailid","modalWhatsappNumber","setModalWhatsappNumber","modalStartDate","setModalStartDate","modalMedia_type","setModalMedia_type","modalStatus","insert_inquiry","update_inquiry","delete_inquiry","read_media","read_inquiry","loadInventory","read_states","loadInventoryAll","invData","whatsapp_number","start_date","inquiry_master","rows1","readonly","media","_gt","visibility","onSelectionModelChange","itm","i","length","SEARCH_QUICK_MEDIA","READ_LABOR","Read_Printer","Read_Mounter","Read_Electrician","Read_Designer","INSERT_BOOKING","READ_BOOKING","UPDATE_BOOKING","DELETE_BOOKING","UPDATE_INVENTORY","READ_QUICK_MEDIA","GET_DATA","UPDATE_BOOKING_ON_DELETE","Booking","setGet_data","shortlisted","setShortlisted","confirmation","setConfirmation","PO","setPO","designer","setDesigner","printer","setPrinter","mounter","setMounter","electrician","setElectrician","startDatePhoto","setStartDatePhoto","monitoringPhoto","setMonitoringPhoto","endDatePhoto","setEndDatePhoto","endDate","setEndDate","Booked","setBooked","modalShortlisted","setModalShortlisted","modalConfirmation","setModalConfirmation","modalPO","setModalPO","modalDesigner","setModalDesigner","modalPrinter","setModalPrinter","modalMounter","setModalMounter","modalElectrician","setModalElectrician","modalStartDatePhoto","setModalStartDatePhoto","modalMonitoringPhoto","setModalMonitoringPhoto","modalEndDatePhoto","setModalEndDatePhoto","update_inventory","insert_booking","update_booking","delete_booking","update_booking_on_delete","read_labor","read_booking","read_printer","read_electrician","read_mounter","read_designer","read_quick_media","onCompleted","get_return_data","search_quick_media","Shortlisted","Confirmation","Designer","Printer","Mounter","Electrician","Start_Date_Photo","End_Date_Photo","Monitoring_Photo","src","BookedBy","Booking_Calender","proposal_no","quick_media","user","newData1","labor","formData","FormData","append","files","axios","post","then","dataimage1","ids","selectedIDs","Set","selectedRowData","has","Sites","Start_Date","End_Date","getlandloard_Master","Insertlanloard_Master","Updatelandloard_Master","Deletelandloard_Master","Landloard_Management","mobile_number","ifsc","rent_amount","site_address","agreement_from","agreement_to","rent_increment_reminder","landloard","setlandloard","modallandloard","setModallandloard","Insert_landloardmanagementData","update_landloardmanagementData","delete_landloardmanagementData","getlandloard_management","landlord_management","READ_COUNTRIES","READ_CITIES","setCountry","setCity","read_countries","read_cities","City_Village","Country","Taluka","getPurchase_Master","InsertPurchase_Master","UpdatePurchase_Master","DeletePurchase_Master","SEARCH_BOOKING","GET_BOOKING_DATA","Purchase_Order_Management","get_data","searchField","setSearchField","billing_name","billing_address","booking_number","purchase_order_date","campaign_name","quotation_number","gst_details","company_pan","payment_terms","purchase","setpurchase","modalpurchase","setModalpurchase","insertpurchasedata","updatepurchasedata","deletepurchasedata","getBookingData","getpurchase_order","purchase_order","undefined","booking","getFlex_Master","InsertFlex_Master","deleteFlex_Master","updateFlex_Master","Flex_and_Vinyl_Management","setMedia","designer_selection","designer_payment","printer_selection","printer_payment","mounter_selection","mounter_payment","flex","setflex","Modalflex","setModalflex","Insert_flexinsertData","delete_flexdeleteData","update_flexupdateData","getflex_vinyl_management","flex_vinyl_management","READ_MONITORING","INSERT_MONITORING","UPDATE_MONITORING","DELETE_MONITORING","MonitoringImages","brand_name","clients_name","date","geo_location","upload_image","monitoring","setMONITORING","modalMONITORING","setModalMONITORING","insert_monitoring","update_monitoring","delete_monitoring","monitoring_data","monitoring_images","cb","setItem","clear","LOGIN_MUTATION","Login","history","useHistory","username","password","role","formState","setFormState","class","alt","Array","isArray","User","auth","login","FormSubmit","for","paddingRight","ProtectedRoute","Component","rest","render","pathname","from","Availability_Master","Hoarding_Insurance1","setFilteredData","setInventory","setInsurance","insuranceFrom","setInsuranceFrom","insuranceTo","setInsuranceTo","searchInventory","searchInventoryData","filteredInventory","READ_HOARDING","INSERT_HOARDING","UPDATE_HOARDING","DELETE_HOARDING","READ_ELECTRICIAN","READ_CIVIL_CONTRACTOR","READ_EXCAVATOR","HoardingErrection","payment","permission","excavator","excavator_charges","civil_contractor","civil_material","civil_contractor_labour_payment","fabrication_material","fabricator_labour_payment","transport_charges","electrician_selection","electric_material_purchase","electrician_labour_payment","fabricator","hoarding","setHOARDING","modalHOARDING","setModalHOARDING","insert_hoarding","update_hoarding","delete_hoarding","read_excavator","read_civil_contractor","hoarding_data","laborMasterByExcavator","laborMasterByElectricianSelection","INSERT_QUICK_MEDIA","DELETE_QUICK_MEDIA","READ_QUICK","SEARCH_INQUIRY","GET_MOBILE","Quick_Media","delete_quick_media","insert_quick_media","search_inquiry","return_inquiry","get_mobile","mobile_no_exists","read_quick","columns1","at","counter","counter_proposal","inquiry","setDate","refreshClock","useEffect","timerId","setInterval","clearInterval","menu","setMenu","menu_toggle","a","document","getElementById","b","cursor","toLocaleTimeString","hour","minute","second","href","logout","exact","path","Dashboard","Size_Master","Labor_Category_Master","Inquiry_Master1","Quick_Media_Proposal","Hoarding_Erection","wsLink","WebSocketLink","uri","reconnect","httpLink","HttpLink","splitLink","query","definition","getMainDefinition","kind","operation","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.682930af.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n// import ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import DraftsIcon from '@material-ui/icons/Drafts';\n// import SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n// import StarBorder from '@material-ui/icons/StarBorder';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n// import GroupIcon from '@material-ui/icons/Group';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport BuildIcon from '@mui/icons-material/Build';\nimport InventoryIcon from '@mui/icons-material/Inventory';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AspectRatioIcon from '@mui/icons-material/AspectRatio';\n// import PinDropIcon from '@material-ui/icons/PinDrop';\nimport { Link } from 'react-router-dom';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AcUnitIcon from '@mui/icons-material/AcUnit';\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport PaymentsIcon from '@mui/icons-material/Payments';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\nimport BookIcon from '@mui/icons-material/Book';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport ApartmentIcon from '@mui/icons-material/Apartment';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport MonitorIcon from '@mui/icons-material/Monitor';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    color: 'black',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nexport default function Navbar(props) {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    if(window.matchMedia(\"(max-width:426px)\").matches)\n    {\n      props.menu_function();\n    }\n  };\n\n  const classes = useStyles();\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n  const [open4, setOpen4] = React.useState(false);\n  const [open5, setOpen5] = React.useState(false);\n  const [open6, setOpen6] = React.useState(false);\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n  const handleClick3 = () => {\n    setOpen3(!open3);\n  };\n  const handleClick4 = () => {\n    setOpen4(!open4);\n  };\n  const handleClick5 = () => {\n    setOpen5(!open5);\n  };\n  const handleClick6 = () => {\n    setOpen6(!open6);\n  };\n  const role = localStorage.getItem(\"userrole\");\n  if (role === \"admin\") {\n    return (\n      <>\n        <h6 style={{ textAlign: 'center', marginTop: '15px', color: 'Black' }} className=\"admin-nav\" >ADMIN</h6>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          className={classes.root}\n        >\n          {/* Dashboard */}\n          <Link to='/'>\n            <ListItem\n              selected={selectedIndex === 0}\n              onClick={(event) => handleListItemClick(event, 0)}\n              style={{ color: 'White' }}\n              button>\n              <DashboardIcon />\n              <ListItemIcon style={{ color: 'white' }}>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" className='menu-item-color' style={{ fontStyle: 'bold' }} />\n\n            </ListItem>\n          </Link>\n\n          {/* Master Creation */}\n\n          <ListItem button onClick={handleClick1} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon style={{ color: 'white' }}>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Master Creation\" className='menu-item-color' />\n            {open1 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {/* Employee Master */}\n              <Link to='/Employee_Master' >\n                <ListItem\n                  selected={selectedIndex === 1}\n                  onClick={(event) => handleListItemClick(event, 1)}\n                  button className={classes.nested}>\n                  <ListItemIcon>\n                    <FlagIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Employee Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labour Master */}\n              <Link to='/Labour_Master' >\n                <ListItem\n                  selected={selectedIndex === 2}\n                  onClick={(event) => handleListItemClick(event, 2)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <BuildIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Labour Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Location Master */}\n              {/* <Link to='/Location_Master' >\n  \n                <ListItem\n                  selected={selectedIndex === 3}\n                  onClick={(event) => handleListItemClick(event, 3)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <PinDropIcon style={{color:'white'}} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Location Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Customer Master */}\n              <Link to='/Customer_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 4}\n                  onClick={(event) => handleListItemClick(event, 4)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    < PersonIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Customer Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Media Type Master */}\n              <Link to='/Media_Type_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 5}\n                  onClick={(event) => handleListItemClick(event, 5)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <StarBorder style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Media Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Size Master */}\n              {/* <Link to='/Size_Master' >\n  \n                <ListItem\n                  selected={selectedIndex === 6}\n                  onClick={(event) => handleListItemClick(event, 6)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AspectRatioIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Size Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Hoarding Insurance */}\n              <Link to='/Hoarding_Insurance' >\n                <ListItem\n                  selected={selectedIndex === 6}\n                  onClick={(event) => handleListItemClick(event, 6)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <MonitorIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Hoarding Insurance\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Hoarding Erection */}\n              <Link to='/HoardingErrection' >\n                <ListItem\n                  selected={selectedIndex === 7}\n                  onClick={(event) => handleListItemClick(event, 7)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <MonitorIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Hoarding Erection\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n\n              {/* GST Type Master */}\n              <Link to='/Inventory_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 9}\n                  onClick={(event) => handleListItemClick(event, 9)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <InventoryIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Inventory Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Industry Master */}\n              <Link to='/Industry_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 8}\n                  onClick={(event) => handleListItemClick(event, 8)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <LocationCityIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Industry Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* GST Type Master */}\n              <Link to='/GST_Type_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 10}\n                  onClick={(event) => handleListItemClick(event, 10)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccountBalanceIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"GST Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labor Category Type Master */}\n              <Link to='/Labor_Category_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 11}\n                  onClick={(event) => handleListItemClick(event, 11)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AcUnitIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Labor Category Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labor Category Type Master */}\n              <Link to='/Payment_Type' >\n                <ListItem\n                  selected={selectedIndex === 12}\n                  onClick={(event) => handleListItemClick(event, 12)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <PaymentsIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Payment Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Availability Master */}\n              {/* <Link to='/Availability_Master' >\n                <ListItem\n                  selected={selectedIndex === 7}\n                  onClick={(event) => handleListItemClick(event, 7)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccessibilityIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Availability Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Availability Master */}\n              {/* <Link to='/Availability' >\n                <ListItem\n                  selected={selectedIndex === 12}\n                  onClick={(event) => handleListItemClick(event, 13)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccessibilityIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Availability Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n\n            </List>\n          </Collapse>\n          {/* Landlord Management */}\n\n          <ListItem button onClick={handleClick2} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Landlord Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n            {/* Landlord Management */}\n            <Link to='/Landlord_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AccessibilityIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Landlord Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Planning */}\n          <ListItem button onClick={handleClick3} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Planning\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open3} timeout=\"auto\" unmountOnExit>\n            {/* Inquiry Master */}\n            <Link to='/Inquiry_Master' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AddIcCallIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Inquiry\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n            {/* Quick Media Proposal */}\n            {/* <Link to='/Quick_Media_Proposal' >\n                <ListItem\n                  selected={selectedIndex === 2}\n                  onClick={(event) => handleListItemClick(event, 2)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AssessmentIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Quick Media Proposal\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n            {/* Quick Proposal */}\n            <Link to='/Quick_Media' >\n              <ListItem\n                selected={selectedIndex === 2}\n                onClick={(event) => handleListItemClick(event, 2)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AssessmentIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Quick Media\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n            {/* Booking */}\n            <Link to='/Booking' >\n              <ListItem\n                selected={selectedIndex === 3}\n                onClick={(event) => handleListItemClick(event, 3)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <BookIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Booking\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n          {/* Purchase Order Management */}\n\n          <ListItem button onClick={handleClick4} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Purchase Order Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open4} timeout=\"auto\" unmountOnExit>\n            {/* Purchase Order Management */}\n            <Link to='/Purchase_Order_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <ApartmentIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Purchase Order Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Flex And Vnyl Management */}\n\n          <ListItem button onClick={handleClick5} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Flex And Vinyl Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open5} timeout=\"auto\" unmountOnExit>\n            {/* Flex And Vnyl Management */}\n            <Link to='/Flex_and_Vinyl_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AddBoxIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Flex And Vinyl Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Flex And Vnyl Management */}\n\n          <ListItem button onClick={handleClick6} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Monitoring Images\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open6} timeout=\"auto\" unmountOnExit>\n            {/* Monitoring Images */}\n            <Link to='/MonitoringImages' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <MonitorIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Monitoring Images\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n\n\n\n        </List>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <h6 style={{ textAlign: 'center', marginTop: '15px', color: 'Black' }} className=\"admin-nav\" >SUPER ADMIN</h6>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          className={classes.root}\n        >\n          {/* Dashboard */}\n          <Link to='/'>\n            <ListItem\n              selected={selectedIndex === 0}\n              onClick={(event) => handleListItemClick(event, 0)}\n              style={{ color: 'White' }}\n              button>\n              <DashboardIcon />\n              <ListItemIcon style={{ color: 'white' }}>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" className='menu-item-color' style={{ fontStyle: 'bold' }} />\n\n            </ListItem>\n          </Link>\n        </List>\n      </>\n    )\n  }\n}\n\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst GET_BANK = gql`\nquery MyQuery {\n    bank_master {\n      id\n      ifsc_code\n      branch_name\n      bank_name\n      account_no\n    }\n  }  \n`\nconst INSERT_EMPLOYEE = gql`\nmutation MyMutation($address: String = \"\", $contact_no: String = \"\", $email_id: String = \"\", $name: String = \"\",$bank_name:String!,$branch_name:String!,$ifsc_code:String!,$account_no:String!,$labour_category:Int!) {\n    insert_employee_master_one(object: {address: $address, contact_no: $contact_no, email_id: $email_id, name: $name,bank_name:$bank_name,branch_name:$branch_name,ifsc_code:$ifsc_code,account_no:$account_no,labour_category:$labour_category}) {\n      id\n    }\n  }\n`\nconst UPDATE_EMPLOYEE = gql`\nmutation MyMutation($id: Int = 0, $address: String = \"\" $contact_no: String = \"\", $email_id: String = \"\", $name: String = \"\",$bank_name:String!,$branch_name:String!,$ifsc_code:String!,$account_no:String!,$labour_category:Int!) {\n    update_employee_master_by_pk(pk_columns: {id: $id}, _set: {address: $address, contact_no: $contact_no, email_id: $email_id, name: $name,bank_name:$bank_name,branch_name:$branch_name,ifsc_code:$ifsc_code,account_no:$account_no,labour_category:$labour_category}) {\n      address\n      bank_name\n      branch_name\n      ifsc_code\n      account_no\n      contact_no\n      email_id\n      id\n      name\n    }\n  }\n`\n\nconst READ_EMPLOYEE = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    employee_master(where: {isDeleted: {_eq: $_eq}}){\n      account_no\n      address\n      bank_name\n      branch_name\n      contact_no\n      email_id\n      id\n      ifsc_code\n      isDeleted\n      labour_category\n      labour_category_master {\n        isDeleted\n        labour_category\n        id\n      }\n      name\n    }\n  }\n  \n`\n// const DELETE_EMPLOYEE = gql`\n// mutation MyMutation($id: Int!) {\n//     delete_employee_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n// `\n\nconst DELETE_EMPLOYEE = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_employee_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\nconst Read_Labour_Master = gql`\nquery MyQuery($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n`\n\nexport default function Employee_Master() {\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [employee, setEmployee] = useState({\n        name: '',\n        address: '',\n        contact_no: '',\n        email_id: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc_code: '',\n        account_no: '',\n        labour_category: ''\n    });\n    const [modalEmployee, setModalEmployee] = useState({\n        id: '',\n        name: '',\n        address: '',\n        contact_no: '',\n        email_id: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc_code: '',\n        account_no: '',\n        labour_category: ''\n    });\n    const [insert_employee, insert_data] = useMutation(INSERT_EMPLOYEE);\n    const [update_employee, update_data] = useMutation(UPDATE_EMPLOYEE);\n    const [delete_employee, delete_data] = useMutation(DELETE_EMPLOYEE);\n    const bank_data = useQuery(GET_BANK);\n    const read_labour = useQuery(Read_Labour_Master);\n    const employee_data = useSubscription(READ_EMPLOYEE);\n    if (bank_data.loading || employee_data.loading || read_labour.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n\n\n\n    const onInputChange = (e) => {\n        //console.log(e.target.name);\n        setEmployee({ ...employee, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        console.log(employee);\n        e.preventDefault();\n        insert_employee({ variables: employee })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalEmployee({\n            id: row.id,\n            name: row.name,\n            address: row.address,\n            contact_no: row.contact_no,\n            email_id: row.email_id,\n            bank_name: row.bank_name,\n            branch_name: row.branch_name,\n            ifsc_code: row.ifsc_code,\n            account_no: row.account_no,\n            labour_category: row.labour_category\n        })\n        console.log(modalEmployee);\n    }\n    // const onModalFormSubmit=(e)=>{\n    //     e.preventDefault();\n    //     update_employee({variables:{id:modalEmployee.id,name:modalEmployee.name,address:modalEmployee.address,email_id:modalEmployee.email_id,contact_no:modalEmployee.contact_no,bank_id:modalEmployee.bank_id}})\n\n    // }\n    const onModalInputChange = (e) => {\n        setModalEmployee({ ...modalEmployee, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_employee({ variables: modalEmployee })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_employee({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n        {\n            field: 'address',\n            headerName: 'Address',\n            width: 190\n        },\n        {\n            field: 'contact_no',\n            headerName: 'Contact Number',\n            width: 190\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email ID',\n            width: 250\n        },\n        {\n            field: 'labour_category',\n            headerName: 'Labour Category',\n            width: 250,\n            valueGetter: (params) => {\n                return params.row.labour_category_master.labour_category;\n            }\n        },\n        // {\n        //     field: 'bank_id',\n        //     headerName: 'Bank Details',\n        //     width: 160,\n        //     valueGetter: (params) => {\n        //         return params.row.bank_master.bank_name;\n        //     }\n        // },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name',\n            width: 160\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name',\n            width: 180\n        },\n        {\n            field: 'ifsc_code',\n            headerName: 'IFSC',\n            width: 110\n        },\n        {\n            field: 'account_no',\n            headerName: 'Account Number',\n            width: 190\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    console.log(employee_data.data.employee_master);\n    const rows = employee_data.data.employee_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Employee</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalEmployee.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Name</label>\n                                <input defaultValue={modalEmployee.name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Address</label>\n                                <input defaultValue={modalEmployee.address} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"address\" type=\"text\" placeholder=\"enter address\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Contact Number</label>\n                                <input defaultValue={modalEmployee.contact_no} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"contact_no\" type=\"tel\" placeholder=\"enter contact number\" pattern=\"[789][0-9]{9}\" title=\"Please enter valid contact number\" />\n                            </div>\n                        </div>\n                        {/* <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Labour Category</label>\n                                <select defaultValue={modalEmployee.labour_category} onChange={onInputChange} type=\"text\" name=\"labour_category\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                    <option>--SELECT--</option>\n                                    {read_labour.data.labour_category_master.map(Labour_Category => (\n                                        <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div> */}\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Email ID</label>\n                                <input defaultValue={modalEmployee.email_id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"email_id\" type=\"text\" placeholder=\"enter email id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Bank Name</label>\n                                {/* <select defaultValue={modalEmployee.bank_id} className=\"form-control\" onChange={onModalInputChange} name=\"bank_id\" placeholder=\"enter bank details\">\n                                    <option>--SELECT--</option>\n                                    {bank_data.data.bank_master.map(bank => (\n                                        <option value={bank.id} key={bank.id}>{bank.bank_name}</option>\n                                    ))}\n                                </select> */}\n                                <input type=\"text\" defaultValue={modalEmployee.bank_name} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"bank_name\" placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Branch Name</label>\n                                <input type=\"text\" defaultValue={modalEmployee.branch_name} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"branch_name\" placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div><br />\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">IFSC</label>\n                                <input type=\"text\" maxlength=\"11\" minlength=\"11\" defaultValue={modalEmployee.ifsc_code} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"ifsc_code\" placeholder=\"enter ifsc\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Account number</label>\n                                <input type=\"text\" defaultValue={modalEmployee.account_no} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"account_no\" placeholder=\"enter account number\" />\n                            </div>\n                        </div><br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        </div>\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">EMPLOYEE MASTER</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Name</label>\n                            <input type=\"text\" name=\"name\" onChange={onInputChange} className=\"form-control mt-1\" required placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Address</label>\n                            <input type=\"text\" name=\"address\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Contact Number</label>\n                            <input type=\"tel\" name=\"contact_no\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter contact number\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid contact number\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input type=\"email\" name=\"email_id\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter email id\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                        </div>\n                    </div><br />\n                    {/* <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Labour Category</label>\n                            <select onChange={onInputChange} type=\"text\" name=\"labour_category\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                <option>--SELECT--</option>\n                                {read_labour.data.labour_category_master.map(Labour_Category => (\n                                    <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br /> */}\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Bank Name</label>\n                            {/* <select name=\"bank_id\" className=\"form-select\" onChange={onInputChange} placeholder=\"enter bank details\" required>\n                                <option>--SELECT--</option>\n                                {bank_data.data.bank_master.map(bank => (\n                                    <option value={bank.id} key={bank.id}>{bank.bank_name}</option>\n                                ))}\n                            </select> */}\n                            <input type=\"text\" name=\"bank_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Branch Name</label>\n                            <input type=\"text\" name=\"branch_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\"><br />\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">IFSC </label>\n                            <input type=\"text\" maxlength=\"11\" minlength=\"11\" name=\"ifsc_code\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter ifsc\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Account Number</label>\n                            <input type=\"number\" name=\"account_no\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter account number\" required />\n                        </div>\n                    </div>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst GET_COUNTRY = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n    states {\n      id\n      country_id\n      name\n    }\n    cities {\n        id\n        name\n        state_id\n      }\n  }  \n`\nconst GET_STATE = gql`\nquery MyQuery {\n    states {\n      id\n      country_id\n      name\n    }\n  } \n`\nconst GET_CITY = gql`\nquery MyQuery {\n    cities {\n      id\n      name\n      state_id\n    }\n  }\n`\nconst INSERT_LOCATION = gql`\nmutation MyMutation($city: Int = 0, $country: Int = 0, $district: String = \"\", $state: Int = 0, $taluka: String = \"\") {\n    insert_location_master_one(object: {city: $city, country: $country, district: $district, state: $state, taluka: $taluka}) {\n      id\n    }\n  }\n`\n// const INSERT_TALUKA = gql`\n// mutation MyMutation($name: String! ,$cities_id: Int!) {\n//     insert_taluka_one(object: {name: $name, cities_id: $cities_id}) {\n//       cities_id\n//       id\n//       name\n//     }\n//   }\n// `\n\n// const INSERT_DISTRICT = gql`\n// mutation MyMutation($cities_id: Int!, $name: String!) {\n//     insert_district_one(object: {name: $name, cities_id: $cities_id}) {\n//       id\n//     }\n//   }\n  \n// `\n\nconst GET_LOCATION = gql`\nsubscription MySubscription {\n    location_master {\n      city\n      cityByCity {\n        id\n        name\n      }\n      country\n      countryByCountry {\n        id\n        name\n      }\n      district\n      id\n      state\n      stateByState {\n        id\n        name\n      }\n      taluka\n    }\n  }   \n`\nconst UPDATE_LOCATION = gql`\nmutation MyMutation($id: Int=0, $city: Int = 0, $country: Int = 0, $district: String = \"\", $state: Int = 0, $taluka: String = \"\") {\n    update_location_master_by_pk(pk_columns: {id: $id}, _set: {city: $city, country: $country, district: $district, state: $state, taluka: $taluka}) {\n      city\n      country\n      district\n      id\n      state\n      taluka\n    }\n  }\n`\nconst DELETE_LOCATION = gql`\nmutation MyMutation($id: Int = 0) {\n    delete_location_master_by_pk(id: $id) {\n      id\n    }\n  }\n  \n`\n\nexport default function Location_Master() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [selectedCountry, setSelectedCountry] = useState();\n    const [selectedState, setSelectedState] = useState();\n    const [selectedCity, setSelectedCity] = useState();\n    const [selectedDistrict, setSelectedDistrict] = useState();\n    const [selectedTaluka, setSelectedTaluka] = useState();\n    const [singleCountry, setSingleCountry] = useState();\n    const [singleState, setSingleState] = useState();\n    const [singleCity, setSingleCity] = useState();\n    const [modalLocation, setModalLocation] = useState({\n        id: '',\n        country: '',\n        state: '',\n        city: '',\n        district: '',\n        taluka: '',\n    });\n    const onCountryChange = (country_data) => {\n        console.log(country_data.id);\n        setSingleCountry(country_data.id);\n        setSelectedCountry(parseInt(country_data.id));\n        console.log(country_data.id) \n        const fstate = state.data.states.filter(function (st) {\n            return st.country_id === parseInt(country_data.id);\n        })\n        setSelectedState(fstate);\n        console.log(selectedState);\n    }\n    const onStateChange = (state_data) => {\n        console.log(state_data.id)\n        setSingleState(state_data.id);\n        const fcity = city.data.cities.filter(function (ct) {\n            return ct.state_id === parseInt(state_data.id);\n        })\n        setSelectedCity(fcity);\n        console.log(selectedCity)\n        console.log(fcity);\n    }\n    const onCityChange = (city_data)=>{\n        console.log(city_data.id);\n        setSingleCity(city_data.id)\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e);\n        insert_location({ variables: { country: singleCountry, state: singleState, city: singleCity, district: selectedDistrict, taluka:selectedTaluka } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n    const editLocation = (row) => {\n        setModalLocation({\n            id: row.id,\n            country: row.country,\n            state: row.state,\n            city: row.city,\n            district: row.district,\n            taluka: row.taluka\n        })\n        handleShow();\n        //console.log(modalIndustry);\n    }\n    const onModalInputChange = (e) => {\n        setModalLocation({ ...modalLocation, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_location({ variables: { id: modalLocation.id, country: modalLocation.country, state: modalLocation.state, city: modalLocation.city, district: modalLocation.district, taluka: modalLocation.taluka } })\n        toast.configure();\n        toast.warning('Successfully Updated')\n        handleClose();\n    }\n    const delete_location_data = (id) => {\n        delete_location({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    //Queries\n    const [insert_location, insert_data] = useMutation(INSERT_LOCATION)\n    // const [insert_taluka, insert_taluka_data] = useMutation(INSERT_TALUKA)\n    // const [insert_district, insert_district_data] = useMutation(INSERT_DISTRICT)\n    const [update_location, update_data] = useMutation(UPDATE_LOCATION)\n    const [delete_location, delete_data] = useMutation(DELETE_LOCATION)\n    const country = useQuery(GET_COUNTRY);\n    const state = useQuery(GET_STATE);\n    const city = useQuery(GET_CITY);\n    const get_location = useSubscription(GET_LOCATION);\n    if (country.loading || state.loading || city.loading || get_location.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.countryByCountry.name;\n            }\n        },\n        {\n            field: 'state',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.stateByState.name;\n            }\n        },\n        {\n            field: 'district',\n            headerName: 'District',\n            width: 160,\n        },\n        {\n            field: 'taluka',\n            headerName: 'Taluka',\n            width: 160,\n        },\n        {\n            field: 'city',\n            headerName: 'City',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.cityByCity.name;\n            }\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 190,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => { editLocation(params.row) }} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                delete_location_data(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n\n    ];\n    const rows = get_location.data.location_master;\n    const country_options = country.data.countries;\n    const state_options = state.data.states;\n    const city_options = city.data.cities;\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Location</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                \n                        <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalLocation.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Country</label>\n                                {/* <input defaultValue={modalLocation.country} onChange={onModalInputChange} className=\"form-control\" name=\"country\" type=\"text\" /> */}\n                                <select className=\"form-control mt-1\" name=\"country\" defaultValue={modalLocation.country} onChange={onModalInputChange} required>\n                                    <option>--SELECT--</option>\n                                    {country.data.countries.map(country => (\n                                        <option key={country.id} value={country.id}>{country.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">State</label>\n                                {/* <input defaultValue={modalLocation.state} onChange={onModalInputChange} className=\"form-control\" name=\"state\" type=\"text\" /> */}\n                                <select defaultValue={modalLocation.state} onChange={onModalInputChange} name=\"state\" className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {country.data.states.map(state => (\n                                        <option key={state.id} value={state.id}>{state.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">City</label>\n                                {/* <input defaultValue={modalLocation.city} onChange={onModalInputChange} className=\"form-control\" name=\"city\" type=\"text\" /> */}\n                                <select defaultValue={modalLocation.city} onChange={onModalInputChange} className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {country.data.cities.map(city => (\n                                        <option key={city.id} value={city.id}>{city.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">District</label>\n                                <input defaultValue={modalLocation.district} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"district\" type=\"text\" required  pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\"/>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Taluka</label>\n                                <input defaultValue={modalLocation.taluka} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"taluka\" type=\"text\" required  pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\"/>\n                            </div>\n                            </div><br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n                    \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <br/><h4 className=\"text-center\">LOCATION MASTER</h4>\n<br/>\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Country</label>\n                            {/* <select onChange={onCountryChange} name=\"country\" className=\"form-select  mt-1\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {country.data.countries.map(country => (\n                                    <option key={country.id} value={country.id}>{country.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"country\"\n                                options={country_options}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">State</label>\n                            {/* <select onChange={onStateChange} name=\"state\" className=\"form-select  mt-1\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {selectedState === undefined ? '' : selectedState.map(state => (\n                                    <option key={state.id} value={state.id}>{state.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"state\"\n                                options={selectedState}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"field col-md-6 \">\n                            <label className=\"required\">City</label>\n                            {/* <select className=\"form-select mt-1\" name=\"city\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {selectedCity === undefined ? '' : selectedCity.map(city => (\n                                    <option key={city.id} value={city.id}>{city.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"state\"\n                                options={selectedCity}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                        <div className=\"field col-md-6 \">\n                            <label className=\"required\">District</label>\n                            <input onChange={(e) => { setSelectedDistrict(e.target.value) }} type=\"text\" name=\"district\" className=\"form-control mt-1\" placeholder=\"enter district\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Taluka</label>\n                            <input onChange={(e) => { setSelectedTaluka(e.target.value) }} type=\"text\" name=\"taluka\" className=\"form-control mt-1\" placeholder=\"enter taluka\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div>\n                    <br/>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br/>\n                        <br/>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                    </div>\n                </form>\n            </Card>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst INSERT_CUSTOMER = gql`\nmutation MyMutation( $contact_person: String = \"\", $email_id: String = \"\", $gst_no: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\", $res_address: String = \"\") {\n    insert_customer_master_one(object: {contact_person: $contact_person, email_id: $email_id, gst_no: $gst_no, mobile_no: $mobile_no, name: $name, pan: $pan, res_address: $res_address}) {\n      id\n    }\n  }  \n`\nconst READ_CUSTOMER = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    customer_master(where: {isDeleted: {_eq: $_eq}}){ \n      contact_person\n      email_id\n      gst_no\n      id\n      mobile_no\n      name\n      pan\n      res_address\n    }\n  }\n  \n`\nconst UPDATE_CUSTOMER = gql`\nmutation MyMutation($id: Int = 10, $contact_person: String = \"\",  $email_id: String = \"\", $gst_no: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\", $res_address: String = \"\") {\n    update_customer_master_by_pk(pk_columns: {id: $id}, _set: {cities: $cities, contact_person: $contact_person, email_id: $email_id, gst_no: $gst_no, mobile_no: $mobile_no, name: $name, pan: $pan, res_address: $res_address}) {\n      id\n    }\n  }\n  \n`\n\n// const DELETE_CUSTOMER = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_customer_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n  \n// `\n\nconst DELETE_CUSTOMER = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_customer_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\nconst READ_LOCATION = gql`\nquery MyQuery {\n    location_master{\n      city\n      country\n      id\n      state\n      taluka\n      district\n      cityByCity {\n        id\n        name\n        state_id\n      }\n      countryByCountry {\n        id\n        name\n        phonecode\n        sortname\n      }\n      stateByState {\n        country_id\n        id\n        name\n      }\n    }\n  }  \n`\n\n\n\n\n\n\nexport default function Customer_Master() {\n    const [customValidity, setCustomValidity] = useState();\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [name, setName] = useState();\n    const [contact_person, setContact_person] = useState();\n    const [mobile_no, setMobile_no] = useState();\n    const [email_id, setEmail_id] = useState();\n    const [gst_no, setGst_no] = useState();\n    const [pan, setPan] = useState();\n    const [res_address, setRes_address] = useState();\n    \n\n    const [modalId, setModalId] = useState();\n    const [modalName, setModalName] = useState();\n    const [modalContact_person, setModalContact_person] = useState();\n    const [modalMobile_no, setModalMobile_no] = useState();\n    const [modalEmail_id, setModalEmail_id] = useState();\n    const [modalGst_no, setModalGst_no] = useState();\n    const [modalPan, setModalPan] = useState();\n    const [modalRes_address, setModalRes_address] = useState();\n    \n\n    //Queries\n    const [insert_customer] = useMutation(INSERT_CUSTOMER);\n    const [update_customer] = useMutation(UPDATE_CUSTOMER);\n    const [delete_customer] = useMutation(DELETE_CUSTOMER);\n    const read_customer = useSubscription(READ_CUSTOMER);\n    //Loader\n    if (read_customer.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    // const onInputChange = (e) => {\n    //     setCustomer({ ...customer, [e.target.name]: e.target.value });\n    // }\n    const onNameChange = (e) => {\n        setName(e.target.value);\n    }\n    const onContact_personChange = (e) => {\n        setContact_person(e.target.value);\n    }\n    const onMobile_noChange = (e) => {\n        setMobile_no(e.target.value);\n    }\n    const onEmail_idChange = (e) => {\n        setEmail_id(e.target.value);\n    }\n    const onGst_noChange = (e) => {\n        setGst_no(e.target.value);\n    }\n    const onPanChange = (e) => {\n        setPan(e.target.value);\n    }\n    \n    const onRes_addressChange = (e) => {\n        setRes_address(e.target.value);\n    }\n    //Modal Form Data\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value);\n    }\n    const onModalNameChange = (e) => {\n        setModalName(e.target.value);\n    }\n    const onModalContact_personChange = (e) => {\n        setModalContact_person(e.target.value);\n    }\n    const onModalMobile_noChange = (e) => {\n        setModalMobile_no(e.target.value);\n    }\n    const onModalEmail_idChange = (e) => {\n        setModalEmail_id(e.target.value);\n    }\n    const onModalGst_noChange = (e) => {\n        setModalGst_no(e.target.value);\n    }\n    const onModalPanChange = (e) => {\n        setModalPan(e.target.value);\n    }\n    \n    const onModalRes_addressChange = (e) => {\n        setModalRes_address(e.target.value);\n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(customer);\n        insert_customer({ variables: { name: name, res_address: res_address, contact_person: contact_person, mobile_no: mobile_no, email_id: email_id, gst_no: gst_no, pan: pan } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalId(row.id)\n        setModalName(row.name)\n        setModalContact_person(row.contact_person)\n        setModalMobile_no(row.mobile_no)\n        setModalEmail_id(row.email_id)\n        setModalGst_no(row.gst_no)\n        setModalPan(row.pan)\n        setModalRes_address(row.res_address)\n    }\n    // const onModalInputChange = (e) => {\n    //     setModalCustomer({ ...modalCustomer, [e.target.name]: e.target.value })\n    // }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_customer({ variables: { id: modalId, name: modalName, res_address: modalRes_address, contact_person: modalContact_person, mobile_no: modalMobile_no, email_id: modalEmail_id, gst_no: modalGst_no, pan: modalPan } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_customer({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n        \n        {\n            field: 'mobile_no',\n            headerName: 'Mobile Number',\n            width: 190\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email ID',\n            width: 160\n        },\n        {\n            field: 'contact_person',\n            headerName: 'Contact Person',\n            width: 190\n        },\n        {\n            field: 'gst_no',\n            headerName: 'GST Number',\n            width: 160\n        },\n        {\n            field: 'pan',\n            headerName: 'PAN Number',\n            width: 160\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_customer.data.customer_master;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n    //console.log(rows);\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Customer</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Name</label>\n                                <input defaultValue={modalName} onChange={onModalNameChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Contact Person</label>\n                                <input defaultValue={modalContact_person} onChange={onModalContact_personChange} className=\"form-control mt-1\" name=\"contact_person\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Mobile Number</label>\n                                <input defaultValue={modalMobile_no} onChange={onModalMobile_noChange} className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Email ID</label>\n                                <input defaultValue={modalEmail_id} onChange={onModalEmail_idChange} className=\"form-control mt-1\" name=\"email_id\" type=\"email\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">PAN Number</label>\n                                <input defaultValue={modalPan} onChange={onModalPanChange} className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan\" name=\"pan\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">GST Number</label>\n                                <input defaultValue={modalGst_no} onChange={onModalGst_noChange} className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid pan\" name=\"pan\" type=\"text\" required />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            \n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Resident Address</label>\n                                <input defaultValue={modalRes_address} onChange={onModalRes_addressChange} className=\"form-control\" name=\"res_address\" type=\"text\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field\">\n                            <button className=\"btn btn-primary\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <h4 className=\"text-center\">CUSTOMER MASTER</h4>\n\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Name</label>\n                            <input placeholder=\"enter name\" onChange={onNameChange} type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            <span ></span>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Contact Person</label>\n                            <input onChange={onContact_personChange} placeholder=\"enter contact person\" type=\"text\" name=\"contact_person\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input onChange={onMobile_noChange} placeholder=\"enter mobile number\" type=\"tel\" name=\"mobile_no\" className=\"form-control mt-1\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input onChange={onEmail_idChange} placeholder=\"enter email id\" type=\"email\" name=\"email_id\" className=\"form-control mt-1\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">GST Number</label>\n                            <input onChange={onGst_noChange} placeholder=\"enter gst number\" type=\"text\" name=\"gst_no\" className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">PAN Number</label>\n                            <input onChange={onPanChange} placeholder=\"enter pan number\" type=\"text\" name=\"pan\" className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan\" required />\n                        </div>\n                    </div><br />\n                    {/* <h5 style={{ textAlign: 'center' }}>Address</h5> */}\n                    {/* <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            \n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                           \n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            \n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br /> */}\n                    <div className=\"row\">\n                        \n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Residential Address</label>\n                            <input onChange={onRes_addressChange} type=\"text\" name=\"res_address\" className=\"form-control\" placeholder=\"enter residential address\"/>\n                        </div>\n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type=\"reset\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData} \n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n// import Button from '@restart/ui/esm/Button';\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getMedia_Type = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    media_type_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      media_type\n    }\n  }\n  \n`\nconst DELETE_MEDIA = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_media_type_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n       \n`\nconst INSERT_MEDIA = gql`\nmutation MyMutation($media_type: String = \"\") {\n    insert_media_type_master_one(object: {media_type: $media_type}) {\n      media_type\n    }\n  }\n`\nconst UPDATE_MEDIA = gql`\nmutation MyMutation($id: Int = 0, $media_type: String = \"\") {\n    update_media_type_master_by_pk(pk_columns: {id: $id}, _set: {media_type: $media_type}) {\n      id\n    }\n  }  \n`\nfunction Media_Type_Master() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [mediaType, setMediaType] = useState({\n        media_type: '',\n    }\n    )\n\n    const [modelMediaType, setModelMediaType] = useState({\n        id: '',\n        media_type: '',\n    }\n    )\n    const onInputChange = (e) => {\n        setMediaType({ ...mediaType, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target[0].value)\n        insert_employee({ variables: { media_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setModelMediaType({\n            id: row.id,\n            media_type: row.media_type\n        })\n    }\n    const onModalInputChange = (e) => {\n        setModelMediaType({ ...modelMediaType, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_media({ variables: { id: modelMediaType.id, media_type: modelMediaType.media_type } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const [insert_employee] = useMutation(INSERT_MEDIA);\n    const [update_media] = useMutation(UPDATE_MEDIA);\n    const [delete_media_type_master] = useMutation(DELETE_MEDIA);\n    const onDelete = (id) => {\n        console.log(id);\n        delete_media_type_master({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const getMedia = useSubscription(getMedia_Type);\n    if (getMedia.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getMedia.error) {\n        return \"error\" + getMedia.error;\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'media_type',\n            headerName: 'Media Type',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { onEdit(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    const deleteVehicle = (row) => {\n\n    }\n    // const rows = [\n    //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n\n    //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    // ];\n    console.log(getMedia.data);\n    const rows = getMedia.data.media_type_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Media Type Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modelMediaType.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">Media Types</label>\n                                        <input defaultValue={modelMediaType.media_type} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"media_type\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>MEDIA TYPE MASTER</h3>\n\n<br/>\n                            <form className=\"form-group\" onSubmit={onFormSubmit}>\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Media Types</label>\n                                        <input placeholder=\"enter media types\" onChange={onInputChange} className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"media_type\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}\nexport default Media_Type_Master;","import React, { useState } from 'react'\n// import { DataGrid } from '@material-ui/data-grid';\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { OndemandVideoTwoTone } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nconst getSize_MasterQuery = gql` \nsubscription MySubscription {\n  \n  size_master {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst Size_MasterQuery = gql`\nsubscription MySubscription {\n  size_master {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst insert_size_MasterQuery = gql`\nmutation MyMutation($height: String = \"\", $no_of_display: String = \"\", $width: String = \"\") {\n  insert_size_master(objects: {height: $height, no_of_display: $no_of_display, width: $width}) {\n    affected_rows\n  }\n}`\n\nconst Delete_size_MasterQuery = gql`\nmutation MyMutation($id:Int=0){\n  delete_size_master_by_pk(id:$id) {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst UPDATE_SIZE = gql`\nmutation MyMutation($height: String = \"\", $id: Int = 0, $no_of_display: String = \"\", $width: String = \"\") {\n  update_size_master_by_pk(pk_columns: {id: $id}, _set: {height: $height, no_of_display: $no_of_display, width: $width}) {\n    id\n  }\n}\n`\n\n\n\n\nexport default function Franchise_Management() {\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [modalSize, setModalSize] = useState({\n    id: '',\n    width: '',\n    height: '',\n    no_of_display: ''\n  });\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(e.target)\n    insert_size_masterData({ variables: { width: e.target[0].value, height: e.target[1].value, no_of_display: e.target[2].value } })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n  const onDelete = (id) => {\n    console.log(id);\n    delete_size_masterData({ variables: { id: id } });\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalSize({\n      id: row.id,\n      width: row.width,\n      height: row.height,\n      no_of_display: row.no_of_display\n    })\n  }\n  const onModalInputChange = (e) => {\n    setModalSize({ ...modalSize, [e.target.name]: e.target.value });\n  }\n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modalSize);\n    update_size({ variables: { id: modalSize.id, width: modalSize.width, height: modalSize.height, no_of_display: modalSize.no_of_display } })\n    toast.configure();\n    toast.warning('Successfully Updated')\n    handleClose();\n  }\n  const [insert_size_masterData] = useMutation(insert_size_MasterQuery);\n  const [delete_size_masterData] = useMutation(Delete_size_MasterQuery);\n  const [update_size] = useMutation(UPDATE_SIZE);\n\n\n  const getSize = useSubscription(getSize_MasterQuery);\n  if (getSize.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n  }\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'width', headerName: 'Width', width: 200 },\n\n    { field: 'height', headerName: 'Height', width: 200, },\n\n    { field: 'no_of_display', headerName: 'Number of display', width: 200, },\n\n    // { field: 'country', headerName: 'country', width: 170, },\n\n\n    // { field: 'state', headerName: 'state', width: 170, },\n    // { field: 'district', headerName: 'district', width: 170, },\n    // { field: 'taluka', headerName: 'taluka', width: 170, },\n    // { field: 'mobile no', headerName: 'mobile no', width: 170, },\n    // { field: 'email', headerName: 'email', width: 170, },\n    // { field: 'gst no', headerName: 'gst no', width: 170, },\n    // { field: 'pan', headerName: 'pan', width: 170, },\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} ><i className=\"bi bi-trash-fill\"></i></button>\n\n          </div>\n        );\n      }\n    },\n\n\n  ];\n\n  console.log(getSize.data);\n  const rows = getSize.data.size_master;\n\n  return (\n\n    <div>\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title style={{ marginLeft: \"130px\" }}>Edit Size Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          \n            <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n              <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">ID</label>\n                <input defaultValue={modalSize.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Height</label>\n                <input defaultValue={modalSize.height} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"height\" type=\"number\" required />\n              </div>\n              </div>\n              <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Width</label>\n                <input defaultValue={modalSize.width} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"width\" type=\"number\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">No Of Display</label>\n                <input defaultValue={modalSize.no_of_display} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"no_of_display\" type=\"number\" required />\n              </div>\n              </div>\n              <div className=\"field col-md-6\">\n                <button className=\"btn btn-primary mt-3\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n              </div>\n            </form>\n       \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br/>\n        <h4 className=\"text-center\"> SIZE MASTER</h4>\n\n<br/>\n        <form onSubmit={onFormSubmit} className=\"form-group\">\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Width (In Feet)</label>\n              <input placeholder=\"enter width\" className=\"form-control mt-1\" name=\"width\" type=\"number\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Height (In Feet)</label>\n              <input placeholder=\"enter height\" className=\"form-control mt-1\" name=\"height\" type=\"number\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Number of Display</label>\n              <input placeholder=\"enter number of display\" className=\"form-control mt-1\" name=\"no_of_display\" type=\"number\" required />\n            </div>\n          </div>\n<br/>\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n            <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n            <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n            {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n          </div>\n          <br/>\n        </form>\n\n        {/* <div style={{ height: 500, width: '100%' }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={10}\n          rowsPerPageOptions={[10]}\n          checkboxSelection={false}\n          // components={{\n          //   Toolbar: GridToolbar,\n          // }}\n          style={{borderTop: '4px solid #05386b'}}\n          disableSelectionOnClick\n        />\n      </div> */}\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n\n    </div>\n\n\n\n\n  )\n}","import React, { useState } from 'react';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\n// import { Divider } from '@material-ui/core';\nimport Card from '@mui/material/Card';\nimport {\n    useMutation,\n    useQuery,\n    gql,\n    useSubscription\n} from \"@apollo/client\";\nimport { Delete, Edit } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n\n\nconst getIndustry_master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  industry_master(where: {isDeleted: {_eq: $_eq}}){\n    id\n    industry_type\n  }\n}\n`\nconst Industry_MasterQuery = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  industry_master(where: {isDeleted: {_eq: $_eq}}){\n    id\n    industry_type\n  }\n}`\n\nconst insert_Industry_MasterQuery = gql\n    `mutation MyMutation($industry_type: String = \"\") {\n  insert_industry_master_one(object: { industry_type: $industry_type}) {\n    id\n    industry_type\n  }\n}\n`\n\n// const delete_Industry_masterQuery = gql`\n// mutation MyMutation($id:Int=0) {\n//   delete_industry_master_by_pk(id:$id) {\n//     id\n//     industry_type\n//   }\n// }`\n\nconst delete_Industry_masterQuery = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_industry_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\n\n\nconst update_Industry_masterQuery = gql`\nmutation MyMutation($id: Int = 0, $industry_type: String = \"\") {\n  update_industry_master_by_pk(pk_columns: {id: $id}, _set: {industry_type: $industry_type}) {\n    id\n    industry_type\n  }\n}\n\n`\n\n\nconst rows = [\n    { id: 1, Name: '10', Address: 'prajakta', },\n    { id: 2, Role: '28', Franchise: 'Cersei' },\n    { id: 3, Role: '30', Franchise: 'Jaime' },\n    { id: 4, Role: '40', Franchise: 'Arya' },\n    { id: 5, Role: '50', Franchise: 'Daenerys' },\n\n];\n\nfunction Industry_Master() {\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [ModalIndustry, setModalIndustry] = useState({\n        id: '',\n        industry_type: ''\n    });\n\n    const [insert_Industry] = useMutation(insert_Industry_MasterQuery);\n    const [delete_Industry_masterData] = useMutation(delete_Industry_masterQuery);\n    const [update_Industry_masterData] = useMutation(update_Industry_masterQuery);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        insert_Industry({ variables: { industry_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n\n    const getIndustry = useSubscription(getIndustry_master);\n    if (getIndustry.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onDelete = (id) => {\n        console.log(id);\n        delete_Industry_masterData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const onEdit = (row) => {\n        handleShow();\n        setModalIndustry({\n            id: row.id,\n            industry_type: row.industry_type\n        })\n    }\n\n    const onModalInputChange = (e) => {\n        setModalIndustry({ ...ModalIndustry, [e.target.name]: e.target.value });\n    }\n\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(ModalIndustry);\n        update_Industry_masterData({ variables: { id: ModalIndustry.id, industry_type: ModalIndustry.industry_type } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const editVehicle = (row) => {\n        handleShow();\n        setModalIndustry({\n            id: row.id,\n            industry_type: row.industry_type\n        })\n    }\n\n    const deleteVehicle = (row) => {\n\n    }\n    const columns = [\n        {field:'sl',headerName:'Serial No'},\n        { field: 'id', headerName: 'ID', width: 100 },\n\n        { field: 'industry_type', headerName: 'Industry Type', width: 200 },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\" onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '40%' }} className=\"btn btn-danger\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n\n    ];\n    console.log(getIndustry.data);\n    \n    const rows = getIndustry.data.industry_master;\n    let newData = [];\n    rows.map((item, index) => {\n            newData.push({sl: index + 1, ...item});\n        });\n    return (\n        <>\n\n            <div className=\"container\">\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Industry Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={ModalIndustry.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                                </div>\n\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Industry Type</label>\n                                    <input defaultValue={ModalIndustry.industry_type} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"industry_type\" type=\"text\" />\n                                </div>\n                            </div>\n                            <br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form onSubmit={onFormSubmit} className='form-group'>\n                    <div className=\"col-md-12\">\n                        <br/>\n                        <h4 style={{ width: '100%', textAlign: 'center' }}>INDUSTRY MASTER</h4>\n<br/>\n                        {/* <Divider style={{ marginBottom: '8px', }} /> */}\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                {/* <label> Franchise Name</label> */}\n\n                                {/* <input className=\"form-control \" name=\"licence\" type =\"text\" placeholder='Enter franchise name' required /> */}\n                            </div>\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\"> Industry Type</label>\n                                <input placeholder=\"enter industry type\" className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"licence\" type=\"text\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets\"/>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n<br/>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n                    </div>\n                    <br/>\n                </form>\n            </Card>\n            <br />\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                marginTop: \"2px\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                          Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n\n\n        </>\n\n    );\n}\nexport default Industry_Master;","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport gql from 'graphql-tag';\nimport { Card, CircularProgress } from '@material-ui/core';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n//import { GridToolbar } from '@mui/x-data-grid';\n\nexport default function GST_Type_Master() {\n    const [id, setId] = useState()\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [GST, setGST] = useState({\n        cgst: '',\n        sgst: '',\n        igst: '',\n    })\n    const [updateGST, setUpdateGST] = useState({\n        id: id,\n        cgst: '',\n        sgst: '',\n        igst: '',\n    })\n    const GST_MASTER_QUERY = gql`\n    subscription MySubscription($_eq: String = \"false\"){\n        gst_master(where: {isDeleted: {_eq: $_eq}}) {\n          cgst\n          sgst\n          igst\n          id\n        }\n      }      \n    `;\n\n    const GST_MASTER_Insertion = gql`\n    mutation MyMutation($cgst: String = \"\", $igst: String = \"\", $sgst: String = \"\") {\n        insert_gst_master(objects: {cgst: $cgst, igst: $igst, sgst: $sgst}) {\n          affected_rows\n        }\n      }      \n    `;\n\n    const GST_MASTER_Update = gql`\n    mutation MyMutation($id: Int = 10, $cgst: String = \"\", $igst: String = \"\", $sgst: String = \"\") {\n        update_gst_master_by_pk(pk_columns: {id: $id}, _set: {cgst: $cgst, igst: $igst, sgst: $sgst}) {\n          id\n        }\n      }      \n    `;\n\n    // const GST_MASTER_Delete = gql`\n    // mutation MyMutation($id: Int!) {\n    //     delete_gst_master_by_pk(id: $id) {\n    //       id\n    //     }\n    // }\n    //   `;\n    const GST_MASTER_Delete = gql`\n    mutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n        update_gst_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n          isDeleted\n        }\n      }      \n    `\n    const Datatable = useSubscription(GST_MASTER_QUERY);\n    const [insertGSTMaster] = useMutation(GST_MASTER_Insertion);\n    const [updateGSTMaster] = useMutation(GST_MASTER_Update);\n    const [deleteGSTMaster] = useMutation(GST_MASTER_Delete);\n\n    if (Datatable.loading) {\n        return (\n            <div className='App' style={{ marginTop: '20%', }}><CircularProgress /></div>\n        )\n    }\n    if (Datatable.error) {\n        return (\n            <>Error.</>\n        )\n    }\n    const rows = Datatable.data.gst_master;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n\n    const onInputChange = (e) => {\n        e.preventDefault();\n        setGST({ ...GST, [e.target.name]: e.target.value })\n    }\n\n    const onModalInputChange = (e) => {\n        e.preventDefault();\n        setUpdateGST({ ...updateGST, [e.target.name]: e.target.value })\n    }\n\n    const onModalSubmit = (e) => {\n        e.preventDefault();\n        updateGSTMaster({\n            variables: updateGST,\n        });\n        handleClose();\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(GST);\n        insertGSTMaster(\n            {\n                variables: GST\n            }\n        );\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n    const editVehicle = (row) => {\n        setId(row.id);\n        console.log(id);\n        setUpdateGST(\n            {\n                id: row.id,\n                cgst: row.cgst,\n                sgst: row.sgst,\n                igst: row.igst,\n            }\n        )\n        handleShow();\n    }\n\n    const deleteVehicle = (id) => {\n        deleteGSTMaster({\n            variables: {id: id},\n        })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'cgst',\n            headerName: 'CGST',\n            width: 190,\n            hide: false,\n        },\n        {\n            field: 'sgst',\n            headerName: 'SGST',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'igst',\n            headerName: 'IGST',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 170,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"150%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button style={{ marginRight: '10%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                deleteVehicle(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n    ];\n\n    // const rows = [\n    //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    // ];\n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header >\n                        <Modal.Title>Edit GST Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalSubmit}>\n\n                                {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                <div className=\"row\" >\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">CGST</label>\n                                        <input defaultValue={updateGST.cgst} className=\"form-control mt-1\" name=\"cgst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">SGST</label>\n                                        <input defaultValue={updateGST.sgst} className=\"form-control mt-1\" name=\"sgst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">IGST</label>\n                                        <input defaultValue={updateGST.igst} className=\"form-control mt-1\" name=\"igst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                </div><br />\n                                 <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                            </form>\n                    \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                   <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>ADD GST DETAILS</h3>\n                            <br/>\n                                <form className=\"form-group\" onSubmit={onSubmit}>\n\n                                    {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                    <div className=\"row mt-3\" >\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">CGST</label>\n                                            <input placeholder=\"enter cgst\" className=\"form-control mt-1\" name=\"cgst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">SGST</label>\n                                            <input placeholder=\"enter sgst\" className=\"form-control mt-1\" name=\"sgst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">IGST</label>\n                                            <input placeholder=\"enter igst\" className=\"form-control mt-1\" name=\"igst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                    </div>\n                                    <br/>\n                                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                                    </div>\n                                    <br/>\n                                </form>\n                            \n\n\n\n                \n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n  \n\n                        disableSelectiononChange\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\nimport {\n    gql,\n    useQuery,\n    useMutation,\n    useSubscription,\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Card } from '@material-ui/core';\nimport { toast } from 'react-toastify';\n\nconst LABOUR_MASTER_QUERY = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labor_master(where: {isDeleted: {_eq: $_eq}}){\n      address\n      gst_no\n      id\n      labor_type\n      mobile_no\n      name\n      pan\n      labour_category_master {\n        labour_category\n      }\n      bank_master {\n        account_no\n        bank_name\n        ifsc_code\n        branch_name\n      }\n      bank_id \n    }\n\n\n\n}      \n`;\nconst LABOUR_MASTER_Insertion = gql`\nmutation MyMutation($account_no: String = \"\", $bank_name: String = \"\", $branch_name: String = \"\", $ifsc_code: String = \"\", $address: String = \"\", $gst_no: String = \"\", $labor_type: Int!, $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\") {\n    insert_labor_master(objects: {address: $address, gst_no: $gst_no, labor_type: $labor_type, mobile_no: $mobile_no, name: $name, pan: $pan, bank_master: {data: {account_no: $account_no, bank_name: $bank_name, branch_name: $branch_name, ifsc_code: $ifsc_code}}}) {\n      affected_rows\n    }\n  }        \n`;\n\nconst LABOUR_MASTER_Update = gql`\nmutation MyMutation($id: Int = 10, $address: String = \"\", $gst_no: String = \"\", $labor_type: Int!, $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\") {\n    update_labor_master_by_pk(pk_columns: {id: $id}, _set: {address: $address, gst_no: $gst_no, labor_type: $labor_type, mobile_no: $mobile_no, name: $name, pan: $pan}) {\n      id\n    }\n  }            \n`\n// const LABOUR_MASTER_Delete = gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_labor_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n// `\n\nconst LABOUR_MASTER_Delete = gql`\nmutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n    update_labor_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }   \n`\n\nconst Read_Labour_Master=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n`\n\n\n\n\n\n\nexport default function Labour_Master() {\n    const [id, setId] = useState()\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [labour, setLabour] = useState({\n        address: '',\n        gst_no: '',\n        labor_type: '',\n        mobile_no: '',\n        name: '',\n        pan: '',\n        account_no: '',\n        bank_name: '',\n        ifsc_code: '',\n        branch_name: '',\n    })\n    const [updateLabor, setUpdateLabor] = useState({\n        id: id,\n        address: '',\n        gst_no: '',\n        labor_type: '',\n        mobile_no: '',\n        name: '',\n        pan: '',\n        account_no: '',\n        bank_name: '',\n        ifsc_code: '',\n        branch_name: '',\n    })\n   \n\n\n\n\n\n    const Datatable = useSubscription(LABOUR_MASTER_QUERY);\n    const [insertLabourMaster] = useMutation(LABOUR_MASTER_Insertion);\n    const [updateLabourMaster] = useMutation(LABOUR_MASTER_Update);\n    const [deleteLabourMaster] = useMutation(LABOUR_MASTER_Delete);\n\n\n    const read_labour =useSubscription(Read_Labour_Master);\n\n\n    if (Datatable.loading||read_labour.loading) {\n        return (\n            <div className='App' style={{ marginTop: '20%', }}><CircularProgress /></div>\n        )\n    }\n    if (Datatable.error) {\n        return \"Error\"+Datatable.error;\n    }\n    //const rows = Datatable.data.labor_master;\n    const rows = Datatable.data.labor_master;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n\n    const onInputChange = (e) => {\n        console.log(e.target.value)\n        e.preventDefault();\n        setLabour({ ...labour, [e.target.name]: e.target.value })\n    }\n    const onModalInputChange = (e) => {\n        e.preventDefault();\n        setUpdateLabor({ ...updateLabor, [e.target.name]: e.target.value })\n    }\n\n    const onModalSubmit = (e) => {\n        console.log(updateLabor)\n        e.preventDefault();\n        updateLabourMaster({\n            variables: updateLabor,\n        });\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(labour);\n        insertLabourMaster(\n            { variables: labour }\n        )\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const editVehicle = (row) => {\n        setId(row.id);\n        setUpdateLabor({\n            id: row.id,\n            address: row.address,\n            gst_no: row.gst_no,\n            labor_type: row.labor_type,\n            mobile_no: row.mobile_no,\n            name: row.name,\n            pan: row.pan,\n            account_no: row.account_no,\n            bank_name: row.bank_name,\n            ifsc_code: row.ifsc_code,\n            branch_name: row.branch_name,\n        });\n        handleShow();\n    }\n\n    const deleteVehicle = (id) => {\n        console.log(id);\n        deleteLabourMaster({variables: {id: id}})\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }   \n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'labor_type',\n            headerName: 'Labour Type',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labour_category_master.labour_category;\n            },\n            editable: false,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'mobile_no',\n            headerName: 'Contact Number',\n            width: 190,\n            editable: false,\n        },\n        {\n            field: 'address',\n            headerName: 'Address',\n            width: 190,\n            editable: false,\n        },\n        {\n            field: 'gst_no',\n            headerName: 'GST Number',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'pan',\n            headerName: 'PAN Number',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.bank_name;\n            },\n            editable: false,\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.branch_name;\n            },\n            editable: false,\n        },\n        {\n            field: 'ifsc_code',\n            headerName: 'IFSC',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.ifsc_code;\n            },\n            editable: false,\n        },\n        {\n            field: 'account_no',\n            headerName: 'Account Number',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.account_no;\n            },\n            editable: false,\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"150%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '20%' }} onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button style={{ marginRight: '30%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                console.log(\"----\"+params.row.id);\n                                deleteVehicle(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n\n    \n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Labour Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className='card card-primary card-outline' style={{ padding: '20px' }}>\n                            <form className=\"form-group\" onSubmit={onModalSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Labour_Category</label>\n                                        <select placeholder=\"enter labour category\" onChange={onModalInputChange} defaultValue={updateLabor.labor_type} type=\"text\" name=\"labor_type\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                <option>--SELECT--</option>\n                                {read_labour.data.labour_category_master.map(Labour_Category => (\n                                    <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                ))}\n                            </select>\n                                    </div>\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Name</label>\n                                        <input placeholder=\"enter name\" defaultValue={updateLabor.name} className=\"form-control mt-1\" name=\"name\" type=\"text\" onChange={onModalInputChange} pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Contact Number</label>\n                                        <div style={{ display: 'flex' }}>\n                                            <input placeholder=\"enter contact number\" defaultValue={updateLabor.mobile_no} className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\" onChange={onModalInputChange} required  pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\"/>\n                                            {/* <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button> */}\n                                        </div>\n                                    </div>\n                                \n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">GST Number</label>\n                                        <input defaultValue={updateLabor.gst_no} className=\"form-control mt-1\" name=\"gst_no\" placeholder=\"enter gst number\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    {/* <div className=\"field col-md-6\">\n                                        <label>Enter OTP</label>\n                                        <input className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Please Enter Your OTP' />\n                                    </div> */}\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">PAN Number</label>\n                                        <input defaultValue={updateLabor.pan} className=\"form-control mt-1\" name=\"pan\" placeholder=\"enter pan number\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Address</label>\n                                        <input defaultValue={updateLabor.address} className=\"form-control mt-1\" name=\"address\" placeholder=\"enter address\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n\n                                </div>\n                                {/* <h5 style={{ width: '100%', textAlign: 'center' }}>BANK DETAILS</h5> */}\n                                {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                {/* <div className=\"row mt-3\" >\n                                    <div className=\"field col-md-4\">\n                                        <label>Bank Name</label>\n                                        <input className=\"form-control\" name=\"bank_name\" type=\"text\" placeholder='enter your bank name' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label>Branch Name</label>\n                                        <input className=\"form-control\" name=\"branch_name\" type=\"text\" placeholder='enter branch name' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label>IFSC</label>\n                                        <input className=\"form-control\" name=\"ifsc_code\" type=\"text\" placeholder='enter your IFSC number' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4 mt-3\">\n                                        <label>Account Number</label>\n                                        <input className=\"form-control\" name=\"account_no\" type=\"text\" placeholder='enter your account number' onChange={onModalInputChange} required />\n                                    </div>\n                                </div> */}\n                                <br />\n                                {/* <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}> */}\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Update</button>\n                                    {/* <button className=\"btn btn-primary\" type='reset'>Reset</button> */}\n                                {/* </div> */}\n                            </form>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <br/>\n                            <h4 style={{ width: '100%', textAlign: 'center' }}>LABOUR MASTER</h4>\n\n                            <br/>\n                         \n                                <form className=\"form-group\" onSubmit={onSubmit}>\n                                    <div className=\"row\">\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Labour Category</label>\n                                            <select onChange={onInputChange}  type=\"text\" name=\"labor_type\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                <option>--SELECT--</option>\n                                {read_labour.data.labour_category_master.map(Labour_Category => (\n                                    <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                ))}\n                            </select>\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Name</label>\n                                            <input className=\"form-control mt-1\" name=\"name\" type=\"text\"  onChange={onInputChange} placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\"  required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Contact Number</label>\n                                            <div style={{ display: 'flex' }}>\n                                                <input className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\"  onChange={onInputChange} placeholder=\"enter contact number\" required  pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\"/>\n                                                {/* <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button> */}\n                                            </div>\n                                        </div>\n                                    </div><br />\n                                    <div className=\"row mt-3\">\n                                        <div className=\"field col-md-4\">\n                                        <label className=\"required\">GST Number</label>\n                            <input onChange={onInputChange} placeholder=\"enter gst number\" type=\"text\" name=\"gst_no\" className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid gst number\" required />\n                                        </div>\n                                        {/* <div className=\"field col-md-6\">\n                                        <label>Enter OTP</label>\n                                        <input className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Please Enter Your OTP' />\n                                    </div> */}\n\n                                        <div className=\"field col-md-4\">\n                                        <label className=\"required\">PAN Number</label>\n                            <input onChange={onInputChange} placeholder=\"enter pan number\" type=\"text\" name=\"pan\" className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan number\" required />\n                                        </div>\n                                        <div className=\"field col-md-4 mb-4\">\n                                            <label className=\"required\">Address</label>\n                                            <input className=\"form-control mt-1\" name=\"address\" placeholder=\"enter address\" type=\"text\"  onChange={onInputChange} required />\n                                        </div>\n\n                                    </div><br />\n                                    <h5 style={{ width: '100%', textAlign: 'center' }}>BANK DETAILS</h5>\n                                    <br/>\n                                    {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                    <div className=\"row mt-3\" >\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Bank Name</label>\n                                            <input className=\"form-control mt-1\" name=\"bank_name\" type=\"text\"  placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Branch Name</label>\n                                            <input className=\"form-control mt-1\" name=\"branch_name\" type=\"text\"  placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">IFSC</label>\n                                            <input className=\"form-control mt-1\" maxlength=\"11\" minlength=\"11\" name=\"ifsc_code\" type=\"text\"placeholder=\"enter ifsc\"  onChange={onInputChange} required />\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"field col-md-4 mt-3\">\n                                            \n                                            <label className=\"required\">Account Number</label>\n                                            <input className=\"form-control mt-1\" name=\"account_no\" placeholder=\"enter account number\" type=\"number\"  onChange={onInputChange} required />\n                                        </div>\n                                    </div>\n                                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                        <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                                        <br/>\n                                        <br/>\n                                       \n                                    </div>\n                                </form>\n                         \n                        \n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst GET_INVENTORY = gql`\nquery MyQuery($hoarding_insurance_to:date!){\n    Inventory_Master(where: {hoarding_insurance_to: {_eq: $hoarding_insurance_to}}){\n      AvailabilityFrom\n      AvailabilityTo\n      State\n      District\n      Subdistrict\n      DisplayRatePM\n      \n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      \n      Total\n      Totalsqft\n      Width\n      \n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      \n    }\n  }\n`\n\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      State\n      District\n      Subdistrict\n      DisplayRatePM\n      \n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      \n      Total\n      Totalsqft\n      Width\n      \n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      \n    }\n  }\n`\nconst INSERT_INSURANCE = gql`\nmutation MyMutation($from_date: date = \"\", $insurance: String = \"\", $inventory: Int = 0, $to_date: date = \"\") {\n    insert_hoarding_insurance_one(object: {from_date: $from_date, insurance: $insurance, inventory: $inventory, to_date: $to_date}) {\n      id\n    }\n  }\n`\nconst READ_INSURANCE = gql`\nsubscription MySubscription{\n    hoarding_insurance(where: {insurance: {_eq: \"No\"}}) {\n        Inventory_Master {\n          Location\n        }\n        from_date\n        id\n        insurance\n        inventory\n        to_date\n      }\n  }\n  \n  \n`\n\nconst UPDATE_INSURANCE=gql`\nmutation MyMutation($from_date: date = \"\", $insurance: String = \"\", $inventory: Int = 0, $to_date: date = \"\", $id: Int = 0) {\n    update_hoarding_insurance_by_pk(pk_columns: {id: $id}, _set: {from_date: $from_date, insurance: $insurance, inventory: $inventory, to_date: $to_date}) {\n      id\n    }\n  }\n  \n`\n\nconst DELETE_INSURANCE=gql`\nmutation MyMutation($id: Int = 0) {\n    delete_hoarding_insurance_by_pk(id: $id) {\n      id\n    }\n  }\n  \n  \n`\n\nfunction Hoarding_Insurance() {\n    //states\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [showhide, setShowhide] = useState('hidden');\n    const [inventory, setInventory] = useState();\n    const [insurance, setInsurance] = useState();\n    const [fromDate, setFromDate] = useState();\n    const [toDate, setToDate] = useState();\n\n    const [modalId, setModalId] = useState();\n    const [modalInventory, setModalInventory] = useState();\n    const [modalInsurance, setModalInsurance] = useState();\n    const [modalFromDate, setModalFromDate] = useState();\n    const [modalToDate, setModalToDate] = useState();\n    //Queries\n    const [insert_insurance] = useMutation(INSERT_INSURANCE);\n    const [update_insurance] = useMutation(UPDATE_INSURANCE);\n    const [delete_insurance] = useMutation(DELETE_INSURANCE);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const read_insurance = useSubscription(READ_INSURANCE);\n    const [get_inventory,ret_data] = useLazyQuery(GET_INVENTORY);\n    if (read_inventory.loading || read_insurance.loading||ret_data.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    //Events\n    const onInsuranceChange = (e) => {\n        if (e.target.value === 'Yes') {\n            setShowhide('visible');\n        }\n        else {\n            setShowhide('hidden');\n        }\n        setInsurance(e.target.value);\n        console.log(e.target.value);\n    }\n    const onInventoryChange = (e) => {\n        setInventory(e.target.value);\n    }\n    const onFromDateChange = (e) => {\n        setFromDate(e.target.value);\n    }\n    const onToDateChange = (e) => {\n        setToDate(e.target.value)\n    }\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value);\n    }\n    const onModalInsuranceChange = (e) => {\n        if (e.target.value === 'Yes') {\n            setShowhide('visible');\n        }\n        else {\n            setShowhide('hidden');\n        }\n        setModalInsurance(e.target.value);\n        console.log(e.target.value);\n    }\n    const onModalInventoryChange = (e) => {\n        setModalInventory(e.target.value);\n    }\n    const onModalFromDateChange = (e) => {\n        setModalFromDate(e.target.value);\n    }\n    const onModalToDateChange = (e) => {\n        setModalToDate(e.target.value)\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        insert_insurance({ variables: { inventory: inventory, insurance: insurance, from_date: fromDate, to_date: toDate } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_insurance({ variables: {id:modalId, inventory: modalInventory, insurance: modalInsurance, from_date: modalFromDate, to_date: modalToDate } })\n        toast.configure();\n        toast.warning('Successfully Updated')\n        handleClose()\n    }\n    const onEdit = (row) => {\n        console.log(row.from_date)\n        handleShow();\n        setModalId(row.id);\n        setModalInventory(row.inventory);\n        setModalInsurance(row.insurance);\n        setModalFromDate(row.from_date);\n        setModalToDate(row.to_date);\n    }\n    const onDelete = (id) => {\n        console.log(id);\n        delete_insurance({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        // {\n        //     field: 'inventory',\n        //     headerName: 'Inventory',\n        //     width: 200,\n        //     editable: false,\n        // },\n        {\n            field: 'inventory',\n            headerName: 'Inventory',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'insurance',\n            headerName: 'Insurance',\n            width: 200,\n            editable: false,\n        },\n        // {\n        //     field: 'from_date',\n        //     headerName: 'From Date',\n        //     width: 200,\n        //     editable: false,\n        // },\n        // {\n        //     field: 'to_date',\n        //     headerName: 'To Date',\n        //     width: 200,\n        //     editable: false,\n        // },\n        {\n            \n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center' }}>\n                        {/* <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\" onClick={() => { onEdit(params.row) }}></i></button> */}\n\n                        {/* <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button> */}\n\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_insurance.data.hoarding_insurance;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    }) \n    get_inventory({variables:{hoarding_insurance_to:(new Date()).toISOString().split('T')[0]}})\n    //console.log((new Date()).toISOString().split('T')[0]);\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Insurance Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" />\n                            </div>\n\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Inventory</label>\n                                <select defaultValue={modalInventory} onChange={onModalInventoryChange} className=\"form-control mt-1\">\n                                    <option>--SELECT--</option>\n                                    {read_inventory.data.Inventory_Master.map(inventory => (\n                                        <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <select defaultValue={modalInsurance} onChange={onModalInsuranceChange} className=\"form-control mt-2\" >\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                                <label className=\"required\">From Date</label>\n                                <input defaultValue={modalFromDate} onChange={onModalFromDateChange} className=\"form-control mt-1\" name=\"fromadte\" type=\"date\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">To Date</label>\n                                <input defaultValue={modalToDate} onChange={onModalToDateChange} className=\"form-control mt-1\" name=\"fromadte\" type=\"date\" />\n                            </div>\n                            \n                        </div>\n                        <br />\n                        <div className=\"field\">\n                            <button className=\"btn btn-primary\">Save</button>\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                {/* <form onSubmit={onFormSubmit} className='form-group'> */}\n                    {/* <div className=\"col-md-12\"> */}\n                        \n                        <h4 style={{ width: '100%', textAlign: 'center' }}>Dashboard</h4>\n                      \n                        {/* <Divider style={{ marginBottom: '8px', }} /> */}\n                        {/* <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Inventory</label>\n                                <select className=\"form-control mt-1\" onChange={onInventoryChange}>\n                                    <option>--SELECT--</option>\n                                    {read_inventory.data.Inventory_Master.map(inventory => (\n                                        <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div> */}\n                        {/* <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <select className=\"form-control mt-2\" onChange={onInsuranceChange} >\n                                    <option>Select...</option>\n                                    <option>Yes</option>\n                                    <option>No</option>\n                                </select>\n                            </div>\n                            <div className=\"field col-md-2 \" style={{ visibility: showhide }} onChange={onFromDateChange}>\n                                <label className=\"required\">From Date</label>\n                                <input type=\"date\" className=\"form-control\" />\n                            </div>\n                            <div className=\"field col-md-2 \" style={{ visibility: showhide }} onChange={onToDateChange}>\n                                <label className=\"required\">To Date</label>\n                                <input type=\"date\" className=\"form-control\" />\n                            </div>\n                        </div> */}\n\n                    {/* </div> */}\n                    \n                    {/* <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '18px', marginLeft: '-130px', width: '8%' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '10px', width: '8%' }}>Reset</button>\n                       \n                    </div> */}\n                 \n                {/* </form> */}\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                marginTop: \"2px\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 300, width: '100%' }}>\n                    <h4>Insurance Reminder</h4>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default Hoarding_Insurance","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { toast } from 'react-toastify';\nimport { gql, useMutation, useLazyQuery, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst getInventory_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      hoarding_errection {\n        isDeleted\n        id\n        fabricator_labour_payment\n        fabricator\n        fabrication_material\n        excavator_charges\n        excavator\n        electrician_selection\n        electrician_labour_payment\n        civil_contractor\n        civil_material\n        electric_material_purchase\n        civil_contractor_labour_payment\n        location\n        payment\n        permission\n        transport_charges\n      }\n    }\n  }\n`\nconst Insert_Inventory = gql`\nmutation MyMutation($AvailabilityFrom: date = \"\",$AvailabilityTo: date = \"\", $DisplayRatePM: String = \"\", $Height: String = \"\", $Illumination: String = \"\", $Location: String = \"\", $Media_Type:Int!, $NoofDisplay: String = \"\", $OneTimeMountingCost: String = \"\", $OneTimePrintingCost: String = \"\", $Total: String = \"\", $Totalsqft: String = \"\", $Width: String = \"\", $id: Int = 10,$DrpmRate:String!,$OtpcRate:String!,$OtmcRate:String!,$hoarding_insurance:String=\"\",$hoarding_insurance_from:date!,$hoarding_insurance_to:date!,$Status:String!,$erection:Int!,$State:Int!,$District:Int!,$Subdistrict:Int!) {\n    insert_Inventory_Master_one(object: {AvailabilityFrom: $AvailabilityFrom, AvailabilityTo: $AvailabilityTo, DisplayRatePM: $DisplayRatePM, DrpmRate: $DrpmRate, Height: $Height, Illumination: $Illumination, Location: $Location, Media_Type: $Media_Type, NoofDisplay: $NoofDisplay, OneTimeMountingCost: $OneTimeMountingCost, OneTimePrintingCost: $OneTimePrintingCost, OtmcRate: $OtmcRate, OtpcRate: $OtpcRate, Total: $Total, Totalsqft: $Totalsqft, Width: $Width,Status:$Status, hoarding_insurance: $hoarding_insurance, hoarding_insurance_from: $hoarding_insurance_from, hoarding_insurance_to: $hoarding_insurance_to,erection:$erection,State:$State,District:$District,Subdistrict:$Subdistrict}){\n      id\n    }\n  }\n  \n`\nconst Read_Fabricator = gql`\nsubscription MySubscription {\n    labor_master(where: {isDeleted: {_eq: \"false\"}, labor_type: {_eq: 21}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  `\nconst delete_Inventory = gql`\n  mutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n  `\n\n// const delete_Inventory = gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_Inventory_Master_by_pk(id: $id) {\n//       City_Village\n//       DisplayRatePM\n//       District\n//       Height\n//       Illumination\n//       Location\n//       Media_Type\n//       NoofDisplay\n//       OneTimeMountingCost\n//       OneTimePrintingCost\n//       Country\n//       State\n//       Taluka\n//       Total\n//       Totalsqft\n//       Width\n//       id\n//       hoarding_insurance\n\n//       Status\n//     }\n//   }\n// `\nconst UPDATE_Inventory = gql`\nmutation MyMutation($AvailabilityFrom: date = \"\",$AvailabilityTo: date = \"\", $DisplayRatePM: String = \"\", $Height: String = \"\", $Illumination: String = \"\", $Location: String = \"\", $Media_Type:Int!, $NoofDisplay: String = \"\", $OneTimeMountingCost: String = \"\", $OneTimePrintingCost: String = \"\", $Total: String = \"\", $Totalsqft: String = \"\", $Width: String = \"\", $id: Int = 10,$DrpmRate:String!,$OtpcRate:String!,$OtmcRate:String!,$hoarding_insurance:String=\"\",$hoarding_insurance_from:date!,$hoarding_insurance_to:date!,$Status:String!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {AvailabilityFrom: $AvailabilityFrom,AvailabilityTo: $AvailabilityTo, DisplayRatePM: $DisplayRatePM, Height: $Height, Illumination: $Illumination, Location: $Location, Media_Type: $Media_Type, NoofDisplay: $NoofDisplay, OneTimeMountingCost: $OneTimeMountingCost, OneTimePrintingCost: $OneTimePrintingCost, Total: $Total, Totalsqft: $Totalsqft, Width: $Width,DrpmRate:$DrpmRate,OtpcRate:$OtpcRate,OtmcRate:$OtmcRate, Status:$Status,hoarding_insurance: $hoarding_insurance, hoarding_insurance_from: $hoarding_insurance_from, hoarding_insurance_to: $hoarding_insurance_to}) {\n      id\n    }\n  }\n  \n`\n\nconst MEDIA_TYPE = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    media_type_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      media_type\n    }\n  }\n`\nconst Read_hoarding_erection = gql`\nsubscription MySubscription {\n    hoarding_errection {\n      id\n      location\n      payment\n      permission\n      transport_charges\n      fabricator_labour_payment\n      fabrication_material\n      excavator_charges\n      excavator\n      electrician_selection\n      electrician_labour_payment\n      electric_material_purchase\n      civil_material\n      civil_contractor_labour_payment\n      civil_contractor\n    }\n  }\n`\n\nconst READ_GEOLOCATIONS = gql`\nquery MyQuery {\n    geo_locations {\n      external_id\n      id\n      location_type\n      name\n      parent_id\n      pin\n    }\n  }  \n`\nconst READ_DISTRICT = gql`\nquery MyQuery($_eq: Int!) {\n    geo_locations(where: {parent_id: {_eq: $_eq}}) {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\nconst READ_SUBDISTRICT = gql`\nquery MyQuery($_eq: Int!) {\n    geo_locations(where: {parent_id: {_eq: $_eq}}) {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\n\nvar totalsq;\nvar total;\nvar modaltotalsq;\nvar modaltotal;\nexport default function Inventory_Master() {\n    const districtData = \"\";\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [State, setState] = useState();\n    const [District, setDistrict] = useState();\n    const [Subdistrict, setSubdistrict] = useState();\n    const [Location, setLocation] = useState();\n    const [Media_Type, setMedia_Type] = useState();\n    const [Illumination, setIllumination] = useState();\n    const [Width, setWidth] = useState(1);\n    const [Height, setHeight] = useState(1);\n    const [NoofDisplay, setNoofDisplay] = useState(1);\n    const [Totalsqft, setTotalsqft] = useState();\n    const [DisplayRatePM, setDisplayRatePM] = useState();\n    const [OneTimePrintingCost, setOneTimePrintingCost] = useState();\n    const [OneTimeMountingCost, setOneTimeMountingCost] = useState();\n    const [Total, setTotal] = useState();\n    const [AvailabilityFrom, setAvailabilityFrom] = useState();\n    const [AvailabilityTo, setAvailabilityTo] = useState();\n    const [DrpmRate, setDrpmRate] = useState();\n    const [OtpcRate, setOtpcRate] = useState();\n    const [OtmcRate, setOtmcRate] = useState();\n    const [hoarding_insurance, sethoarding_insurance] = useState();\n    const [hoarding_insurance_from, sethoarding_insurance_from] = useState();\n    const [hoarding_insurance_to, sethoarding_insurance_to] = useState();\n    const [Erection, setErection] = useState();\n\n    const [Status, setStatus] = useState();\n\n\n    const [ModalId, setModalId] = useState();\n    const [ModalState, setModalState] = useState();\n    const [ModalDistrict, setModalDistrict] = useState();\n    const [ModalSubdistrict, setModalSubdistrict] = useState();\n    const [ModalLocation, setModalLocation] = useState();\n    const [ModalMedia_Type, setModalMedia_Type] = useState();\n    const [ModalIllumination, setModalIllumination] = useState();\n    const [ModalWidth, setModalWidth] = useState(1);\n    const [ModalHeight, setModalHeight] = useState(1);\n    const [ModalNoofDisplay, setModalNoofDisplay] = useState(1);\n    const [ModalTotalsqft, setModalTotalsqft] = useState();\n    const [ModalDisplayRatePM, setModalDisplayRatePM] = useState();\n    const [ModalOneTimePrintingCost, setModalOneTimePrintingCost] = useState();\n    const [ModalOneTimeMountingCost, setModalOneTimeMountingCost] = useState();\n    const [ModalTotal, setModalTotal] = useState();\n    const [ModalAvailabilityFrom, setModalAvailabilityFrom] = useState();\n    const [ModalAvailabilityTo, setModalAvailabilityTo] = useState();\n    const [ModalDrpmRate, setModalDrpmRate] = useState();\n    const [ModalOtpcRate, setModalOtpcRate] = useState();\n    const [ModalOtmcRate, setModalOtmcRate] = useState();\n    const [Modalhoarding_insurance, setModalhoarding_insurance] = useState();\n    const [Modalhoarding_insurance_from, setModalhoarding_insurance_from] = useState();\n    const [Modalhoarding_insurance_to, setModalhoarding_insurance_to] = useState();\n    const [ModalErection, setModalErection] = useState();\n    const [ModalStatus, setModalStatus] = useState();\n\n\n    const onStateChange = (state_data) => {\n        setState(state_data.id);\n\n    }\n    const onDistrictChange = (district_data) => {\n        setDistrict(district_data.id);\n\n    }\n    const onSubdistrictChange = (subdistrict_data) => {\n        setSubdistrict(subdistrict_data.id);\n    }\n    const onLocationChange = (e) => {\n        setLocation(e.target.value)\n    }\n    const onMedia_TypeChange = (media_type_data) => {\n        setMedia_Type(media_type_data.id)\n    }\n    const onIlluminationChange = (illumination_data) => {\n        setIllumination(illumination_data.value)\n    }\n    const onWidthChange = (e) => {\n        totalsq = Height * NoofDisplay * e.target.value;\n        setWidth(e.target.value)\n        setTotalsqft(totalsq.toString());\n    }\n    const onHeightChange = (e) => {\n        totalsq = Width * NoofDisplay * e.target.value;\n        setHeight(e.target.value)\n        setTotalsqft(totalsq.toString());\n    }\n    const onNoofDisplayChange = (e) => {\n        setNoofDisplay(e.target.value)\n        //console.log(e.target.value);\n        totalsq = Width * Height * e.target.value;\n        setTotalsqft(totalsq.toString());\n        //console.log(totalsq);\n    }\n\n    // const onTotalsqftChange = (e) => {\n    //     // setTotalsqft(e.target.value)\n    //     // totalsq = Width * Height * NoofDisplay;\n    //     // setTotalsqft(totalsq);\n    // }\n    const onDrpmRateChange = (e) => {\n        setDrpmRate(e.target.value)\n        const drpm = Totalsqft * e.target.value\n        setDisplayRatePM(drpm);\n        console.log(DisplayRatePM)\n        total = parseInt(OneTimePrintingCost) + parseInt(OneTimeMountingCost) + parseInt(drpm)\n        //console.log(total);\n        setTotal(total.toString())\n    }\n    const onOtpcChange = (e) => {\n        setOtpcRate(e.target.value)\n        const otpc = Totalsqft * e.target.value\n        setOneTimePrintingCost(Totalsqft * e.target.value)\n        total = parseInt(otpc) + parseInt(OneTimeMountingCost) + parseInt(DisplayRatePM)\n        //console.log(total);\n        setTotal(total.toString())\n    }\n    const onOtmcChange = (e) => {\n        setOtmcRate(e.target.value)\n        const otmc = Totalsqft * e.target.value\n        setOneTimeMountingCost(Totalsqft * e.target.value)\n        total = parseInt(OneTimePrintingCost) + parseInt(otmc) + parseInt(DisplayRatePM)\n        console.log(total);\n        setTotal(total.toString())\n    }\n    // const onDisplayRatePMChange = (e) => {\n    //     setDisplayRatePM(e.target.value);\n    //     total=parseInt(OneTimePrintingCost) + parseInt(OneTimeMountingCost) + parseInt(e.target.value)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onOneTimePrintingCostChange = (e) => {\n    //     setOneTimePrintingCost(e.target.value)\n    //     total=parseInt(e.target.value) + parseInt(OneTimeMountingCost) + parseInt(DisplayRatePM)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onOneTimeMountingCostChange = (e) => {\n    //     setOneTimeMountingCost(e.target.value)\n    //     total=parseInt(OneTimePrintingCost) + parseInt(e.target.value) + parseInt(DisplayRatePM)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onTotalChange = (e) => {\n\n    // }\n    const onAvailabilityFromChange = (e) => {\n        setAvailabilityFrom(e.target.value)\n    }\n    const onAvailabilityToChange = (e) => {\n        setAvailabilityTo(e.target.value)\n    }\n\n    const onhoarding_insuranceChange = (e) => {\n        sethoarding_insurance(e.target.value)\n    }\n    const onHoardingInsuranceFromChange = (e) => {\n        sethoarding_insurance_from(e.target.value)\n    }\n    const onHoardingInsuranceToChange = (e) => {\n        sethoarding_insurance_to(e.target.value)\n    }\n    const onErectionChange = (e) => {\n        setErection(e.target.value)\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.target.value)\n    }\n\n\n    //Modal Changes\n    const onModalStateChange = (e) => {\n        setModalState(e.target.value);\n    }\n    const onModalDistrictChange = (e) => {\n        setModalDistrict(e.target.value);\n    }\n    const onModalSubdistrictChange = (e) => {\n        setModalSubdistrict(e.target.value);\n    }\n    const onModalLocationChange = (e) => {\n        setModalLocation(e.target.value)\n    }\n    const onModalMedia_TypeChange = (modal_mdeia_type_data) => {\n        setModalMedia_Type(modal_mdeia_type_data.id)\n    }\n    const onModalIlluminationChange = (modalIlluminationData) => {\n        setModalIllumination(modalIlluminationData.value)\n    }\n    const onModalWidthChange = (e) => {\n        modaltotalsq = ModalHeight * ModalNoofDisplay * e.target.value;\n        setModalWidth(e.target.value)\n        setModalTotalsqft(modaltotalsq.toString());\n    }\n    const onModalHeightChange = (e) => {\n        modaltotalsq = ModalWidth * ModalNoofDisplay * e.target.value;\n        setModalHeight(e.target.value)\n        setModalTotalsqft(modaltotalsq.toString());\n    }\n    const onModalNoofDisplayChange = (e) => {\n        setModalNoofDisplay(e.target.value)\n        //console.log(e.target.value);\n        modaltotalsq = ModalWidth * ModalHeight * e.target.value;\n        setModalTotalsqft(modaltotalsq.toString());\n        //console.log(ModalTotalsqft);\n    }\n\n    // const onTotalsqftChange = (e) => {\n    //     // setTotalsqft(e.target.value)\n    //     // totalsq = Width * Height * NoofDisplay;\n    //     // setTotalsqft(totalsq);\n    // }\n    const onModalDrpmChange = (e) => {\n        setModalDrpmRate(e.target.value)\n        const modaldrpm = ModalTotalsqft * e.target.value\n        setModalDisplayRatePM(modaldrpm);\n        console.log(ModalDisplayRatePM)\n        modaltotal = parseInt(ModalOneTimePrintingCost) + parseInt(ModalOneTimeMountingCost) + parseInt(modaldrpm)\n        //console.log(total);\n        setModalTotal(modaltotal.toString())\n    }\n    const onModalOtpcChange = (e) => {\n        setModalOtpcRate(e.target.value)\n        const modalotpc = ModalTotalsqft * e.target.value\n        setModalOneTimePrintingCost(modalotpc)\n        modaltotal = parseInt(modalotpc) + parseInt(ModalOneTimeMountingCost) + parseInt(ModalDisplayRatePM)\n        //console.log(total);\n        setModalTotal(modaltotal.toString())\n    }\n    const onModalOtmcChange = (e) => {\n        setModalOtmcRate(e.target.value)\n        const modalotmc = ModalTotalsqft * e.target.value\n        setModalOneTimeMountingCost(modalotmc)\n        modaltotal = parseInt(ModalOneTimePrintingCost) + parseInt(modalotmc) + parseInt(ModalDisplayRatePM)\n        console.log(modaltotal);\n        setModalTotal(modaltotal.toString())\n    }\n    // const onModalDisplayRatePMChange = (e) => {\n    //     setModalDisplayRatePM(e.target.value);\n    //     modaltotal=parseInt(ModalOneTimePrintingCost) + parseInt(ModalOneTimeMountingCost) + parseInt(e.target.value)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    // const onModalOneTimePrintingCostChange = (e) => {\n    //     setModalOneTimePrintingCost(e.target.value)\n    //     modaltotal=parseInt(e.target.value) + parseInt(ModalOneTimeMountingCost) + parseInt(ModalDisplayRatePM)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    // const onModalOneTimeMountingCostChange = (e) => {\n    //     setModalOneTimeMountingCost(e.target.value)\n    //     modaltotal=parseInt(ModalOneTimePrintingCost) + parseInt(e.target.value) + parseInt(ModalDisplayRatePM)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    const onModalAvailabilityFromChange = (e) => {\n        setModalAvailabilityFrom(e.target.value)\n    }\n    const onModalAvailabilityToChange = (e) => {\n        setModalAvailabilityTo(e.target.value)\n    }\n    const onModalhoarding_insuranceChange = (e) => {\n        setModalhoarding_insurance(e.target.value)\n    }\n    const onModalhoarding_insurance_fromChange = (e) => {\n        setModalhoarding_insurance_from(e.target.value)\n    }\n    const onModalhoarding_insurance_toChange = (e) => {\n        setModalhoarding_insurance_to(e.target.value)\n    }\n    const onModalStatusChange = (e) => {\n        setModalStatus(e.target.value)\n    }\n    const onModalErectionChange = (e) => {\n        setModalErection(e.target.value)\n    }\n\n\n\n\n\n\n    const [Insert_InventorymasterData] = useMutation(Insert_Inventory);\n    const [delete_InventorymasterData] = useMutation(delete_Inventory);\n    const [update_InventorymasterData] = useMutation(UPDATE_Inventory);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        Insert_InventorymasterData({ variables: { Location: Location, Media_Type: Media_Type, Illumination: Illumination, Width: Width.toString(), Height: Height.toString(), NoofDisplay: NoofDisplay.toString(), Totalsqft: Totalsqft.toString(), DisplayRatePM: DisplayRatePM.toString(), OneTimeMountingCost: OneTimeMountingCost.toString(), OneTimePrintingCost: OneTimePrintingCost.toString(), Total: Total.toString(), AvailabilityFrom: AvailabilityFrom, AvailabilityTo: AvailabilityTo, DrpmRate: DrpmRate.toString(), OtpcRate: OtpcRate.toString(), OtmcRate: OtmcRate.toString(), hoarding_insurance: hoarding_insurance, hoarding_insurance_from: hoarding_insurance_from, hoarding_insurance_to: hoarding_insurance_to, Status: Status, erection: Erection, State: State, District: District, Subdistrict: Subdistrict } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    // const onReset = () => {\n    //     States='';\n    //     City_Village='';\n    //     District='';\n    //     Taluka='';\n    //     Location='';\n    //     Media_Type='';\n    //     Illumination='';\n    //     Width='';\n    //     Height='';\n    //     NoofDisplay='';\n    //     Totalsqft='';\n    //     DisplayRatePM='';\n    //     OneTimeMountingCost='';\n    //     OneTimePrintingCost='';\n    //     Total='';\n    //     Availability=''\n    // }\n    const onEdit = (row) => {\n        console.log(row);\n        handleShow();\n        setModalId(row.id);\n        setModalState(row.State);\n        setModalDistrict(row.District);\n        setModalSubdistrict(row.Subdistrict);\n        setModalLocation(row.Location);\n        setModalMedia_Type(row.Media_Type);\n        setModalIllumination(row.Illumination);\n        setModalWidth(row.Width);\n        setModalHeight(row.Height);\n        setModalNoofDisplay(row.NoofDisplay);\n        setModalTotalsqft(row.Totalsqft);\n        setModalDisplayRatePM(row.DisplayRatePM);\n        setModalOneTimePrintingCost(row.OneTimePrintingCost);\n        setModalOneTimeMountingCost(row.OneTimeMountingCost);\n        setModalTotal(row.Total);\n        setModalAvailabilityFrom(row.AvailabilityFrom);\n        setModalAvailabilityTo(row.AvailabilityTo);\n        setModalDrpmRate(row.DrpmRate);\n        setModalOtpcRate(row.OtpcRate);\n        setModalOtmcRate(row.OtmcRate);\n        setModalhoarding_insurance(row.hoarding_insurance);\n        setModalhoarding_insurance_from(row.hoarding_insurance_from);\n        setModalhoarding_insurance_to(row.hoarding_insurance_to);\n        // setModalerrection_cost(row.errection_cost);\n        // setModalerrection_year(row.errection_year);\n        // setModalfabrication_selection(row.fabrication_selection);\n        setModalStatus(row.Status);\n\n\n        //console.log(modalInventory);\n    }\n\n    // const onModalInputChange = (e) => {\n    //     setModalInventory({ ...modalInventory, [e.target.name]: e.target.value })\n    // }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(ModalStates.toString());\n        update_InventorymasterData({ variables: { id: ModalId, State: ModalState, District: ModalDistrict, Subdistrict: ModalSubdistrict, Location: ModalLocation, Media_Type: ModalMedia_Type, Illumination: ModalIllumination, Width: ModalWidth.toString(), Height: ModalHeight.toString(), NoofDisplay: ModalNoofDisplay.toString(), Totalsqft: ModalTotalsqft.toString(), DisplayRatePM: ModalDisplayRatePM.toString(), OneTimeMountingCost: ModalOneTimeMountingCost.toString(), OneTimePrintingCost: ModalOneTimePrintingCost.toString(), Total: ModalTotal.toString(), AvailabilityFrom: ModalAvailabilityFrom, AvailabilityTo: ModalAvailabilityTo, DrpmRate: ModalDrpmRate, OtpcRate: ModalOtpcRate, OtmcRate: ModalOtmcRate, hoarding_insurance: Modalhoarding_insurance, hoarding_insurance_from: Modalhoarding_insurance_from, hoarding_insurance_to: Modalhoarding_insurance_to, Status: ModalStatus } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        //console.log(id);\n        delete_InventorymasterData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const read_geolocations = useQuery(READ_GEOLOCATIONS);\n    const getInventory = useSubscription(getInventory_Master);\n    const media_type = useSubscription(MEDIA_TYPE)\n    const read_fabricator = useSubscription(Read_Fabricator)\n    const read_hoarding_erection = useSubscription(Read_hoarding_erection)\n    if (read_geolocations.loading || getInventory.loading || media_type.loading || read_fabricator.loading || read_hoarding_erection.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    //console.log(getInventory.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 160\n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Illumination',\n            headerName: 'Illumination',\n            width: 150\n        },\n        {\n            field: 'Width',\n            headerName: 'Width',\n            width: 130\n        },\n        {\n            field: 'Height',\n            headerName: 'Height',\n            width: 130\n        },\n        {\n            field: 'NoofDisplay',\n            headerName: 'NoofDisplay',\n            width: 170\n        },\n        {\n            field: 'Totalsqft',\n            headerName: 'Total Sq.Ft.',\n            width: 190\n        },\n        {\n            field: 'DrpmRate',\n            headerName: 'Display Rate P.M. Rate',\n            width: 240\n        },\n        {\n            field: 'DisplayRatePM',\n            headerName: 'Display Rate P.M.',\n            width: 240\n        },\n        {\n            field: 'OtpcRate',\n            headerName: 'One Time Printing Cost Rate',\n            width: 240\n        },\n        {\n            field: 'OneTimePrintingCost',\n            headerName: 'One Time Printing Cost',\n            width: 240\n        },\n        {\n            field: 'OtmcRate',\n            headerName: 'One Time Mounting Cost Rate',\n            width: 240\n        },\n        {\n            field: 'OneTimeMountingCost',\n            headerName: 'One Time Mounting Cost',\n            width: 240\n        },\n        {\n            field: 'Total',\n            headerName: 'Total',\n            width: 190\n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'Booked From',\n            width: 190\n        },\n        {\n            field: 'AvailabilityTo',\n            headerName: 'Booked To',\n            width: 190\n        },\n        {\n            field: 'hoarding_insurance',\n            headerName: 'Hoarding Insurance',\n            width: 190\n        },\n        {\n            field: 'hoarding_insurance_from',\n            headerName: 'Hoarding Insurance From',\n            width: 190\n        },\n        {\n            field: 'hoarding_insurance_to',\n            headerName: 'Hoarding Insurance To',\n            width: 190\n        },\n        // {\n        //     field: 'errection_cost',\n        //     headerName: 'Erection Cost',\n        //     width: 190\n        // },\n        // {\n        //     field: 'errection_year',\n        //     headerName: 'Erection year',\n        //     width: 190\n        // },\n        // {\n        //     field: 'fabrication_selection',\n        //     headerName: 'Fabrication Selection',\n        //     width: 190\n        // },\n        {\n            field: 'Status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'BookedBy',\n            headerName: 'Planner Name',\n            width: 190\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    //console.log(getInventory.data);\n    const rows = getInventory.data.Inventory_Master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    var IlluminationOptions = [\n        { value: 'F LIT', label: 'F LIT' },\n        { value: 'NON LIT', label: 'NON LIT' },\n        { value: 'All', label: 'All' }\n    ]\n    // const rows=\n    //    [\n    //    { id: 1, state: 'Lannister', taluka: 'Cersei', district: 'kop' },\n    //    { id: 1, state: 'Lannister', taluka: 'pk', district: 'kop' },\n    //     { id: 3, state: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    // ]\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Inventory</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-4\">\n                                <label>State</label>\n                                {/* <Select\n                                    name=\"state\"\n                                    value={ModalState}\n                                    options={\n                                        read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                    }\n                                    onChange={onStateChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                /> */}\n                                <Select\n                                    name=\"state\"\n                                    defaultValue={ModalState}\n                                    options={\n                                        read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                    }\n                                    onChange={onStateChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">District</label>\n                                {/* <input defaultValue={modalInventory.State} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"State\" type=\"text\" placeholder=\" enter state\" /> */}\n                                {/* <select defaultValue={ModalStates} onChange={onModalStateChange} type=\"text\" name=\"State\" className=\"form-control mt-1\" data-live-search=\"true\" placeholder=\"enter state\" required>\n                                    <option>--SELECT--</option>\n                                    {read_states.data.states.map(state => (\n                                        <option key={state.id} value={state.id}>{state.name}</option>\n                                    ))}\n                                </select> */}\n\n                                <Select\n                                    name=\"district\"\n                                    options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                        if (currentElement.location_type === \"DISTRICT\" && currentElement.parent_id === State) {\n                                            //console.log(currentElement);\n                                            return currentElement;\n                                        }\n                                    }\n                                    )}\n                                    onChange={onDistrictChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Sub District</label>\n                                {/* <input defaultValue={modalInventory.City_Village} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"City_village\"\n                                    placeholder=\"enter city village\" required /> */}\n                                {/* <select defaultValue={ModalCity_Village} onChange={onModalCity_VillageChange} type=\"text\" name=\"City_Village\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                                    <option>--SELECT--</option>\n                                    {read_cities.data.cities.map(city => (\n                                        <option key={city.id} value={city.id}>{city.name}</option>\n                                    ))}\n                                </select> */}\n\n                                <Select\n                                    name=\"subdistrict\"\n                                    options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                        if (currentElement.location_type === \"SUBDISTRICT\" && currentElement.parent_id === District) {\n                                            //console.log(currentElement);\n                                            return currentElement;\n                                        }\n                                    }\n                                    )}\n                                    onChange={onSubdistrictChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Location</label>\n                                <input defaultValue={ModalLocation} onChange={onModalLocationChange} className=\"form-control mt-1\" name=\"Location\" placeholder=\"enter location\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Media Type</label>\n                                {/* <input defaultValue={ModalMedia_Type} onChange={onModalMedia_TypeChange} className=\"form-control mt-1\" name=\"Media_Type\" placeholder=\"enter media type \" required /> */}\n                                <Select\n                                    name=\"Media_Type\"\n                                    value={media_type.data.media_type_master.find((op) => op.id === ModalMedia_Type)}\n                                    options={media_type.data.media_type_master}\n                                    onChange={onModalMedia_TypeChange}\n                                    getOptionLabel={(option) => option.media_type}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Illumination</label>\n\n                                {/* <input defaultValue={ModalIllumination} onChange={onModalIlluminationChange} className=\"form-control mt-1\" name=\"Illumination\" placeholder=\"enter illumination\" required /> */}\n                                <Select\n                                    name=\"Illumination\"\n                                    value={IlluminationOptions.find(op => op.value === ModalIllumination)}\n                                    options={[\n                                        { value: 'F LIT', label: 'F LIT' },\n                                        { value: 'NON LIT', label: 'NON LIT' }\n                                    ]}\n                                    onChange={onModalIlluminationChange}\n                                    getOptionLabel={(option) => option.label}\n                                    getOptionValue={(option) => option.value}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Width</label>\n                                <input defaultValue={ModalWidth} onChange={onModalWidthChange} className=\"form-control mt-1\" name=\"Width\" placeholder=\"enter width\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Height </label>\n                                <input defaultValue={ModalHeight} onChange={onModalHeightChange} className=\"form-control mt-1\" name=\"Height\" placeholder=\"enter height\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">No of Display </label>\n                                <input defaultValue={ModalNoofDisplay} onChange={onModalNoofDisplayChange} className=\"form-control mt-1\" name=\"NoofDisplay\" placeholder=\"enter no of display\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Total Sq.Ft </label>\n                                <input defaultValue={ModalTotalsqft} className=\"form-control mt-1\" name=\"Totalsqft\" placeholder=\"enter total sq ft\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input defaultValue={ModalDrpmRate} onChange={onModalDrpmChange} className=\"form-control mt-1\" name=\"DrpmRate\" placeholder=\"enter display rate P.M\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Display Rate P.M </label>\n                                <input defaultValue={ModalDisplayRatePM} className=\"form-control mt-1\" name=\"DisplayRatePM\" placeholder=\"enter display rate P.M\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input defaultValue={ModalOtpcRate} onChange={onModalOtpcChange} className=\"form-control mt-1\" name=\"OtpcRate\" placeholder=\"enter rate \" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">One Time Printing Cost </label>\n                                <input defaultValue={ModalOneTimePrintingCost} className=\"form-control mt-1\" name=\"OneTimePrintingCost\" placeholder=\"enter OneTimePrintingCost\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input defaultValue={ModalOtmcRate} onChange={onModalOtmcChange} className=\"form-control mt-4\" name=\"OtmcRate\" placeholder=\"enter rate \" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">One Time Mounting Cost </label>\n                                <input defaultValue={ModalOneTimeMountingCost} className=\"form-control mt-1\" name=\"OneTimeMountingCost\" placeholder=\"enter one time mounting cost\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Total</label>\n                                <input defaultValue={ModalTotal} className=\"form-control mt-1\" name=\"Total\" placeholder=\"enter total\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label>Booking From</label>\n                                <input defaultValue={ModalAvailabilityFrom} onChange={onModalAvailabilityFromChange} className=\"form-control mt-1\" name=\"Availability from\" placeholder=\"enter availability\" />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label>Booking To</label>\n                                <input defaultValue={ModalAvailabilityTo} onChange={onModalAvailabilityToChange} className=\"form-control mt-1\" name=\"Availability to\" placeholder=\"enter availability\" />\n                            </div>\n                        </div>\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <input type=\"text\" defaultValue={Modalhoarding_insurance} name=\"hoarding_insurance\" onChange={onModalhoarding_insuranceChange} className=\"form-control mt-1\" placeholder=\"enter hoarding insurance\" required />\n                            </div>\n\n\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Hoarding Insurance From</label>\n                                <input type=\"date\" defaultValue={Modalhoarding_insurance_from} name=\"hoarding_insurance_from\" onChange={onModalhoarding_insurance_fromChange} className=\"form-control mt-1\" placeholder=\"enter hoarding insurance from\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Hoarding Insurance To</label>\n                                <input type=\"date\" name=\"errection_year \" defaultValue={Modalhoarding_insurance_to} onChange={onModalhoarding_insurance_toChange} className=\"form-control mt-1\" placeholder=\"enter hoarding insurance to\" required />\n                            </div>\n\n\n                        </div><br />\n                        <div className=\"row mt-2\">\n                            {/* <div className=\"field col-md-4\">\n                            <label className=\"required\">Fabrication selection</label>\n                            <input type=\"text\" defaultValue={Modalfabrication_selection}name=\"fabrication_selection\" onChange={onModalfabrication_selectionChange} className=\"form-control mt-1\" placeholder=\"enter availability\" required />\n                        </div> */}\n                            <div className=\"field col-md-4\">\n                                <label>Erection Selection</label>\n                                <select defaultValue={ModalErection} className=\"form-control\" onChange={onModalErectionChange} >\n                                    {read_hoarding_erection.data.hoarding_errection.map((erection) => (\n                                        <option id={erection.id} value={erection.id}>{erection.location}</option>\n                                    ))}\n                                </select>\n\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label>Status</label>\n                                <select defaultValue={ModalStatus} className=\"form-control\" onChange={onModalStatusChange} >\n                                    <option>Select...</option>\n                                    <option>Immediate</option>\n                                    <option>Booked</option>\n                                    <option>Hold</option>\n                                </select>\n\n                            </div>\n\n\n                        </div><br />\n\n                        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                            <br /><br />\n                            {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                        </div>\n\n\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 style={{ width: '100%', textAlign: 'center' }}>INVENTORY MASTER</h4>\n                <br />\n                <form className=\"form-group\" onSubmit={onFormSubmit} padding=\"2px\">\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            <Select\n                                name=\"state\"\n                                options={\n                                    read_geolocations.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                }\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">District</label>\n                            <Select\n                                name=\"district\"\n                                options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"DISTRICT\" && currentElement.parent_id === State) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onDistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                            {/* <input type=\"text\" name=\"State\" onChange={onInputChange} className=\"form-control mt-1\" required placeholder=\"enter state\" title=\"Please enter Alphabets.\" /> */}\n                            {/* <select onChange={onStateChange} type=\"text\" name=\"State\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                                <option>--SELECT--</option>\n                                {read_states.data.states.map(state => (\n                                    <option key={state.id} value={state.id}>{state.name}</option>\n                                ))}\n                            </select> */}\n\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Subdistrict</label>\n                            {/* <input type=\"city/village\" name=\"City_Village\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter village\" required title=\"Please enter valid contact number\" /> */}\n                            {/* <select onChange={onCity_VillageChange} type=\"text\" name=\"City_Village\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                                <option>--SELECT--</option>\n                                {read_cities.data.cities.map(city => (\n                                    <option key={city.id} value={city.id}>{city.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"subdistrict\"\n                                options={read_geolocations.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"SUBDISTRICT\" && currentElement.parent_id === District) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onSubdistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n\n\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <input type=\"location\" name=\"Location\" onChange={onLocationChange} className=\"form-control mt-1\" placeholder=\"enter location\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Media Type</label>\n                            {/* <input type=\"mediatype\" name=\"Media_Type\" onChange={onMedia_TypeChange} className=\"form-control mt-1\" placeholder=\"enter media type \" required /> */}\n                            <Select\n                                name=\"Media_Type\"\n                                options={media_type.data.media_type_master}\n                                onChange={onMedia_TypeChange}\n                                getOptionLabel={(option) => option.media_type}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Illumination</label>\n\n                            {/* <input type=\"text\" name=\"Illumination\" onChange={onIlluminationChange} className=\"form-control mt-1\" placeholder=\"enter illumination\" required /> */}\n                            <Select\n                                name=\"Illumination\"\n                                options={[\n                                    { value: 'F LIT', label: 'F LIT' },\n                                    { value: 'NON LIT', label: 'NON LIT' }\n                                ]}\n                                onChange={onIlluminationChange}\n                                getOptionLabel={(option) => option.label}\n                                getOptionValue={(option) => option.value}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Width</label>\n                            <input type=\"number\" name=\"Width\" onChange={onWidthChange} className=\"form-control mt-1\" placeholder=\"enter width\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Height </label>\n                            <input type=\"number\" name=\"Height\" onChange={onHeightChange} className=\"form-control mt-1\" placeholder=\"enter height\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">No of Display </label>\n                            <input type=\"number\" name=\"NoofDisplay\" onChange={onNoofDisplayChange} className=\"form-control mt-1\" placeholder=\"enter no of display\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Total Sq.Ft </label>\n                            <input value={Totalsqft} type=\"number\" name=\"Totalsqft\" className=\"form-control mt-1\" placeholder=\"enter total sq.ft\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rate</label>\n                            <input type=\"number\" name=\"DisplayRatePMRate\" onChange={onDrpmRateChange} className=\"form-control mt-1\" placeholder=\"enter rate of display rate P.M\" required />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Display Rate P.M </label>\n                            <input value={DisplayRatePM} type=\"number\" name=\"DisplayRatePM\" className=\"form-control mt-1\" placeholder=\"enter display rate P.M\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Printing Rate Per Sq ft</label>\n                            <input type=\"number\" name=\"OneTimePrintingCostRate\" onChange={onOtpcChange} className=\"form-control mt-1\" placeholder=\"enter one time cost rate\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">One Time Printing Cost</label>\n                            <input value={OneTimePrintingCost} type=\"number\" name=\"OneTimePrintingCost\" className=\"form-control mt-2\" placeholder=\"enter one time printing cost\" required />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mounting Rate Per Sq ft</label>\n                            <input type=\"number\" name=\"OneTimeMountingCostRate\" onChange={onOtmcChange} className=\"form-control mt-1\" placeholder=\"enter one time mounting cost rate\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">One Time Mounting Cost </label>\n                            <input value={OneTimeMountingCost} type=\"number\" name=\"OneTimeMountingCost\" className=\"form-control mt-1\" placeholder=\"enter one time mounting cost\" required />\n                        </div>\n\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Total</label>\n                            <input value={Total} type=\"number\" name=\"Total\" className=\"form-control mt-1\" placeholder=\"enter total\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"\">Booking From</label>\n                            <input type=\"date\" name=\"Availability From\" onChange={onAvailabilityFromChange} className=\"form-control mt-1\" placeholder=\"enter availability\" />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"\">Booking To</label>\n                            <input type=\"date\" name=\"Availability To\" onChange={onAvailabilityToChange} className=\"form-control mt-1\" placeholder=\"enter availability\" />\n                        </div>\n\n                        <br />\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Hoarding Insurance</label>\n                            <input type=\"text\" name=\"hoarding_insurance\" onChange={onhoarding_insuranceChange} className=\"form-control mt-1\" placeholder=\"enter total\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Hoarding Insurance From</label>\n                            <input type=\"date\" name=\"hoardingInsuranceFrom\" onChange={onHoardingInsuranceFromChange} className=\"form-control mt-1\" placeholder=\"enter hoarding insurance from\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Hoarding Insurance To</label>\n                            <input type=\"date\" name=\"errection_year \" onChange={onHoardingInsuranceToChange} className=\"form-control mt-1\" placeholder=\"enter insurance to\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        {/* <div className=\"field col-md-4\">\n                    <label className=\"required\">Fabricator</label>\n                    <select className=\"form-control\" onChange={onfabrication_selectionChange}>\n                                <option>Select...</option>\n                                {read_fabricator.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                        <div className=\"field col-md-4\">\n                            <label>Erection Selection</label>\n                            <select className=\"form-control\" onChange={onErectionChange} >\n                                <option>Select...</option>\n                                {read_hoarding_erection.data.hoarding_errection.map((erection) => (\n                                    <option id={erection.id} value={erection.id}>{erection.location}</option>\n                                ))}\n                            </select>\n\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Status</label>\n                            <select className=\"form-control\" onChange={onStatusChange} >\n                                <option>Select...</option>\n                                <option>Immediate</option>\n                                <option>Booked</option>\n                                <option>Hold</option>\n                            </select>\n                        </div>\n\n\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br /><br />\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                    </div>\n                </form>\n\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Category } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getLabour_Master=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n  \n\n`\n\nconst InsertLabour_Master =gql`\nmutation MyMutation($labour_category: String = \"\") {\n    insert_labour_category_master_one(object: {labour_category: $labour_category}) {\n      id\n    }\n  }\n  \n\n`\n\nconst UpdateLabour_Master =gql`\nmutation MyMutation($id: Int = \"\", $labour_category: String = \"\") {\n    update_labour_category_master_by_pk(pk_columns: {id: $id}, _set: { labour_category: $labour_category}) {\n      id\n      labour_category\n    }\n  }\n  \n\n\n`\n\n// const Deletelabour_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_labour_category_master_by_pk(id: $id) {\n//       id\n//       labour_category\n//     }\n//   }\n  \n// `\n\nconst Deletelabour_Master = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 10) {\n    update_labour_category_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\n\n\n\n\nexport default function Labour_Category_Master() {\n    \n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\nconst[modallabour,setmodallabour]=useState({\n    id:'',\n    labour_category:'',\n})\n\n\nconst onModalInputChange =(e) =>{\n    setmodallabour({ ...modallabour, [e.target.name]: e.target.value });\n  }\n  \n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modallabour);\n    Update_labourmasterData({ variables: { id: modallabour.id, labour_category: modallabour.labour_category } })\n   \n    handleClose();\n  }\n\n\n\n    const[Insert_labourmasterData]=useMutation(InsertLabour_Master);\n    const[Update_labourmasterData]=useMutation(UpdateLabour_Master);\n    const[delete_labourmasterdata]=useMutation(Deletelabour_Master);\n    const onFormSubmit=(e)=>{\n        e.preventDefault();\n        console.log(e.target)\n        Insert_labourmasterData({variables:{labour_category: e.target[0].value}})\n        toast.configure();\n        toast.success('Successfully Inserted')\n       }\n       \n       const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setmodallabour({\n            id: row.id,\n            labour_category: row.labour_category\n        })\n    }\n\n    const onDelete = (id) => {\n        console.log(id);\n        delete_labourmasterdata({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const getlabour_category_master = useSubscription(getLabour_Master);\n    if (getlabour_category_master.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }   \n    console.log(getlabour_category_master.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'labour_category',\n            headerName: 'Labour Category ',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\"onClick={()=>{onEdit(params.row)}}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n    \n\n    const rows=getlabour_category_master.data.labour_category_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n        <div>\n            \n        <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>labour Category Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modallabour.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">labour Category master</label>\n                                        <input defaultValue={modallabour.labour_category} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"labour_category\" type=\"text\" placeholder='Enter labour_category' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n\n\n\n\n\n\n\n        <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Labour Category Master</h3>\n\n<br/>\n                            <form onSubmit={onFormSubmit} className=\"form-group\" >\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Labour Category</label>\n                                        <input placeholder=\"enter labour category\"  className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"labour_category\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        // components={{\n                        //   Toolbar: GridToolbar,\n                        // }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Category } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getPayment_master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    payment_type(where: {isDeleted: {_eq: $_eq}}){\n      id\n      payment_type\n    }\n  }\n  \n  \n\n`\n\n\nconst InsertPayment_Master = gql`\nmutation MyMutation($payment_type: String = \"\") {\n    insert_payment_type_one(object: {payment_type: $payment_type}) {\n      id\n    }\n  }\n  \n\n`\n\nconst UpdatePayment_Master = gql`\nmutation MyMutation($id: Int = \"\", $payment_type: String = \"\") {\n    update_payment_type_by_pk(pk_columns: {id: $id}, _set: { payment_type: $payment_type}) {\n      id\n      payment_type\n    }\n  }\n  \n\n\n`\n\n// const DeletePayment_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_payment_type_by_pk(id: $id) {\n//       id\n//       payment_type\n//     }\n//   }\n  \n// `\n\nconst DeletePayment_Master = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_payment_type_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      isDeleted\n    }\n  }\n  \n`\n\n\nexport default function Payment_Type() {\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [modalpayment, setmodalpayment] = useState({\n        id: '',\n        payment_type: '',\n    })\n\n\n    const onModalInputChange = (e) => {\n        setmodalpayment({ ...modalpayment, [e.target.name]: e.target.value });\n    }\n\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(modalpayment);\n        Update_paymenttypeData({ variables: { id: modalpayment.id, payment_type: modalpayment.payment_type } })\n\n        handleClose();\n    }\n    const [Insert_paymenttypeData] = useMutation(InsertPayment_Master);\n    const [Update_paymenttypeData] = useMutation(UpdatePayment_Master);\n    const [delete_paymenttypeData] = useMutation(DeletePayment_Master);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        Insert_paymenttypeData({ variables: { payment_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setmodalpayment({\n            id: row.id,\n            payment_type: row.payment_type\n        })\n    }\n\n\n\n\n    const onDelete = (id) => {\n        console.log(id);\n        delete_paymenttypeData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const getpayment_type = useSubscription(getPayment_master);\n    if (getpayment_type.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getpayment_type.error) {\n        return \"error\" + getpayment_type.error;\n    }\n    console.log(getpayment_type.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'payment_type',\n            headerName: 'Payment Type ',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\" onClick={() => { onEdit(params.row) }}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    const rows = getpayment_type.data.payment_type;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n            <div>\n\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Payment Type Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6 text-right\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={modalpayment.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter payment type' required />\n                                </div>\n                                <div className=\"field col-md-6 text-right\">\n                                    <label className=\"required\">labour Category master</label>\n                                    <input defaultValue={modalpayment.payment_type} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"payment_type\" type=\"text\" placeholder='Enter payment' required />\n                                </div>\n                            </div><br />\n\n                            <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n\n\n\n\n\n\n\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br />\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Payment Type</h3>\n\n                            <br />\n                            <form onSubmit={onFormSubmit} className=\"form-group\" >\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Payment_Type</label>\n                                        <input placeholder=\"enter Payment Type\" className=\"form-control mt-2\" style={{ marginTop: '10px', width: '80%' }} name=\"payment_type\" type=\"text\" required />\n                                    </div>\n                                </div>\n                                <br />\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                          Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n\n    )\n}","import React, { useState } from 'react';\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n// import Button from '@restart/ui/esm/Button';\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\nconst getAVAILABILITY = gql`\nsubscription MySubscription {\n    availability {\n      id\n      availability\n    }\n  } \n`\nconst DELETE_AVAILABILITY = gql`\n  mutation MyMutation($id: Int = 10) {\n    delete_availability_by_pk(id: $id) {\n      id\n      availability\n    }\n  }\n`\nconst INSERT_AVAILABILITY = gql`\nmutation MyMutation($availability: String = \"\") {\n    insert_availability_one(object: {availability: $availability}) {\n      id\n      availability\n    }\n  }  \n`\nconst UPDATE_AVAILABILITY = gql`\nmutation MyMutation($id: Int!, $availability: String!) {\n    update_availability_by_pk(pk_columns: {id: $id}, _set: {availability: $availability}) {\n      availability\n    }\n  }\n  \n  \n    \n`\nfunction Availability() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [availability, setAvailability] = useState({\n        availability: '',\n    }\n    )\n\n    const [modelAvailability, setModelAvailability] = useState({\n        id: '',\n        availability: '',\n    }\n    )\n    const onInputChange = (e) => {\n        setAvailability({ ...availability, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target[0].value)\n        insert_availability({ variables: { availability: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setModelAvailability({\n            id: row.id,\n            availability: row.availability\n        })\n    }\n    const onModalInputChange = (e) => {\n        setModelAvailability({ ...modelAvailability, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(modelAvailability)\n        update_availability({ variables: { id: modelAvailability.id, availability: modelAvailability.availability } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const [insert_availability] = useMutation(INSERT_AVAILABILITY);\n    const [update_availability] = useMutation(UPDATE_AVAILABILITY);\n    const [delete_availability] = useMutation(DELETE_AVAILABILITY);\n    const onDelete = (id) => {\n        console.log(id);\n        delete_availability({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const getAvailability = useSubscription(getAVAILABILITY);\n    if (getAvailability.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getAvailability.error) {\n        return \"error\" + getAvailability.error;\n    }\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'availability',\n            headerName: 'Availability',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { onEdit(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    //console.log(getAvailability.data);\n    const rows = getAvailability.data.availability;\n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Availability</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modelAvailability.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">Availability Master</label>\n                                        <input defaultValue={modelAvailability.availability} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"availability\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit' style={{ marginLeft: '80px' }}>Save</button>  \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Availability Master</h3>\n\n<br/>\n                            <form className=\"form-group\" onSubmit={onFormSubmit}>\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Availability</label>\n                                        <input placeholder=\"enter availability\" onChange={onInputChange} className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"availability\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '20px', width:'8%' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'8%' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}\nexport default Availability;","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport exportFromJSON from 'export-from-json'\n\n\nconst READ_MEDIA = gql`\nquery MyQuery($_eq: String = \"false\") {\n    media_type_master(where: {isDeleted: {_eq: $_eq}}) {\n      id\n      media_type\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery($_eq: String = \"true\"){\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      hoarding_errection {\n        civil_contractor\n        civil_contractor_labour_payment\n        civil_material\n        electric_material_purchase\n        electrician_labour_payment\n        electrician_selection\n        excavator\n        excavator_charges\n        fabrication_material\n        fabricator\n        fabricator_labour_payment\n        id\n        isDeleted\n        laborMasterByElectricianSelection {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        laborMasterByExcavator {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        laborMasterByFabricator {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          mobile_no\n          labor_type\n          name\n          pan\n        }\n        labor_master {\n          address\n          bank_id\n          gst_no\n          id\n          isDeleted\n          labor_type\n          mobile_no\n          name\n          pan\n        }\n        location\n        payment\n        permission\n        transport_charges\n      }\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n    }\n  }  \n`\n\n\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\n// const DELETE_INQUIRY = gql`\n// mutation MyMutation($id: Int!) {\n//   delete_inquiry_master_by_pk(id: $id) {\n//     id\n//   }\n// }\n// `\n\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    inquiry_master(where: {isDeleted: {_eq: $_eq}}){\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        DisplayRatePM\n    \n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        Total\n        Totalsqft\n        Width\n        \n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        \n      }\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\nconst SEARCH_INVENTORYALL = gql`\nquery MyQuery($state:Int!,$district:Int!,$subdistrict:Int!,$media_type:Int!,$illumination:String=\"\",$_gt:date!){\n    Inventory_Master(where: {District: {_eq:$district}, Media_Type: {_eq:$media_type}, State: {_eq:$state}, Subdistrict: {_eq:$subdistrict}, Illumination: {_eq:$illumination}, AvailabilityTo: {_lt:$_gt}}) {\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      hoarding_errection {\n        civil_contractor\n        civil_contractor_labour_payment\n        civil_material\n        electric_material_purchase\n        electrician_labour_payment\n        electrician_selection\n        excavator\n        excavator_charges\n        fabrication_material\n        isDeleted\n        id\n        fabricator_labour_payment\n        fabricator\n      }\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n    }\n  }  \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($state:Int!,$district:Int!,$subdistrict:Int!,$media_type:Int!,$illumination:String=\"\",$_gt:date!){\n    Inventory_Master(where: {District: {_eq:$district}, Media_Type: {_eq:$media_type}, State: {_eq:$state}, Subdistrict: {_eq:$subdistrict}, Illumination: {_eq:$illumination}, AvailabilityTo: {_lt:$_gt}}) {\n      AvailabilityFrom\n      AvailabilityTo\n      BookedBy\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Status\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n      erection\n      geoLocationByState {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geoLocationBySubdistrict {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      geo_location {\n        external_id\n        id\n        location_type\n        name\n        parent_id\n        pin\n      }\n      hoarding_errection {\n        civil_contractor\n        civil_contractor_labour_payment\n        civil_material\n        electric_material_purchase\n        electrician_labour_payment\n        electrician_selection\n        excavator\n        excavator_charges\n        fabrication_material\n        isDeleted\n        id\n        fabricator_labour_payment\n        fabricator\n      }\n      hoarding_insurance\n      hoarding_insurance_from\n      hoarding_insurance_to\n      id\n      isDeleted\n      media_type_master {\n        id\n        isDeleted\n        media_type\n      }\n    }\n  }  \n`\nconst READ_STATES = gql`\nquery MyQuery {\n    geo_locations {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\nconst READ_DISTRICT = gql`\nquery MyQuery($_eq: Int!) {\n    geo_locations(where: {parent_id: {_eq: $_eq}}) {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\nconst READ_SUBDISTRICT = gql`\nquery MyQuery($_eq: Int!) {\n    geo_locations(where: {parent_id: {_eq: $_eq}}) {\n      pin\n      parent_id\n      name\n      location_type\n      id\n      external_id\n    }\n  }  \n`\nexport default function Inquiry_Master() {\n    //variables\n    var data_state = \"\";\n    var data_district = \"\";\n    var data_subdistrict = \"\";\n    //States\n    const [selected, setSelected] = useState();\n    const [showhide, setShowhide] = useState('hidden');\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [state, setState] = useState();\n    const [district, setDistrict] = useState();\n    const [subdistrict, setSubdistrict] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n\n    //Form states\n    const [sol, setSol] = useState();\n    const [name, setName] = useState();\n    const [number, setNumber] = useState();\n    const [emailid, setEmailid] = useState();\n    const [whatsappNumber, setWhatsappNumber] = useState();\n    const [startDate, setStartDate] = useState();\n\n    const [media_type, setMedia_type] = useState();\n    const [status, setStatus] = useState();\n    //Modal states\n    const [modalId, setModalId] = useState();\n    const [modalSol, setModalSol] = useState();\n    const [modalName, setModalName] = useState();\n    const [modalNumber, setModalNumber] = useState();\n    const [modalEmailid, setModalEmailid] = useState();\n    const [modalWhatsappNumber, setModalWhatsappNumber] = useState();\n    const [modalStartDate, setModalStartDate] = useState();\n\n    const [modalMedia_type, setModalMedia_type] = useState();\n    const [modalStatus, setModalStatus] = useState();\n    const [modalLocation, setModalLocation] = useState();\n    //Queries\n    const [insert_inquiry] = useMutation(INSERT_INQUIRY);\n    const [update_inquiry] = useMutation(UPDATE_INQUIRY);\n    const [delete_inquiry] = useMutation(DELETE_INQUIRY);\n    // const [get_district, read_district] = useLazyQuery(READ_DISTRICT);\n    // const [get_subdistrict, read_subdistrict] = useLazyQuery(READ_SUBDISTRICT);\n    const read_media = useQuery(READ_MEDIA);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n    const read_states = useQuery(READ_STATES);\n    const [loadInventoryAll, invData] = useLazyQuery(SEARCH_INVENTORYALL);\n\n    //Loader\n    if (read_states.loading || read_inquiry.loading || read_inventory.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n        // get_district({ variables: { _eq: parseInt(state_data.id) } })\n    }\n    const onDistrictChange = (district_data) => {\n        setDistrict(district_data.id)\n        // get_subdistrict({ variables: { _eq: parseInt(district_data.id) } })\n    }\n    const onSubdistrictChange = (subdistrict_data) => {\n        setSubdistrict(subdistrict_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        setSearchDate(e.target.value);\n    }\n\n    const onSearch = (e) => {\n        setShowhide(\"visible\");\n        e.preventDefault();\n        if (illumination === \"ALL\") {\n            loadInventoryAll({ variables: { state: state, district: district, subdistrict: subdistrict, illumination: \"\", media_type: searchMediaType, _gt: searchDate } })\n        }\n        else {\n            loadInventory({ variables: { state: state, district: district, subdistrict: subdistrict, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        }\n    }\n    const onFormSOLChange = (e) => {\n        setSol(e.target.value);\n    }\n    const onFormNameChange = (e) => {\n        setName(e.target.value)\n    }\n    const onFormNumberChange = (e) => {\n        setNumber(e.target.value)\n    }\n    const onFormEmailIdChange = (e) => {\n        setEmailid(e.target.value)\n    }\n    const onFormWhatsappNumberChange = (e) => {\n        setWhatsappNumber(e.target.value);\n    }\n    const onStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    }\n\n    const onMediaChange = (e) => {\n        setMedia_type(e.target.value);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.target.value);\n    }\n    //Modal Statets\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value)\n    }\n    const onModalSOLChange = (e) => {\n        setModalSol(e.target.value);\n    }\n    const onModalNameChange = (e) => {\n        setModalName(e.target.value)\n    }\n    const onModalNumberChange = (e) => {\n        setModalNumber(e.target.value)\n    }\n    const onModalEmail_idChange = (e) => {\n        setModalEmailid(e.target.value)\n    }\n    const onModalWhatsappNumberChange = (e) => {\n        setModalWhatsappNumber(e.target.value);\n    }\n    const onModalLocationChange = (e) => {\n        setModalLocation(e.target.value);\n    }\n    const onModalStartDateChange = (e) => {\n        setModalStartDate(e.target.value);\n    }\n\n    const onModalMediaChange = (e) => {\n        setModalMedia_type(e.target.value);\n    }\n    const onModalStatusChange = (e) => {\n        setModalStatus(e.target.value);\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        for (var i = 0; i < selected.length; i++) {\n            console.log(selected[i]);\n            insert_inquiry({ variables: { sol: sol, name: name, number: number, email_id: emailid, whatsapp_number: whatsappNumber, inventory: selected[i], start_date: startDate, media_type: media_type, status: status } })\n        }\n\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        //console.log(row)\n        handleShow();\n        setModalId(row.id);\n        setModalSol(row.sol);\n        setModalName(row.name);\n        setModalNumber(row.number);\n        setModalEmailid(row.email_id);\n        setModalWhatsappNumber(row.whatsapp_number);\n        setModalStartDate(row.start_date);\n\n        setModalMedia_type(row.media_type);\n        setModalStatus(row.status);\n        setModalLocation(row.Inventory_Master.id)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_inquiry({ variables: { id: modalId, sol: modalSol, name: modalName, number: modalNumber, email_id: modalEmailid, whatsapp_number: modalWhatsappNumber, inventory: modalLocation, start_date: modalStartDate, media_type: modalMedia_type, status: modalStatus } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_inquiry({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const columns1 = [\n        {\n            field: 'id',\n            headerName: 'Id',\n            width: 160,\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 200\n        },\n        {\n            field: 'District',\n            headerName: 'District',\n            width: 200\n        },\n        {\n            field: 'Subdistrict',\n            headerName: 'Subdistrict',\n            width: 200\n        },\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 200\n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Illumination',\n            headerName: 'Illumination',\n            width: 200\n        },\n        {\n            field: 'Width',\n            headerName: 'Width',\n            width: 200\n        },\n        {\n            field: 'Height',\n            headerName: 'Height',\n            width: 200\n        },\n        {\n            field: 'NoofDisplay',\n            headerName: 'No Of Display',\n            width: 200\n        },\n        {\n            field: 'Totalsqft',\n            headerName: 'Total Sq ft',\n            width: 200\n        },\n        {\n            field: 'DrpmRate',\n            headerName: 'DrpmRate',\n            width: 200\n        },\n        {\n            field: 'DisplayRatePM',\n            headerName: 'DisplayRatePM',\n            width: 200\n        },\n        {\n            field: 'OtpcRate',\n            headerName: 'OneTimePrintingCostRate',\n            width: 200\n        },\n        {\n            field: 'OneTimePrintingCost',\n            headerName: 'OneTimePrintingCost',\n            width: 200\n        },\n        {\n            field: 'OtmcRate',\n            headerName: 'OneTimeMountingCostRate',\n            width: 200\n        },\n        {\n            field: 'OneTimeMountingCost',\n            headerName: 'OneTimeMountingCost',\n            width: 200\n        },\n        {\n            field: 'Total',\n            headerName: 'Total',\n            width: 200\n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'Booking From',\n            width: 200\n        },\n        {\n            field: 'AvailabilityTo',\n            headerName: 'Booking To',\n            width: 200\n        },\n    ]\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'sol',\n            headerName: 'Source Of Lead',\n            width: 160\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n        {\n            field: 'number',\n            headerName: 'Number',\n            width: 160,\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email Id',\n            width: 160,\n        },\n        {\n            field: 'whatsapp_number',\n            headerName: 'Whatsapp Number',\n            width: 190\n        },\n        {\n            field: 'start_date',\n            headerName: 'Start Date',\n            width: 190\n        },\n\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_inquiry.data.inquiry_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    const emptyarr = [\n        {\n            id: \"\",\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            DisplayRatePM: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            State: \"\",\n            District: \"\",\n            Subdistrict: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            media_type_master: {\n                id: \"\",\n                media_type: \"\"\n            },\n        }\n    ]\n    var rows1 = emptyarr;\n    //console.log(data);\n    if (illumination === \"ALL\") {\n        if (invData.data) {\n            rows1 = invData.data.Inventory_Master;\n        }\n    }\n    else {\n        if (data) {\n            rows1 = data.Inventory_Master;\n        }\n    }\n\n\n    return (\n        <div>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Customer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Name</label>\n                                    <input defaultValue={modalName} onChange={onModalNameChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Number</label>\n                                    <input defaultValue={modalNumber} onChange={onModalNumberChange} className=\"form-control mt-1\" name=\"contact_person\" type=\"number\" required pattern=\"[789][0-9]{9}\" title=\"Please enter Alphabets.\" />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Email ID</label>\n                                    <input defaultValue={modalEmailid} onChange={onModalEmail_idChange} className=\"form-control mt-1\" name=\"email_id\" type=\"tel\" required pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email\" />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Whatsapp Number</label>\n                                    <input defaultValue={modalWhatsappNumber} onChange={onModalWhatsappNumberChange} className=\"form-control mt-1\" name=\"whatsappNumber\" type=\"number\" pattern=\"[789][0-9]{9}\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Source Of Lead</label>\n                                    <input defaultValue={modalSol} onChange={onModalSOLChange} className=\"form-control mt-1\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Location</label>\n\n                                    <select onChange={onModalLocationChange} className=\"form-control\" defaultValue={modalLocation}>\n                                        <option>Select...</option>\n                                        {read_inventory.data.Inventory_Master.map((inventory) => (\n                                            <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Date</label>\n                                    <input type=\"date\" readonly defaultValue={modalStartDate} onChange={onModalStartDateChange} className=\"form-control mt-1\" required />\n                                </div>\n\n                            </div>\n\n                            <div className=\"row\">\n\n                                <div className=\"field col-md-6\">\n                                    <label>Media Type</label>\n                                    <select defaultValue={modalMedia_type} className=\"form-control\" onChange={onModalMediaChange}>\n                                        <option>Select...</option>\n                                        {read_media.data.media_type_master.map((media) => (\n                                            <option key={media.id} value={media.id}>{media.media_type}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label>Status</label>\n                                    <select defaultValue={modalStatus} onChange={onModalStatusChange} className=\"form-control\">\n                                        <option>Select...</option>\n                                        <option>Completed</option>\n                                        <option>In Process</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <form className=\"form-group\" padding=\"2px\">\n                    <h4 className=\"text-center\">INQUIRY MASTER</h4>\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Source Of Lead</label>\n                            <input placeholder=\"enter source of lead\" type=\"text\" name=\"form_sol\" onChange={onFormSOLChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter source of lead.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Name</label>\n                            <input placeholder=\"enter customer name\" type=\"text\" name=\"form_name\" onChange={onFormNameChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter customer name.\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Number</label>\n                            <input placeholder=\"enter customer number\" type=\"number\" name=\"form_number\" onChange={onFormNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input placeholder=\"enter email id\" type=\"email\" name=\"form_email_id\" onChange={onFormEmailIdChange} className=\"form-control mt-1\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Whatsapp Number</label>\n                            <input placeholder=\"enter whatsapp number\" type=\"number\" name=\"form_whatsapp_no\" onChange={onFormWhatsappNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter whatsapp\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Start Date</label>\n                            <input placeholder=\"enter start date\" type=\"date\" name=\"start_date\" onChange={onStartDateChange} className=\"form-control mt-1\" title=\"Please enter start date\" />\n                        </div>\n                    </div><br />\n\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Media Type</label>\n                            {/* <input placeholder=\"enter media type\" type=\"text\" name=\"media_type\" onChange={onDowntimeChange} className=\"form-control mt-1\" title=\"Please enter media type\" /> */}\n                            <select className=\"form-control\" onChange={onMediaChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div><br />\n                        <div className=\"field col-md-6\">\n                            <label>Status</label>\n                            <select className=\"form-control\" onChange={onStatusChange}>\n                                <option>Select...</option>\n                                <option>Completed</option>\n                                <option>In Process</option>\n                            </select>\n                        </div>\n                    </div>\n\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"8%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            <Select\n                                name=\"state\"\n                                options={\n                                    read_states.data.geo_locations.filter((states) => states.location_type.includes(\"STATE\"))\n                                }\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">District</label>\n                            <Select\n                                name=\"district\"\n                                options={read_states.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"DISTRICT\" && currentElement.parent_id === state) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onDistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Subdistrict</label>\n                            <Select\n                                name=\"subdistrict\"\n                                options={read_states.data.geo_locations.filter(function (currentElement) {\n                                    if (currentElement.location_type === \"SUBDISTRICT\" && currentElement.parent_id === district) {\n                                        //console.log(currentElement);\n                                        return currentElement;\n                                    }\n                                }\n                                )}\n                                onChange={onSubdistrictChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                                <option>ALL</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '21%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Search</button>\n                    </div>\n                    <br />\n                </form>\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={rows1}\n                        columns={columns1}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                        checkboxSelection\n                        onSelectionModelChange={itm => setSelected(itm)}\n                    />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onFormSubmit} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type=\"reset\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n                    </div>\n                </div>\n\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport Card from '@mui/material/Card'\r\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Select from 'react-select'\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport exportFromJSON from 'export-from-json'\r\n\r\n\r\nconst READ_MEDIA = gql`\r\nquery MyQuery($_eq: String = \"false\") {\r\n    media_type_master(where: {isDeleted: {_eq: $_eq}}) {\r\n      id\r\n      media_type\r\n    }\r\n  }\r\n  \r\n`\r\nconst READ_INVENTORY = gql`\r\nquery MyQuery($_eq: String = \"true\"){\r\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\r\n      AvailabilityFrom\r\n      AvailabilityTo\r\n      BookedBy\r\n      DisplayRatePM\r\n      District\r\n      DrpmRate\r\n      Height\r\n      Illumination\r\n      Location\r\n      Media_Type\r\n      NoofDisplay\r\n      OneTimeMountingCost\r\n      OneTimePrintingCost\r\n      OtmcRate\r\n      OtpcRate\r\n      State\r\n      Status\r\n      Subdistrict\r\n      Total\r\n      Totalsqft\r\n      Width\r\n      erection\r\n      geoLocationByState {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geoLocationBySubdistrict {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geo_location {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      hoarding_errection {\r\n        civil_contractor\r\n        civil_contractor_labour_payment\r\n        civil_material\r\n        electric_material_purchase\r\n        electrician_labour_payment\r\n        electrician_selection\r\n        excavator\r\n        excavator_charges\r\n        fabrication_material\r\n        fabricator\r\n        fabricator_labour_payment\r\n        id\r\n        isDeleted\r\n        laborMasterByElectricianSelection {\r\n          address\r\n          bank_id\r\n          gst_no\r\n          id\r\n          isDeleted\r\n          labor_type\r\n          mobile_no\r\n          name\r\n          pan\r\n        }\r\n        laborMasterByExcavator {\r\n          address\r\n          bank_id\r\n          gst_no\r\n          id\r\n          isDeleted\r\n          labor_type\r\n          mobile_no\r\n          name\r\n          pan\r\n        }\r\n        laborMasterByFabricator {\r\n          address\r\n          bank_id\r\n          gst_no\r\n          id\r\n          isDeleted\r\n          mobile_no\r\n          labor_type\r\n          name\r\n          pan\r\n        }\r\n        labor_master {\r\n          address\r\n          bank_id\r\n          gst_no\r\n          id\r\n          isDeleted\r\n          labor_type\r\n          mobile_no\r\n          name\r\n          pan\r\n        }\r\n        location\r\n        payment\r\n        permission\r\n        transport_charges\r\n      }\r\n      hoarding_insurance\r\n      hoarding_insurance_from\r\n      hoarding_insurance_to\r\n      id\r\n      isDeleted\r\n      media_type_master {\r\n        id\r\n        isDeleted\r\n        media_type\r\n      }\r\n    }\r\n  }  \r\n`\r\n\r\n\r\n\r\nconst INSERT_INQUIRY = gql`\r\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$media_type:Int!,$status:String!) {\r\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\r\n      id\r\n    }\r\n  }\r\n`\r\nconst UPDATE_INQUIRY = gql`\r\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$media_type:Int!,$status:String!) {\r\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\r\n      id\r\n    }\r\n  }\r\n`\r\n// const DELETE_INQUIRY = gql`\r\n// mutation MyMutation($id: Int!) {\r\n//   delete_inquiry_master_by_pk(id: $id) {\r\n//     id\r\n//   }\r\n// }\r\n// `\r\n\r\nconst DELETE_INQUIRY = gql`\r\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\r\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst READ_INQUIRY = gql`\r\nsubscription MySubscription($_eq: String = \"false\"){\r\n    inquiry_master(where: {isDeleted: {_eq: $_eq}}){\r\n      email_id\r\n      Inventory_Master {\r\n        AvailabilityFrom\r\n        AvailabilityTo\r\n        DisplayRatePM\r\n    \r\n        DrpmRate\r\n        Height\r\n        Illumination\r\n        Location\r\n        Media_Type\r\n        NoofDisplay\r\n        OneTimeMountingCost\r\n        OneTimePrintingCost\r\n        OtmcRate\r\n        OtpcRate\r\n        Total\r\n        Totalsqft\r\n        Width\r\n        \r\n        hoarding_insurance\r\n        id\r\n        media_type_master {\r\n          id\r\n          media_type\r\n        }\r\n        \r\n      }\r\n      id\r\n      inventory\r\n      name\r\n      number\r\n      sol\r\n      start_date\r\n      whatsapp_number\r\n      media_type\r\n      media_type_master {\r\n        id\r\n        media_type\r\n        }\r\n        status\r\n    }\r\n  }\r\n`\r\nconst SEARCH_INVENTORYALL=gql`\r\nquery MyQuery($state:Int!,$district:Int!,$subdistrict:Int!,$media_type:Int!,$illumination:String=\"\",$_gt:date!){\r\n    Inventory_Master(where: {District: {_eq:$district}, Media_Type: {_eq:$media_type}, State: {_eq:$state}, Subdistrict: {_eq:$subdistrict}, Illumination: {_eq:$illumination}, AvailabilityTo: {_lt:$_gt}}) {\r\n      AvailabilityFrom\r\n      AvailabilityTo\r\n      BookedBy\r\n      DisplayRatePM\r\n      District\r\n      DrpmRate\r\n      Height\r\n      Illumination\r\n      Location\r\n      Media_Type\r\n      NoofDisplay\r\n      OneTimeMountingCost\r\n      OneTimePrintingCost\r\n      OtmcRate\r\n      OtpcRate\r\n      State\r\n      Status\r\n      Subdistrict\r\n      Total\r\n      Totalsqft\r\n      Width\r\n      erection\r\n      geoLocationByState {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geoLocationBySubdistrict {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geo_location {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      hoarding_errection {\r\n        civil_contractor\r\n        civil_contractor_labour_payment\r\n        civil_material\r\n        electric_material_purchase\r\n        electrician_labour_payment\r\n        electrician_selection\r\n        excavator\r\n        excavator_charges\r\n        fabrication_material\r\n        isDeleted\r\n        id\r\n        fabricator_labour_payment\r\n        fabricator\r\n      }\r\n      hoarding_insurance\r\n      hoarding_insurance_from\r\n      hoarding_insurance_to\r\n      id\r\n      isDeleted\r\n      media_type_master {\r\n        id\r\n        isDeleted\r\n        media_type\r\n      }\r\n    }\r\n  }  \r\n`\r\n\r\nconst SEARCH_INVENTORY=gql`\r\nquery MyQuery($state:Int!,$district:Int!,$subdistrict:Int!,$media_type:Int!,$illumination:String=\"\",$_gt:date!){\r\n    Inventory_Master(where: {District: {_eq:$district}, Media_Type: {_eq:$media_type}, State: {_eq:$state}, Subdistrict: {_eq:$subdistrict}, Illumination: {_eq:$illumination}, AvailabilityTo: {_lt:$_gt}}) {\r\n      AvailabilityFrom\r\n      AvailabilityTo\r\n      BookedBy\r\n      DisplayRatePM\r\n      District\r\n      DrpmRate\r\n      Height\r\n      Illumination\r\n      Location\r\n      Media_Type\r\n      NoofDisplay\r\n      OneTimeMountingCost\r\n      OneTimePrintingCost\r\n      OtmcRate\r\n      OtpcRate\r\n      State\r\n      Status\r\n      Subdistrict\r\n      Total\r\n      Totalsqft\r\n      Width\r\n      erection\r\n      geoLocationByState {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geoLocationBySubdistrict {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      geo_location {\r\n        external_id\r\n        id\r\n        location_type\r\n        name\r\n        parent_id\r\n        pin\r\n      }\r\n      hoarding_errection {\r\n        civil_contractor\r\n        civil_contractor_labour_payment\r\n        civil_material\r\n        electric_material_purchase\r\n        electrician_labour_payment\r\n        electrician_selection\r\n        excavator\r\n        excavator_charges\r\n        fabrication_material\r\n        isDeleted\r\n        id\r\n        fabricator_labour_payment\r\n        fabricator\r\n      }\r\n      hoarding_insurance\r\n      hoarding_insurance_from\r\n      hoarding_insurance_to\r\n      id\r\n      isDeleted\r\n      media_type_master {\r\n        id\r\n        isDeleted\r\n        media_type\r\n      }\r\n    }\r\n  }  \r\n`\r\nconst READ_STATES = gql`\r\nquery MyQuery {\r\n    geo_locations {\r\n      pin\r\n      parent_id\r\n      name\r\n      location_type\r\n      id\r\n      external_id\r\n    }\r\n  }  \r\n`\r\n\r\nexport default function Inquiry_Master() {\r\n    //variables\r\n    var data_country = \"\";\r\n    var data_state = \"\";\r\n    var data_city = \"\";\r\n    //States\r\n    const [selected,setSelected] = useState();\r\n    const [showhide, setShowhide] = useState('hidden');\r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [state, setState] = useState();\r\n    const [district, setDistrict] = useState();\r\n    const [subdistrict, setSubdistrict] = useState();\r\n    const [illumination, setIllumination] = useState();\r\n    const [searchMediaType, setSearchMediaType] = useState();\r\n    const [searchDate, setSearchDate] = useState();\r\n    const [location, setLocation] = useState();\r\n    const [inventoryData, setInventoryData] = useState();\r\n\r\n    //Form states\r\n    const [sol, setSol] = useState();\r\n    const [name, setName] = useState();\r\n    const [number, setNumber] = useState();\r\n    const [emailid, setEmailid] = useState();\r\n    const [whatsappNumber, setWhatsappNumber] = useState();\r\n    const [startDate, setStartDate] = useState();\r\n    \r\n    const [media_type, setMedia_type] = useState();\r\n    const [status, setStatus] = useState();\r\n    //Modal states\r\n    const [modalId, setModalId] = useState();\r\n    const [modalSol, setModalSol] = useState();\r\n    const [modalName, setModalName] = useState();\r\n    const [modalNumber, setModalNumber] = useState();\r\n    const [modalEmailid, setModalEmailid] = useState();\r\n    const [modalWhatsappNumber, setModalWhatsappNumber] = useState();\r\n    const [modalStartDate, setModalStartDate] = useState();\r\n\r\n    const [modalMedia_type, setModalMedia_type] = useState();\r\n    const [modalStatus, setModalStatus] = useState();\r\n    const [modalLocation, setModalLocation] = useState();\r\n    //Queries\r\n    const [insert_inquiry] = useMutation(INSERT_INQUIRY);\r\n    const [update_inquiry] = useMutation(UPDATE_INQUIRY);\r\n    const [delete_inquiry] = useMutation(DELETE_INQUIRY);\r\n    const read_media = useQuery(READ_MEDIA);\r\n    const read_inventory = useQuery(READ_INVENTORY);\r\n    const read_inquiry = useSubscription(READ_INQUIRY);\r\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\r\n    const read_states = useQuery(READ_STATES);\r\n    const [loadInventoryAll, invData] = useLazyQuery(SEARCH_INVENTORYALL);\r\n\r\n    //Loader\r\n    if (read_states.loading||read_inquiry.loading || read_inventory.loading ) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\r\n\r\n    const onStateChange = (state_data) => {\r\n        setState(state_data.id)\r\n    }\r\n    const onDistrictChange = (district_data) => {\r\n        setDistrict(district_data.id)\r\n    }\r\n    const onSubdistrictChange = (subdistrict_data) => {\r\n        setSubdistrict(subdistrict_data.id);\r\n    }\r\n    const onIlluminationChange = (e) => {\r\n        setIllumination(e.target.value);\r\n    }\r\n    const onsearchMediaTypeChange = (e) => {\r\n        setSearchMediaType(e.target.value)\r\n    }\r\n    const onDateChange = (e) => {\r\n        setSearchDate(e.target.value);\r\n    }\r\n    \r\n    const onSearch = (e) => {\r\n        setShowhide(\"visible\");\r\n        e.preventDefault();\r\n        if(illumination===\"ALL\")\r\n        {\r\n            loadInventoryAll({ variables: { state: state, district: district, subdistrict: subdistrict, illumination: \"\", media_type: searchMediaType, _gt: searchDate } })   \r\n        }\r\n        else\r\n        {\r\n            loadInventory({ variables: { state: state, district: district, subdistrict: subdistrict, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\r\n        }\r\n    }\r\n    const onFormSOLChange = (e) => {\r\n        setSol(e.target.value);\r\n    }\r\n    const onFormNameChange = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    const onFormNumberChange = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n    const onFormEmailIdChange = (e) => {\r\n        setEmailid(e.target.value)\r\n    }\r\n    const onFormWhatsappNumberChange = (e) => {\r\n        setWhatsappNumber(e.target.value);\r\n    }\r\n    const onStartDateChange = (e) => {\r\n        setStartDate(e.target.value);\r\n    }\r\n    \r\n    const onMediaChange = (e) => {\r\n        setMedia_type(e.target.value);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    //Modal Statets\r\n    const onModalIdChange = (e) => {\r\n        setModalId(e.target.value)\r\n    }\r\n    const onModalSOLChange = (e) => {\r\n        setModalSol(e.target.value);\r\n    }\r\n    const onModalNameChange = (e) => {\r\n        setModalName(e.target.value)\r\n    }\r\n    const onModalNumberChange = (e) => {\r\n        setModalNumber(e.target.value)\r\n    }\r\n    const onModalEmail_idChange = (e) => {\r\n        setModalEmailid(e.target.value)\r\n    }\r\n    const onModalWhatsappNumberChange = (e) => {\r\n        setModalWhatsappNumber(e.target.value);\r\n    }\r\n    const onModalLocationChange = (e) => {\r\n        setModalLocation(e.target.value);\r\n    }\r\n    const onModalStartDateChange = (e) => {\r\n        setModalStartDate(e.target.value);\r\n    }\r\n    \r\n    const onModalMediaChange = (e) => {\r\n        setModalMedia_type(e.target.value);\r\n    }\r\n    const onModalStatusChange = (e) => {\r\n        setModalStatus(e.target.value);\r\n    }\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        for(var i=0;i<selected.length;i++)\r\n        {   \r\n            console.log(selected[i]);\r\n            insert_inquiry({ variables: { sol: sol, name: name, number: number, email_id: emailid, whatsapp_number: whatsappNumber, inventory:selected[i] , start_date: startDate, media_type: media_type, status: status } })\r\n        }\r\n        \r\n        toast.configure();\r\n        toast.success('Successfully Inserted')\r\n    }\r\n    const onEdit = (row) => {\r\n        //console.log(row)\r\n        handleShow();\r\n        setModalId(row.id);\r\n        setModalSol(row.sol);\r\n        setModalName(row.name);\r\n        setModalNumber(row.number);\r\n        setModalEmailid(row.email_id);\r\n        setModalWhatsappNumber(row.whatsapp_number);\r\n        setModalStartDate(row.start_date);\r\n        \r\n        setModalMedia_type(row.media_type);\r\n        setModalStatus(row.status);\r\n        setModalLocation(row.Inventory_Master.id)\r\n    }\r\n    const onModalFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        update_inquiry({ variables: { id: modalId, sol: modalSol, name: modalName, number: modalNumber, email_id: modalEmailid, whatsapp_number: modalWhatsappNumber, inventory: modalLocation, start_date: modalStartDate,  media_type: modalMedia_type, status: modalStatus } })\r\n        handleClose();\r\n        toast.configure();\r\n        toast.warning('Successfully Updated')\r\n    }\r\n    const onDelete = (id) => {\r\n        delete_inquiry({ variables: { id: id } })\r\n        toast.configure();\r\n        toast.error('Successfully Deleted')\r\n    }\r\n   \r\n    const columns1 = [\r\n        {\r\n            field:'id',\r\n            headerName:'Id',\r\n            width:160,\r\n        },\r\n        { \r\n            field: 'State', \r\n            headerName: 'State', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'District', \r\n            headerName: 'District', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Subdistrict', \r\n            headerName: 'Subdistrict', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Location', \r\n            headerName: 'Location', \r\n            width: 200 \r\n        },\r\n        {\r\n            field: 'Media_Type',\r\n            headerName: 'Media_Type',\r\n            width: 180,\r\n            valueGetter: (params) => {\r\n                return params.row.media_type_master.media_type;\r\n            }\r\n        },\r\n        { \r\n            field: 'Illumination', \r\n            headerName: 'Illumination', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Width', \r\n            headerName: 'Width', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Height', \r\n            headerName: 'Height', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'NoofDisplay', \r\n            headerName: 'No Of Display', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Totalsqft', \r\n            headerName: 'Total Sq ft', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'DrpmRate', \r\n            headerName: 'DrpmRate', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'DisplayRatePM', \r\n            headerName: 'DisplayRatePM', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'OtpcRate', \r\n            headerName: 'OneTimePrintingCostRate', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'OneTimePrintingCost', \r\n            headerName: 'OneTimePrintingCost', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'OtmcRate', \r\n            headerName: 'OneTimeMountingCostRate', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'OneTimeMountingCost', \r\n            headerName: 'OneTimeMountingCost', \r\n            width: 200 \r\n        },\r\n        { \r\n            field: 'Total', \r\n            headerName: 'Total', \r\n            width: 200 \r\n        },\r\n        {\r\n            field: 'AvailabilityFrom',\r\n            headerName: 'Booking From',\r\n            width: 200\r\n        },\r\n        { \r\n            field: 'AvailabilityTo', \r\n            headerName: 'Booking To', \r\n            width: 200 \r\n        },\r\n    ]\r\n    const columns = [\r\n        {\r\n            field: 'sno',\r\n            headerName: 'Serial No',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'sol',\r\n            headerName: 'Source Of Lead',\r\n            width: 160\r\n        },\r\n        {\r\n            field: 'name',\r\n            headerName: 'Name',\r\n            width: 160\r\n        },\r\n        {\r\n            field: 'number',\r\n            headerName: 'Number',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'email_id',\r\n            headerName: 'Email Id',\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'whatsapp_number',\r\n            headerName: 'Whatsapp Number',\r\n            width: 190\r\n        },\r\n        {\r\n            field: 'start_date',\r\n            headerName: 'Start Date',\r\n            width: 190\r\n        },\r\n        \r\n        {\r\n            field: 'Media_Type',\r\n            headerName: 'Media_Type',\r\n            width: 180,\r\n            valueGetter: (params) => {\r\n                return params.row.media_type_master.media_type;\r\n            }\r\n        },\r\n        {\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            width: 190\r\n        },\r\n        {\r\n            field: 'inventory',\r\n            headerName: 'Location',\r\n            width: 190,\r\n            valueGetter: (params) => {\r\n                return params.row.Inventory_Master.Location;\r\n            }\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div className=\"\">\r\n                        \r\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\r\n                        <button onClick={() => {\r\n                            const confirmBox = window.confirm(\r\n                                \"Do you really want to delete?\"\r\n                            )\r\n                            if (confirmBox === true) {\r\n                                onDelete(params.row.id)\r\n                            }\r\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n    ];\r\n    const rows = read_inquiry.data.inquiry_master;\r\n    let newData = []\r\n    rows.map((item, index) => {\r\n        newData.push({ sno: index + 1, ...item })\r\n    })\r\n    const emptyarr = [\r\n        {\r\n            id:\"\",\r\n            AvailabilityFrom: \"\",\r\n            AvailabilityTo: \"\",\r\n            DisplayRatePM: \"\",\r\n            DrpmRate: \"\",\r\n            Height: \"\",\r\n            Illumination: \"\",\r\n            State:\"\",\r\n            District:\"\",\r\n            Subdistrict:\"\",\r\n            Location: \"\",\r\n            Media_Type: \"\",\r\n            NoofDisplay: \"\",\r\n            OneTimeMountingCost: \"\",\r\n            OneTimePrintingCost: \"\",\r\n            OtmcRate: \"\",\r\n            OtpcRate: \"\",\r\n            Total: \"\",\r\n            Totalsqft: \"\",\r\n            Width: \"\",\r\n            media_type_master:{\r\n                id: \"\",\r\n                media_type: \"\"\r\n            },\r\n        }\r\n    ]\r\n    var rows1 = emptyarr;\r\n    //console.log(data);\r\n    if(illumination===\"ALL\")\r\n    {\r\n        if(invData.data)\r\n        {\r\n        rows1=invData.data.Inventory_Master;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if(data)\r\n        {\r\n        rows1=data.Inventory_Master;\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Card variant=\"outlined\" className=\"form-card\" style={{\r\n                margin: \"2%\",\r\n                padding: \"2%\",\r\n                background: \"#FFFFFF\",\r\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\r\n                borderRadius: \"10px\"\r\n            }}>\r\n                <Modal show={showModal} onHide={handleClose}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Edit Customer</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <form className=\"form-group\" onSubmit={onModalFormSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">ID</label>\r\n                                    <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Name</label>\r\n                                    <input defaultValue={modalName} onChange={onModalNameChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Number</label>\r\n                                    <input defaultValue={modalNumber} onChange={onModalNumberChange} className=\"form-control mt-1\" name=\"contact_person\" type=\"number\" required pattern=\"[789][0-9]{9}\" title=\"Please enter Alphabets.\" />\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Email ID</label>\r\n                                    <input defaultValue={modalEmailid} onChange={onModalEmail_idChange} className=\"form-control mt-1\" name=\"email_id\" type=\"tel\" required pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Whatsapp Number</label>\r\n                                    <input defaultValue={modalWhatsappNumber} onChange={onModalWhatsappNumberChange} className=\"form-control mt-1\" name=\"whatsappNumber\" type=\"number\" pattern=\"[789][0-9]{9}\" required />\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Source Of Lead</label>\r\n                                    <input defaultValue={modalSol} onChange={onModalSOLChange} className=\"form-control mt-1\" required />\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Location</label>\r\n                                  \r\n                                    <select onChange={onModalLocationChange} className=\"form-control\" defaultValue={modalLocation}>\r\n                                        <option>Select...</option>\r\n                                        {read_inventory.data.Inventory_Master.map((inventory) => (\r\n                                            <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"field col-md-6\">\r\n                                    <label className=\"required\">Date</label>\r\n                                    <input type=\"date\" readonly defaultValue={modalStartDate} onChange={onModalStartDateChange} className=\"form-control mt-1\" required />\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                               \r\n                                <div className=\"field col-md-6\">\r\n                                    <label>Media Type</label>\r\n                                    <select defaultValue={modalMedia_type} className=\"form-control\" onChange={onModalMediaChange}>\r\n                                        <option>Select...</option>\r\n                                        {read_media.data.media_type_master.map((media) => (\r\n                                            <option key={media.id} value={media.id}>{media.media_type}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"field col-md-6\">\r\n                                    <label>Status</label>\r\n                                    <select defaultValue={modalStatus} onChange={onModalStatusChange} className=\"form-control\">\r\n                                        <option>Select...</option>\r\n                                        <option>Completed</option>\r\n                                        <option>In Process</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"field\">\r\n                                <button className=\"btn btn-primary\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\r\n                            </div>\r\n                        </form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <form  className=\"form-group\" padding=\"2px\">\r\n                <h4 className=\"text-center\">INQUIRY MASTER</h4>\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Source Of Lead</label>\r\n                            <input placeholder=\"enter source of lead\" type=\"text\" name=\"form_sol\" onChange={onFormSOLChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter source of lead.\" />\r\n                        </div>\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Name</label>\r\n                            <input placeholder=\"enter customer name\" type=\"text\" name=\"form_name\" onChange={onFormNameChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter customer name.\" />\r\n                        </div>\r\n                    </div><br />\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Number</label>\r\n                            <input placeholder=\"enter customer number\" type=\"number\" name=\"form_number\" onChange={onFormNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\r\n                        </div>\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Email ID</label>\r\n                            <input placeholder=\"enter email id\" type=\"email\" name=\"form_email_id\" onChange={onFormEmailIdChange} className=\"form-control mt-1\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" />\r\n                        </div>\r\n                    </div><br />\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Whatsapp Number</label>\r\n                            <input placeholder=\"enter whatsapp number\" type=\"number\" name=\"form_whatsapp_no\" onChange={onFormWhatsappNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter whatsapp\" />\r\n                        </div>\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Start Date</label>\r\n                            <input placeholder=\"enter start date\" type=\"date\" name=\"start_date\" onChange={onStartDateChange} className=\"form-control mt-1\" title=\"Please enter start date\" />\r\n                        </div>\r\n                    </div><br />\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-6\">\r\n                            <label className=\"required\">Media Type</label>\r\n                            {/* <input placeholder=\"enter media type\" type=\"text\" name=\"media_type\" onChange={onDowntimeChange} className=\"form-control mt-1\" title=\"Please enter media type\" /> */}\r\n                            <select className=\"form-control\" onChange={onMediaChange}>\r\n                                <option>Select...</option>\r\n                                {read_media.data.media_type_master.map((media) => (\r\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div><br />\r\n                        <div className=\"field col-md-6\">\r\n                            <label>Status</label>\r\n                            <select className=\"form-control\" onChange={onStatusChange}>\r\n                                <option>Select...</option>\r\n                                <option>Completed</option>\r\n                                <option>In Process</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </Card>\r\n            <Card variant=\"outlined\" className=\"form-card\" style={{\r\n                margin: \"2%\",\r\n                padding: \"8%\",\r\n                background: \"#FFFFFF\",\r\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\r\n                borderRadius: \"10px\"\r\n            }}><form className=\"form-group\">\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-4\">\r\n                            <label className=\"required\">State</label>\r\n                            <Select\r\n                                name=\"state\"\r\n                                options={read_states.data.geo_locations}\r\n                                onChange={onStateChange}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-md-4\">\r\n                            <label className=\"required\">District</label>\r\n                            <Select\r\n                                name=\"district\"\r\n                                options={read_states.data.geo_locations}\r\n                                onChange={onDistrictChange}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-md-4\">\r\n                            <label className=\"required\">Subdistrict</label>\r\n                            <Select\r\n                                name=\"subdistrict\"\r\n                                options={read_states.data.geo_locations}\r\n                                onChange={onSubdistrictChange}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.id}\r\n                            />\r\n                        </div>\r\n                    </div><br />\r\n                    <div className=\"row\">\r\n                        <div className=\"field col-md-4\">\r\n                            <label>Illumination</label>\r\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\r\n                                <option>Select...</option>\r\n                                <option>F LIT</option>\r\n                                <option>NON LIT</option>\r\n                                <option>ALL</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field col-md-4\">\r\n                            <label>Media Type</label>\r\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\r\n                                <option>Select...</option>\r\n                                {read_media.data.media_type_master.map((media) => (\r\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field col-md-4\">\r\n                            <label>Date</label>\r\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\r\n                        </div>\r\n                        \r\n                    </div><br />\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\r\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'21%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\r\n                    </div>\r\n                    <br />\r\n                </form>\r\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\r\n                    <DataGrid\r\n                        rows={rows1}\r\n                        columns={columns1}\r\n                        pageSize={10}\r\n                        rowsPerPageOptions={[10]}\r\n                        components={{\r\n                            Toolbar: GridToolbar,\r\n                        }}\r\n                        checkboxSelection     \r\n                        onSelectionModelChange={itm => setSelected(itm)}\r\n                    />\r\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\r\n                        <button onClick={onFormSubmit} className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\r\n                        <button className=\"btn btn-primary\" type=\"reset\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n                \r\n            </Card>\r\n            <Card variant=\"outlined\" className=\"form-card\" style={{\r\n                margin: \"2%\",\r\n                padding: \"2%\",\r\n                background: \"#FFFFFF\",\r\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\r\n                borderRadius: \"10px\"\r\n            }}>\r\n                <div style={{ height: 500, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={newData}\r\n                        columns={columns}\r\n                        pageSize={10}\r\n                        rowsPerPageOptions={[10]}\r\n                        checkboxSelection={false}\r\n                        disableSelectiononChange\r\n                        components={{\r\n                            Toolbar: GridToolbar,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import React, { useState, useRef } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useLazyQuery, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport axios from 'axios';\nimport { ContactSupportOutlined } from '@material-ui/icons';\n\n\nconst READ_INVENTORY = gql`\nquery MyQuery($_eq: String = \"false\"){\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\n      AvailabilityFrom\n      AvailabilityTo\n      \n      \n      DisplayRatePM\n      \n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      District\n      Subdistrict\n      Total\n      Totalsqft\n      Width\n     \n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      \n    }\n  }\n  \n`\nconst SEARCH_QUICK_MEDIA = gql`\nquery MyQuery($_eq: String = \"Booked\", $mobile_no: String!, $_eq1: String = \"false\") {\n    quick_media(where: {mobile_no: {_eq: $mobile_no}, inquiry_master: {Inventory_Master: {Status: {_neq: $_eq}}}, isDeleted: {_eq: $_eq1}}) {\n      inquiry\n      mobile_no\n      proposal_no\n      id\n      inquiry_master {\n          inventory\n        Inventory_Master {\n          Location\n          id\n        }\n      }\n    }\n  }\n    \n  \n  \n`\nconst SEARCH_INQUIRY = gql`\nquery MyQuery($number: String!, $_eq: String = \"false\") {\n    inquiry_master(where: {number: {_eq: $number}, isDeleted: {_eq: $_eq}}) {\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        \n        \n        DisplayRatePM\n        \n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimePrintingCost\n        OneTimeMountingCost\n        OtmcRate\n        OtpcRate\n        State\n        District\n        Subdistrict\n        Total\n        Totalsqft\n        Width\n        \n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        \n      }\n      email_id\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n    }\n  }\n  \n`\nconst READ_INQUIRY = gql`\nquery MyQuery($_eq: String = \"false\"){\n    inquiry_master(where: {isDeleted: {_eq: $_eq}}){\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        \n        \n        DisplayRatePM\n        \n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimePrintingCost\n        OneTimeMountingCost\n        OtmcRate\n        OtpcRate\n        State\n        District\n        Subdistrict\n        Total\n        Totalsqft\n        Width\n        \n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        \n      }\n      email_id\n      \n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n    }\n  }\n  \n`\n\nconst READ_LABOR = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labor_master(where: {isDeleted: {_eq: $_eq}}){\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      name\n      pan\n    }\n  }\n`\n\n\nconst Read_Printer = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 2}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }  \n`\nconst Read_Mounter = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 4}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  \n`\nconst Read_Electrician = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 3}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  \n  \n`\nconst Read_Designer = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 6}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }  \n  `\nconst INSERT_BOOKING = gql`\nmutation MyMutation($Confirmation: String!, $Designer: Int = 10, $Electrician: Int = 10, $End_Date_Photo: String = \"\", $Monitoring_Photo: String = \"\", $Mounter: Int = 10, $PO: String = \"\", $Printer: Int = 10, $Shortlisted: String!, $Start_Date_Photo: String = \"\",$Start_Date:date!,$End_Date:date!,$Sites:Int!) {\n    insert_Booking_Calender_one(object: {Confirmation: $Confirmation, Designer: $Designer, Electrician: $Electrician, End_Date_Photo: $End_Date_Photo, Monitoring_Photo: $Monitoring_Photo, Mounter: $Mounter, PO: $PO, Printer: $Printer, Shortlisted: $Shortlisted, Start_Date_Photo: $Start_Date_Photo,Start_Date:$Start_Date,End_Date:$End_Date,Sites:$Sites}) {\n      id\n    }\n  }\n`\n\nconst READ_BOOKING = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    Booking_Calender(where: {isDeleted: {_eq: $_eq}}){\n      Confirmation\n      Designer\n      Electrician\n      End_Date\n      End_Date_Photo\n      Monitoring_Photo\n      Mounter\n      PO\n      Printer\n      Shortlisted\n      Sites\n      Start_Date\n      Start_Date_Photo\n      id\n      laborMasterByElectrician {\n        name\n        id\n      }\n      laborMasterByMounter {\n        id\n        name\n      }\n      laborMasterByPrinter {\n        id\n        name\n      }\n      labor_master {\n        id\n        name\n      }\n      quick_medium {\n        id\n        inquiry\n        mobile_no\n        proposal_no\n        inquiry_master {\n          Inventory_Master {\n            id\n            Location\n          }\n          email_id\n          id\n          inventory\n          media_type\n        }\n      }\n    }\n  }\n     \n`\n\nconst UPDATE_BOOKING = gql`\nmutation MyMutation($id: Int!, $Confirmation: Int = 10, $Designer: Int = 10, $Electrician: Int = 10, $End_Date_Photo: String = \"\", $Monitoring_Photo: String = \"\", $Mounter: Int = 10, $PO: String = \"\", $Printer: Int = 10, $Shortlisted: Int = 10, $Start_Date_Photo: String = \"\") {\n    update_Booking_Calender_by_pk(pk_columns: {id: $id}, _set: {Confirmation: $Confirmation, Designer: $Designer, Electrician: $Electrician, End_Date_Photo: $End_Date_Photo, Monitoring_Photo: $Monitoring_Photo, Mounter: $Mounter, PO: $PO, Printer: $Printer, Shortlisted: $Shortlisted, Start_Date_Photo: $Start_Date_Photo}) {\n      id\n    }\n  }\n`\n\n\n// const Update_Inventory=gql`\n// mutation MyMutation($Status: String = \"\") {\n//     update_Inventory_Master_by_pk(pk_columns: {id: 0}, _set: {Status: $Status}) {\n//       Status\n//     }\n//   }\n// `\n\n\n\n\n// const DELETE_BOOKING = gql`\n// mutation MyMutation($id: Int!) {\n//     delete_Booking_Calender_by_pk(id: $id) {\n//       id\n//     }\n//   }  \n// `\n\nconst DELETE_BOOKING = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_Booking_Calender_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\n\nconst UPDATE_INVENTORY = gql`\nmutation MyMutation($id: Int!, $AvailabilityFrom: date=\"2021-11-23\", $AvailabilityTo: date=\"2021-11-23\",$Status:String=\"Booked\",$BookedBy:String!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {AvailabilityFrom: $AvailabilityFrom, AvailabilityTo: $AvailabilityTo,Status:$Status,BookedBy:$BookedBy}) {\n      AvailabilityFrom\n      AvailabilityTo\n      Status\n      BookedBy\n    }\n  }\n`\nconst READ_QUICK_MEDIA = gql`\nquery MyQuery($_eq: String = \"false\"){\n    quick_media(where: {isDeleted: {_eq: $_eq}}){\n      inquiry\n      id\n      mobile_no\n      inquiry_master {\n        Inventory_Master {\n          Location\n          id\n        }\n      }\n    }\n  }\n  `\nconst GET_DATA = gql`\nquery MyQuery($id: Int = 0, $_eq1: String = \"false\") {\n    quick_media(where: {id: {_eq: $id}, isDeleted: {_eq: $_eq1}}) {\n      inquiry_master {\n        Inventory_Master {\n          id\n        }\n      }\n    }\n  }\n  \n  `\n\nconst UPDATE_BOOKING_ON_DELETE = gql`\n  mutation MyMutation($id: Int!, $BookedBy: String=\"\") {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {BookedBy: $BookedBy}) {\n      BookedBy\n    }\n  }  \n  `\nconst UPDATE_INQUIRY = gql`\n  mutation MyMutation($id: Int = 0, $status: String = \"\") {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {status: $status}) {\n      id\n    }\n  }\n  `\n\nfunction Booking() {\n    //States\n    const [selected, setSelected] = useState();\n    const [get_data, setGet_data] = useState();\n    const [username, setUsername] = useState();\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [shortlisted, setShortlisted] = useState();\n    const [confirmation, setConfirmation] = useState();\n    const [PO, setPO] = useState();\n    const [designer, setDesigner] = useState();\n    const [printer, setPrinter] = useState();\n    const [mounter, setMounter] = useState();\n    const [electrician, setElectrician] = useState();\n    const [startDatePhoto, setStartDatePhoto] = useState();\n    const [monitoringPhoto, setMonitoringPhoto] = useState();\n    const [endDatePhoto, setEndDatePhoto] = useState();\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [Booked, setBooked] = useState();\n    //Modal states\n    const [modalId, setModalId] = useState();\n    const [modalShortlisted, setModalShortlisted] = useState();\n    const [modalConfirmation, setModalConfirmation] = useState();\n    const [modalPO, setModalPO] = useState();\n    const [modalDesigner, setModalDesigner] = useState();\n    const [modalPrinter, setModalPrinter] = useState();\n    const [modalMounter, setModalMounter] = useState();\n    const [modalElectrician, setModalElectrician] = useState();\n    const [modalStartDatePhoto, setModalStartDatePhoto] = useState();\n    const [modalMonitoringPhoto, setModalMonitoringPhoto] = useState();\n    const [modalEndDatePhoto, setModalEndDatePhoto] = useState();\n    const [modalStartDate, setModalStartDate] = useState();\n    const [modalEndDate, setModalEndDate] = useState();\n    //Queries\n    const [update_inventory] = useMutation(UPDATE_INVENTORY);\n    const [insert_booking] = useMutation(INSERT_BOOKING);\n    const [update_booking] = useMutation(UPDATE_BOOKING);\n    const [delete_booking] = useMutation(DELETE_BOOKING);\n    const [update_booking_on_delete] = useMutation(UPDATE_BOOKING_ON_DELETE);\n    const [update_inquiry] = useMutation(UPDATE_INQUIRY);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useQuery(READ_INQUIRY);\n    const read_labor = useSubscription(READ_LABOR);\n    const read_booking = useSubscription(READ_BOOKING);\n    const read_printer = useSubscription(Read_Printer);\n    const read_electrician = useSubscription(Read_Electrician);\n    const read_mounter = useSubscription(Read_Mounter);\n    const read_designer = useSubscription(Read_Designer);\n    const read_quick_media = useQuery(READ_QUICK_MEDIA);\n    const [get_inventory, get_return_data] = useLazyQuery(GET_DATA, {\n        onCompleted: data => {\n            // console.log('data ', data);\n            setGet_data(data);\n        }\n    });\n\n    const [search_quick_media, { loading, error, data }] = useLazyQuery(SEARCH_QUICK_MEDIA)\n    // const [update_Inventory]=useQuery(Update_Inventory)\n    if (read_booking.loading || read_inventory.loading || read_inquiry.loading || read_labor.loading || loading || read_designer.loading || read_electrician.loading || read_printer.loading || read_mounter.loading || read_quick_media.loading || get_return_data.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    //Functions\n    const onShortlistedChange = (e) => {\n        // console.log(e.target.value)\n        setShortlisted(e.target.value);\n        // console.log(shortlisted)\n    }\n    const onConfirmationChange = (e) => {\n        setConfirmation(e.target.value);\n    }\n    const onPOChange = (e) => {\n        setPO(e.target.value);\n    }\n    const onDesignerChange = (e) => {\n        // console.log(e.target.value)\n        setDesigner(e.target.value);\n    }\n    const onPrinterChange = (e) => {\n        setPrinter(e.target.value);\n    }\n    const onMounterChange = (e) => {\n        setMounter(e.target.value);\n    }\n    const onElectricianChange = (e) => {\n        setElectrician(e.target.value);\n    }\n    const onStartDatePhotoChange = (e) => {\n        // console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setStartDatePhoto(dataimage1.data);\n            })\n\n    }\n    const onMonitoringPhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setMonitoringPhoto(dataimage1.data);\n            })\n\n    }\n    const onEndDatePhotoChange = (e) => {\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setEndDatePhoto(dataimage1.data);\n            })\n    }\n    const onStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    }\n    const onEndDateChange = (e) => {\n        setEndDate(e.target.value);\n    }\n    // const onStatusChange=(e)=>{\n    //     setBooked(e.target.value);\n    // }\n    //Modal Functions\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value);\n    }\n    const onModalShortlistedChange = (e) => {\n        setModalShortlisted(e.target.value);\n    }\n    const onModalConfirmationChange = (e) => {\n        setModalConfirmation(e.target.value);\n    }\n    const onModalPOChange = (e) => {\n        setModalPO(e.target.value);\n    }\n    const onModalDesignerChange = (e) => {\n        //console.log(e.target.value);\n        setModalDesigner(e.target.value);\n    }\n    const onModalPrinterChange = (e) => {\n        setModalPrinter(e.target.value);\n    }\n    const onModalMounterChange = (e) => {\n        setModalMounter(e.target.value);\n    }\n    const onModalElectricianChange = (e) => {\n        setModalElectrician(e.target.value);\n    }\n    const onModalStartDatePhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalStartDatePhoto(dataimage1.data);\n            })\n        //setModalStartDatePhoto(e.target.value);\n    }\n    const onModalMonitoringPhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalMonitoringPhoto(dataimage1.data);\n            })\n    }\n    const onModalEndDatePhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalEndDatePhoto(dataimage1.data);\n            })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(selected);\n        if (shortlisted === \"Yes\" && confirmation === \"Yes\") {\n            setBooked('Booked');\n            for (var i = 0; i < selected.length; i++) {\n                //console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, AvailabilityFrom: startDate, AvailabilityTo: endDate, Status: \"Booked\", BookedBy: user } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n        else if (shortlisted === \"Yes\" && confirmation === \"No\") {\n            setBooked('Hold');\n            for (var i = 0; i < selected.length; i++) {\n                console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, AvailabilityFrom: startDate, AvailabilityTo: endDate, Status: \"Hold\", BookedBy: user } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n        //if(shortlisted===\"No\" && confirmation===\"No\")\n        else {\n            setBooked('Immediate');\n            for (var i = 0; i < selected.length; i++) {\n                console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, Status: \"Immediate\", BookedBy: \"\" } })\n                update_inquiry({ variables: { id: selected[i].inquiry_master.id, status: \"Completed\" } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n    }\n    const onEdit = (row) => {\n        handleShow();\n        //console.log(row)\n        setModalId(row.id);\n        setModalShortlisted(row.Shortlisted);\n        setModalConfirmation(row.Confirmation);\n        setModalPO(row.PO);\n        setModalDesigner(row.Designer);\n        setModalPrinter(row.Printer);\n        setModalMounter(row.Mounter);\n        setModalElectrician(row.Electrician);\n        setModalStartDatePhoto(row.Start_Date_Photo);\n        setModalEndDatePhoto(row.End_Date_Photo);\n        setModalMonitoringPhoto(row.Monitoring_Photo)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_booking({ variables: { id: modalId, Shortlisted: modalShortlisted, Confirmation: modalConfirmation, PO: modalPO, Designer: modalDesigner, Printer: modalPrinter, Mounter: modalMounter, Electrician: modalElectrician, Start_Date_Photo: modalStartDatePhoto, End_Date_Photo: modalEndDatePhoto, Monitoring_Photo: modalMonitoringPhoto } });\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        setBooked('');\n        delete_booking({ variables: { id: id } })\n        update_booking_on_delete({ variables: { id: id, BookedBy: Booked } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const onsearch = (e) => {\n        e.preventDefault();\n        //console.log(e.target[0].value)\n        search_quick_media({ variables: { mobile_no: e.target[0].value } })\n    }\n//console.log(read_electrician.data);\n    const columns1 = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'proposal_no',\n            headerName: 'Proposal No',\n            width: 160,\n        },\n        {\n            field: 'mobile_no',\n            headerName: 'Mobile No',\n            width: 160,\n        },\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.inquiry_master.Inventory_Master.Location;\n            }\n        },\n    ]\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n\n        {\n            field: 'PO',\n            headerName: 'PO',\n            width: 160,\n        },\n        {\n            field: 'Designer',\n            headerName: 'Designer',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Printer',\n            headerName: 'Printer',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Mounter',\n            headerName: 'Mounter',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Electrician',\n            headerName: 'Electrician',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Start_Date_Photo',\n            headerName: 'Start Date Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.Start_Date_Photo}`} />,\n        },\n        {\n            field: 'Monitoring_Photo',\n            headerName: 'Monitoring Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.Monitoring_Photo}`} />,\n        },\n        {\n            field: 'End_Date_Photo',\n            headerName: 'End Date Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.End_Date_Photo}`} />,\n        },\n        {\n            field: 'Start_Date',\n            headerName: 'Start Date',\n            width: 160\n        },\n        {\n            field: 'End_Date',\n            headerName: 'End Date',\n            width: 160\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_booking.data.Booking_Calender;\n    const emptyarr = [\n        {\n            id: \"\",\n            proposal_no: \"\",\n            mobile_no: \"\",\n            inquiry_master: {\n                Inventory_Master: {\n                    Location: \"\"\n                }\n            }\n        }\n    ]\n    var rows1 = emptyarr\n    if (data) {\n        rows1 = data.quick_media;\n        //console.log(rows1)\n    }\n\n\n    const user = localStorage.getItem(\"userdata\");\n    //console.log(user);\n    let newData1 = []\n    rows1.map((item, index) => {\n        newData1.push({ sno: index + 1, ...item })\n    })\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    //console.log(data === undefined ?'':data.inquiry_master[0])\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Booking</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input value={modalId} className=\"form-control mt-1\" onChange={onModalIdChange} name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Shortlisted</label>\n                                {/* <select value={modalShortlisted} className=\"form-control\" onChange={onModalShortlistedChange}>\n                                    <option>Select...</option>\n                                    {read_quick_media.data.quick_media.map((shortlist) => (\n                                        <option key={shortlist.id} value={shortlist.id}>{shortlist.inquiry_master.Inventory_Master.Location}</option>\n                                    ))}\n                                </select> */}\n                                <select onChange={onModalShortlistedChange} value={modalShortlisted} className=\"form-control\">\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Confirmation</label>\n                                {/* <select onChange={onModalConfirmationChange} value={modalConfirmation} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_inventory.data.Inventory_Master.map((confirmation) => (\n                                        <option key={confirmation.id} value={confirmation.id}>{confirmation.Location}</option>\n                                    ))}\n                                </select> */}\n                                <select onChange={onModalConfirmationChange} value={modalConfirmation} className=\"form-control\">\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">PO</label>\n                                <input onChange={onModalPOChange} value={modalPO} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Designer</label>\n                                <select onChange={onModalDesignerChange} value={modalDesigner} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_designer.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Mounter</label>\n                                <select onChange={onModalMounterChange} value={modalMounter} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_mounter.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician</label>\n                                <select onChange={onModalElectricianChange} value={modalElectrician} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_electrician.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Start Date Photo</label>\n\n                                <input onChange={onModalStartDatePhotoChange} className=\"form-control\" type=\"file\" />\n\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Printer</label>\n                                <select onChange={onModalPrinterChange} value={modalPrinter} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_printer.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Monitoring Photo</label>\n                                <input onChange={onModalMonitoringPhotoChange} className=\"form-control\" type=\"file\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">End Date Photo</label>\n                                <input onChange={onModalEndDatePhotoChange} className=\"form-control\" type=\"file\" />\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <h4 className=\"text-center\">BOOKING</h4>\n                <form onSubmit={onsearch}>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <div className=\"field col-md-4\">\n                            <label>Search By Customer Mobile</label>\n                            <input className=\"form-control\" type=\"text\" name=\"customer_search\" /><br />\n                            <button className=\"btn btn-primary\" type=\"submit\" style={{ marginRight: '10px', width: '30%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Search</button>\n                        </div>\n                        <div className=\"field col-md-4\"></div>\n                    </div><br />\n                </form>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData1}\n                        columns={columns1}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection\n                        onSelectionModelChange={(ids) => {\n                            const selectedIDs = new Set(ids);\n                            const selectedRowData = rows1.filter((row) =>\n                                selectedIDs.has(row.id)\n                            )\n                            setSelected(selectedRowData)\n                            console.log(selected);\n                        }}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Shortlisted</label>\n                            {/* <select className=\"form-control\" onChange={onShortlistedChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.quick_media.map((shortlist) => (\n                                    <option key={shortlist.id} value={shortlist.id}>{shortlist.inquiry_master.Inventory_Master.Location}</option>\n                                ))}\n                            </select> */}\n                            <select className=\"form-control\" onChange={onShortlistedChange}>\n                                <option>Select...</option>\n                                <option value=\"Yes\">Yes</option>\n                                <option value=\"No\">No</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Confirmation</label>\n                            {/* <select className=\"form-control\" onChange={onConfirmationChange}>\n                                <option>Select...</option>\n                                {read_inventory.data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                ))}\n                            </select> */}\n                            <select className=\"form-control\" onChange={onConfirmationChange}>\n                                <option>Select...</option>\n                                <option value=\"Yes\">Yes</option>\n                                <option value=\"No\">No</option>\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">PO</label>\n                            <input type=\"text\" name=\"PO\" className=\"form-control\" onChange={onPOChange} />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Designer</label>\n                            <select className=\"form-control\" onChange={onDesignerChange}>\n                                <option>Select...</option>\n                                {read_designer.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Printer</label>\n                            <select className=\"form-control\" onChange={onPrinterChange}>\n                                <option>Select...</option>\n                                {read_printer.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Mounter</label>\n                            <select className=\"form-control\" onChange={onMounterChange}>\n                                <option>Select...</option>\n                                {read_mounter.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician</label>\n                            <select className=\"form-control\" onChange={onElectricianChange}>\n                                <option>Select...</option>\n                                {read_electrician.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\" >Start Date Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onStartDatePhotoChange} />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Monitoring Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onMonitoringPhotoChange} />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">End Date Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onEndDatePhotoChange} />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Start Date</label>\n                            <input type=\"date\" name=\"PO\" className=\"form-control\" onChange={onStartDateChange} />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">End Date</label>\n                            <input type=\"date\" name=\"PO\" className=\"form-control\" onChange={onEndDateChange} />\n                        </div>\n\n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type=\"reset\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Booking","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\n\n\nconst getlandloard_Master=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    landlord_management(where: {isDeleted: {_eq: $_eq}}){\n      account_no\n      address\n      agreement_from\n      agreement_to\n      bank_name\n      branch_name\n      height\n      id\n      ifsc\n      location\n      mobile_number\n      name\n      rent_amount\n      rent_increment_reminder\n      site_address\n    \n      width\n    }\n  }\n`\n\n\nconst Insertlanloard_Master=gql`\nmutation MyMutation($account_no: String = \"\", $address: String = \"\", $agreement_from: date = \"\", $agreement_to: date = \"\", $bank_name: String = \"\", $branch_name: String = \"\", $height: String = \"\", $ifsc: String = \"\", $location: String = \"\", $mobile_number: String = \"\", $name: String = \"\", $rent_amount: String = \"\", $rent_increment_reminder: String = \"\", $site_address: String = \"\", $width: String = \"\") {\n    insert_landlord_management_one(object: {account_no: $account_no, address: $address, agreement_from: $agreement_from, agreement_to: $agreement_to, bank_name: $bank_name, branch_name: $branch_name, height: $height, ifsc: $ifsc, location: $location, mobile_number: $mobile_number, name: $name, rent_amount: $rent_amount, rent_increment_reminder: $rent_increment_reminder, site_address: $site_address,  width: $width}) {\n      id\n    }\n  }\n`\n\nconst Updatelandloard_Master=gql`\nmutation MyMutation($id: Int = 0, $account_no: String = \"\", $address: String = \"\", $agreement_from: date = \"\", $agreement_to: date = \"\", $bank_name: String = \"\", $branch_name: String = \"\", $height: String = \"\", $id1: Int = 10, $ifsc: String = \"\", $location: String = \"\", $mobile_number: String = \"\", $name: String = \"\", $rent_amount: String = \"\", $rent_increment_reminder: String = \"\", $site_address: String = \"\", $width: String = \"\") {\n    update_landlord_management_by_pk(pk_columns: {id: $id}, _set: {account_no: $account_no, address: $address, agreement_from: $agreement_from, agreement_to: $agreement_to, bank_name: $bank_name, branch_name: $branch_name, height: $height, ifsc: $ifsc, location: $location, mobile_number: $mobile_number, name: $name, rent_amount: $rent_amount, rent_increment_reminder: $rent_increment_reminder, site_address: $site_address,width: $width}) {\n      account_no\n      address\n      agreement_from\n      agreement_to\n      bank_name\n      branch_name\n      height\n      id\n      ifsc\n      location\n      mobile_number\n      name\n      rent_amount\n      rent_increment_reminder\n      site_address\n      \n      width\n    }\n  }\n  \n\n`\nconst Deletelandloard_Master=gql`\nmutation MyMutation($id: Int = 10, $isDeleted: String = \"true\") {\n    update_landlord_management_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\n// const Deletelandloard_Master=gql`\n\n// mutation MyMutation($id: Int = 10) {\n//     delete_landlord_management_by_pk(id: $id) {\n//       account_no\n//       address\n//       agreement_from\n//       agreement_to\n//       bank_name\n//       branch_name\n//       height\n//       id\n//       ifsc\n//       location\n//       mobile_number\n//       name\n//       rent_amount\n//       rent_increment_reminder\n//       site_address\n      \n//       width\n//     }\n//   }\n// `\n\n\n\n\n\n\nfunction Landloard_Management ()  {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [landloard, setlandloard] = useState({\n        name: '',\n        address: '',\n        mobile_number: '',\n        location: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc: '',\n        account_no: '',\n        rent_amount:'',\n        width:'',\n        height:'',\n        site_address:'',\n        agreement_from:'',\n        agreement_to:'',\n        rent_increment_reminder:'',\n\n\n    });\n\n    const [modallandloard, setModallandloard] = useState({\n        id: '',\n        name: '',\n        address: '',\n        mobile_number: '',\n        location: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc: '',\n        account_no: '',\n        rent_amount:'',\n        width:'',\n        height:'',\n        site_address:'',\n        agreement_from:'',\n        agreement_to:'',\n        rent_increment_reminder:'',\n\n    });\n\n\n\n\n\n    const [Insert_landloardmanagementData] = useMutation(Insertlanloard_Master);\n    const [update_landloardmanagementData] = useMutation(Updatelandloard_Master);\n    const [delete_landloardmanagementData] = useMutation(Deletelandloard_Master);\n\n\n\n    const onModalInputChange = (e) => {\n        setModallandloard({ ...modallandloard, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_landloardmanagementData({ variables: modallandloard })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n\n\n\n\n\n\n\n\n\n    const onInputChange = (e) => {\n        setlandloard({ ...landloard, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        Insert_landloardmanagementData({ variables: landloard})\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n\n\n    const onDelete = (id) => {\n        delete_landloardmanagementData({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const onEdit = (row) => {\n        handleShow();\n        setModallandloard({\n            id: row.id,\n            name: row.name,\n            address: row.address,\n            mobile_number: row.mobile_number,\n            site_address: row.site_address,\n            bank_name: row.bank_name,\n            branch_name: row.branch_name,\n            ifsc: row.ifsc,\n            account_no: row.account_no,\n            location:row.location,\n            width:row.width,\n            height:row.height,\n            rent_amount:row.rent_amount,\n            agreement_from:row.agreement_from,\n            agreement_to:row.agreement_to,\n            rent_increment_reminder:row.rent_increment_reminder\n\n\n        })\n        console.log(modallandloard);\n    }\n\n\n\n\n\n\n\n\n\n    const getlandloard_management = useSubscription(getlandloard_Master);\n    if (getlandloard_management.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getlandloard_management.error) {\n        return \"error\" + getlandloard_management.error;\n    }\n    console.log(getlandloard_management.data);\n\n\n\n\n\n\n\n\n\n\n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'name',\n            headerName: 'Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'address',\n            headerName: 'Address ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'mobile_number',\n            headerName: 'Mobile Number ',\n            width: 200,\n            editable: false,\n        },\n       \n        {\n            field: 'site_address',\n            headerName: 'Site Address',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'location',\n            headerName: 'Location ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'rent_amount',\n            headerName: 'Rent Amount ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'rent_increment_reminder',\n            headerName: 'Rent Increment Remainder ',\n            width: 200,\n            editable: false,\n        },\n         {\n            field: 'agreement_from',\n            headerName: 'Agreement From ',\n            width: 200,\n            editable: false,\n        },\n         {\n            field: 'agreement_to',\n            headerName: 'Agreement To ',\n            width: 200,\n            editable: false,\n        },\n\n\n        {\n            field: 'width',\n            headerName: 'Width ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'height',\n            headerName: 'Height ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'ifsc',\n            headerName: 'IFSC ',\n            width: 200,\n            editable: false,\n        }, \n        {\n            field: 'account_no',\n            headerName: 'Account Number ',\n            width: 200,\n            editable: false,\n        }, \n       \n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\" onClick={() => { onEdit(params.row) }}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\"onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n\n\n\n\n\n\n\n    const rows = getlandloard_management.data.landlord_management;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n\n    return ( \n        <div>\n\n<Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Landloard Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                    <div className=\"field col-md-3\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modallandloard.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                        <div className=\"field col-md-3\">\n                            <label className=\"required\">landloard Name</label>\n                            <input placeholder=\"enter name\"defaultValue={modallandloard.name}onChange={onModalInputChange}  type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            <span ></span>\n                        </div>\n                        <div className=\"field col-md-3\">\n                            <label className=\"required\">landloard Address</label>\n                            <input  placeholder=\"enter address\" defaultValue={modallandloard.address}onChange={onModalInputChange} type=\"text\" name=\"address\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-3\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input  placeholder=\"enter contact \"defaultValue={modallandloard.mobile_number}onChange={onModalInputChange} type=\"text\" name=\"mobile_number\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                       \n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Width</label>\n                            <input  placeholder=\"enter Width\"defaultValue={modallandloard.width}onChange={onModalInputChange} type=\"number\" name=\"width\" className=\"form-control mt-1\"  title=\"Please enter valid email address\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Height</label>\n                            <input  placeholder=\"enter height\" defaultValue={modallandloard.height}onChange={onModalInputChange} type=\"number\" name=\"height\" className=\"form-control mt-1\"  title=\"Please enter valid email address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <input  placeholder=\"enter location\"defaultValue={modallandloard.location}onChange={onModalInputChange} type=\"text\" name=\"location\" className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Amount Yearly</label>\n                            <input  placeholder=\"enter rent amount yearly \"defaultValue={modallandloard.rent_amount}onChange={onModalInputChange} type=\"number\" name=\"rent_amount\" className=\"form-control mt-1\"  title=\"Please enter valid pan\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Increment Remainder</label>\n                            <input   type=\"text\" name=\"rent_increment_reminder\" defaultValue={modallandloard.rent_increment_reminder}onChange={onModalInputChange}className=\"form-control mt-1\"  title=\"Please enter valid pan\" required />\n                        </div>\n                    </div><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  From</label>\n                            <input   type=\"date\" name=\"agreement_from\"defaultValue={modallandloard.agreement_from}onChange={onModalInputChange} className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  To</label>\n                            <input  type=\"date\" name=\"agreement_to\" defaultValue={modallandloard.agreement_to}onChange={onModalInputChange}className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Site Address</label>\n                            <input   type=\"text\" name=\"site_address\"defaultValue={modallandloard.site_address}onChange={onModalInputChange} className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                    </div>\n                    <br />\n                    <h5 style={{ textAlign: 'center' }}>Bank Details</h5><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Bank Name</label>\n                            <input  placeholder=\"enter Bank Name\"defaultValue={modallandloard.bank_name}onChange={onModalInputChange} type=\"text\" name=\"bank_name\" className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        \n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Branch Name</label>\n                            <input  placeholder=\"enter Branch Name\"defaultValue={modallandloard.branch_name} onChange={onModalInputChange}type=\"text\" name=\"branch_name\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                          \n                        </div>\n                        \n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">IFSC</label>\n                            <input  type=\"text\" name=\"ifsc\"defaultValue={modallandloard.ifsc}onChange={onModalInputChange} className=\"form-control\" placeholder=\"enter IFSC\" />\n\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Account Number</label>\n                            <input  type=\"text\" name=\"account_no\"defaultValue={modallandloard.account_no}onChange={onModalInputChange} className=\"form-control\" placeholder=\"enter Account Number\"/>\n                        </div>\n                        \n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                        \n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <h4 className=\"text-center\">Landloard Management</h4><br/>\n\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Landloard Name</label>\n                            <input placeholder=\"enter name\"onChange={onInputChange}  type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            <span ></span>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Landloard Address</label>\n                            <input  placeholder=\"enter address\"onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input  placeholder=\"+91 \"onChange={onInputChange} type=\"tel\" name=\"mobile_number\" className=\"form-control mt-1\" required pattern=\"[789][0-9]{9}\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div><br />\n                   \n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <input  placeholder=\"enter location\"onChange={onInputChange} type=\"text\" name=\"location\" className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Amount Yearly</label>\n                            <input  placeholder=\"enter rent amount yearly \"onChange={onInputChange} type=\"text\" name=\"rent_amount\" className=\"form-control mt-1\"  title=\"Please enter valid pan\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Increment Remainder</label>\n                            <input   type=\"text\" name=\"rent_increment_reminder\" onChange={onInputChange}className=\"form-control mt-1\"  title=\"Please enter valid pan\" required />\n                        </div>\n                    </div><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  From</label>\n                            <input   type=\"date\" name=\"agreement_from\"onChange={onInputChange} className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  To</label>\n                            <input  type=\"date\" name=\"agreement_to\" onChange={onInputChange}className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Site Address</label>\n                            <input   type=\"text\" name=\"site_address\"onChange={onInputChange} className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                    </div><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Width</label>\n                            <input  placeholder=\"enter Width\"onChange={onInputChange} type=\"number\" name=\"width\" className=\"form-control mt-1\"  title=\"Please enter valid email address\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Height</label>\n                            <input  placeholder=\"enter height\"onChange={onInputChange} type=\"number\" name=\"height\" className=\"form-control mt-1\"  title=\"Please enter valid email address\" required />\n                        </div>\n                    </div>\n                    <br />\n                    <h5 style={{ textAlign: 'center' }}>Bank Details</h5><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Bank Name</label>\n                            <input  placeholder=\"enter bank Name\"onChange={onInputChange} type=\"text\" name=\"bank_name\" className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        \n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Branch Name</label>\n                            <input  placeholder=\"enter branch Name\" onChange={onInputChange}type=\"text\" name=\"branch_name\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                          \n                        </div>\n                        \n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">IFSC</label>\n                            <input  type=\"text\" name=\"ifsc\"onChange={onInputChange} className=\"form-control\"maxlength=\"11\" minlength=\"11\" placeholder=\"enter IFSC\" />\n\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Account Number</label>\n                            <input  type=\"number\" name=\"account_no\"onChange={onInputChange} className=\"form-control\" placeholder=\"enter account number\"/>\n                        </div>\n                        \n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n     );\n}\n \nexport default Landloard_Management;\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n  }  \n`\n\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n`\nconst READ_MEDIA = gql`\nquery MyQuery {\n    media_type_master {\n      id\n      media_type\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n    \n`\nconst READ_SIZE = gql`\nquery MyQuery {\n    size_master {\n      id\n      height\n      width\n      no_of_display\n    }\n  }  \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($country: Int!,$state:Int!,$city:Int!,$illumination:String!,$media_type:Int!,$_gt: date = \"\") {\n    Inventory_Master(where: {Country: {_eq: $country}, State:{_eq:$state},City_Village:{_eq:$city},Illumination:{_eq:$illumination},Media_Type:{_eq:$media_type},AvailabilityTo: {_lt: $_gt}}) {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        id\n        country {\n            id\n            name\n          }\n          city {\n            id\n            name\n          }\n          state {\n            id\n            name\n          }\n          media_type_master {\n            id\n            media_type\n          }\n      }\n  }\n  \n`\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($id: Int!) {\n  delete_inquiry_master_by_pk(id: $id) {\n    id\n  }\n}\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription {\n    inquiry_master {\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      end_date\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      work_order\n      task_sheet\n      downtime\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\n\nexport default function Inquiry_Master() {\n    //States\n    const [showhide, setShowhide] = useState('hidden');\n    const [country, setCountry] = useState();\n    const [state, setState] = useState();\n    const [city, setCity] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    // const [district, setDistrict] = useState();\n    // const [taluka, setTaluka] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n\n\n    const read_media = useQuery(READ_MEDIA);\n    const read_countries = useQuery(READ_COUNTRIES);\n    const read_states = useQuery(READ_STATES);\n    const read_cities = useQuery(READ_CITIES);\n    //const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n\n    //Loader\n    if (read_inquiry.loading  || read_countries.loading || read_states.loading || read_cities.loading || loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onCountryChange = (country_data) => {\n        setCountry(country_data.id)\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n    }\n    const onCityChange = (city_data) => {\n        setCity(city_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        console.log(e.target.value)\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        console.log(e.target.value);\n        setSearchDate(e.target.value);\n    }\n    // const onDistrictChange = (district_data) => {\n    //     setDistrict(district_data.District);\n    // }\n    // const onTalukaChange = (taluka_data) => {\n    //     setTaluka(taluka_data.Taluka);\n    // }\n    const onLocationChange = (e) => {\n        //console.log(e.target[1].value);\n\n        //console.log(e.target.value);\n        var inv = data.Inventory_Master[0]\n        const filteredInventory = data.Inventory_Master.filter((location) => location.Location.includes(e.target.value))\n        setInventoryData(filteredInventory[0]);\n        //console.log(filteredInventory[0].id)\n        setLocation(filteredInventory[0].id);\n        //setShowhide(\"visible\");\n    }\n    const onSearch = (e) => {\n        e.preventDefault();\n        //console.log(district);\n        // loadInventory({variables:{country:country,state:state,city:city,district:district,taluka:taluka,location:location,size:size,illumination:illumination,media:media}})\n        loadInventory({ variables: { country: country, state: state, city: city, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        //console.log(data);\n        setShowhide(\"visible\");\n    }\n    const columns = [\n        {\n            field: 'Country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.country.name;\n            }\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.state.name;\n            }\n        },\n        {\n            field: 'City_Village',\n            headerName: 'City_Village',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n        { \n            field: 'District', \n            headerName: 'District', \n            width: 200 \n        },\n        { \n            field: 'Taluka', \n            headerName: 'Taluka', \n            width: 200 \n        },\n        { \n            field: 'Location', \n            headerName: 'Location', \n            width: 200 \n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        { \n            field: 'Illumination', \n            headerName: 'Illumination', \n            width: 200 \n        },\n        { \n            field: 'Width', \n            headerName: 'Width', \n            width: 200 \n        },\n        { \n            field: 'Height', \n            headerName: 'Height', \n            width: 200 \n        },\n        { \n            field: 'NoofDisplay', \n            headerName: 'No Of Display', \n            width: 200 \n        },\n        { \n            field: 'Totalsqft', \n            headerName: 'Total Sq ft', \n            width: 200 \n        },\n        { \n            field: 'DrpmRate', \n            headerName: 'DrpmRate', \n            width: 200 \n        },\n        { \n            field: 'DisplayRatePM', \n            headerName: 'DisplayRatePM', \n            width: 200 \n        },\n        { \n            field: 'OtpcRate', \n            headerName: 'OtpcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimePrintingCost', \n            headerName: 'OneTimePrintingCost', \n            width: 200 \n        },\n        { \n            field: 'OtmcRate', \n            headerName: 'OtmcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimeMountingCost', \n            headerName: 'OneTimeMountingCost', \n            width: 200 \n        },\n        { \n            field: 'Total', \n            headerName: 'Total', \n            width: 200 \n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'AvailabilityFrom',\n            width: 200\n        },\n        { \n            field: 'AvailabilityTo', \n            headerName: 'AvailabilityTo', \n            width: 200 \n        },\n    ]\n    //console.log(data);\n    const emptyarr = [\n        {\n            id:45,\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            City_Village: \"\",\n            Country: \"\",\n            DisplayRatePM: \"\",\n            District: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            State: \"\",\n            Taluka: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            city:{\n                id: \"\",\n                name: \"\"\n            },\n            country:{\n                id: \"\",\n                name: \"\"\n            },\n            media_type_master:{\n                id: \"\",\n                media_type: \"\"\n            },\n            state:{\n                id: \"\",\n                name: \"\"\n            }\n        }\n    ]\n    var rows = emptyarr;\n    if(data)\n    {\n       rows=data.Inventory_Master;\n    }\n    console.log(rows);\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n                    <h4 className=\"text-center\">Quick Media Proposal</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"country\" className=\"form-control mt-1\" placeholder=\"enter country\" required>\n                        <option>--SELECT--</option>\n                        {read_countries.data.countries.map(country => (\n                            <option key={country.id} value={country.id}>{country.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"state\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                        <option>--SELECT--</option>\n                        {read_states.data.states.map(state => (\n                            <option key={state.id} value={state.id}>{state.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"cities\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                        <option>--SELECT--</option>\n                        {read_cities.data.cities.map(city => (\n                            <option key={city.id} value={city.id}>{city.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '10%' }}>Search</button>\n                    </div><br />\n                    <div className=\"row\">\n\n                        {/* <div className=\"field col-md-4\" style={{ marginLeft: '30%' }}>\n                            <label className=\"required\" style={{ visibility: 'visible' }}>Location</label>\n                            <select className=\"form-control\" onChange={onLocationChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.Location}>{inventory.Location}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                    </div><br /> <br />\n                </form >\n                {/* <div style={{ height: 500, width: '100%', visibility: showhide }}  >\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Country</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.country.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>State</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.state.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>City</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.city.name} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>District</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.District} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Taluka</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Taluka} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Location</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Location} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Media</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.media_type_master.media_type} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Illumination} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Width</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Width} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Height</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Height} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>No Of Display</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.NoofDisplay} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Total sq ft</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Totalsqft} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DrpmRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Display Rate PM</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DisplayRatePM} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtpcRate} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>One Time Printing Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimePrintingCost} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtmcRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>One Time Mounting Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimeMountingCost} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Total</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Total} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability From</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityFrom} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability To</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityTo} readOnly />\n                        </div>\n                    </div>\n                    <CSVLink data={data === undefined ? '' : data.Inventory_Master}>Download</CSVLink>\n                </div> */}\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription,\n  useLazyQuery\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\nimport Select from 'react-select'\n\n\n\nconst getPurchase_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    purchase_order(where: {isDeleted: {_eq: $_eq}}){\n      billing_name\n      billing_address\n      booking_number\n      purchase_order_date\n      campaign_name\n      quotation_number\n      gst_details\n      company_pan\n      payment_terms\n      id\n    }\n  }\n  \n`\nconst InsertPurchase_Master = gql`\nmutation MyMutation($billing_address: String = \"\", $billing_name: String = \"\", $booking_number: Int!, $campaign_name: String = \"\", $company_pan: String = \"\", $gst_details: String = \"\", $payment_terms: String = \"\", $purchase_order_date: String = \"\", $quotation_number: String = \"\") {\n  insert_purchase_order_one(object: {billing_address: $billing_address, billing_name: $billing_name, booking_number: $booking_number, campaign_name: $campaign_name, company_pan: $company_pan, gst_details: $gst_details, payment_terms: $payment_terms, purchase_order_date: $purchase_order_date, quotation_number: $quotation_number}) {\n    id\n  }\n}\n`\n\n\nconst UpdatePurchase_Master = gql`\nmutation MyMutation($id: Int = 0, $billing_address: String = \"\", $billing_name: String = \"\", $campaign_name: String = \"\", $company_pan: String = \"\", $gst_details: String = \"\", $payment_terms: String = \"\", $purchase_order_date: String = \"\", $booking_number: Int = \"\", $quotation_number: String = \"\") {\n  update_purchase_order_by_pk(pk_columns: {id: $id}, _set: {billing_address: $billing_address, billing_name: $billing_name, campaign_name: $campaign_name, company_pan: $company_pan, gst_details: $gst_details, payment_terms: $payment_terms, purchase_order_date: $purchase_order_date, booking_number: $booking_number, quotation_number: $quotation_number}) {\n    billing_address\n    billing_name\n    campaign_name\n    company_pan\n    gst_details\n    id\n    payment_terms\n    purchase_order_date\n    booking_number\n    quotation_number\n  }\n}\n\n  \n`\n\n// const DeletePurchase_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_purchase_order_by_pk(id: $id) {\n//       billing_name\n//       billing_address\n//       booking_number\n//       purchase_order_date\n//       campaign_name\n//       quotation_number\n//       gst_details\n//       company_pan\n//       payment_terms\n//       id\n//     }\n//   }\n// `\n\nconst DeletePurchase_Master = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n  update_purchase_order_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n    id\n  }\n}\n`\n\nconst SEARCH_BOOKING = gql`\nquery MyQuery{\n  Booking_Calender{\n    BookedBy\n    Confirmation\n    id\n    isDeleted\n    Start_Date_Photo\n    Start_Date\n    Sites\n    Shortlisted\n    Printer\n    PO\n    Mounter\n    Monitoring_Photo\n    End_Date_Photo\n    End_Date\n    Electrician\n    Designer\n    quick_medium {\n      mobile_no\n    }\n  }\n}\n`\nconst GET_BOOKING_DATA=gql`\nquery MyQuery($mobile_no:String!){\n  Booking_Calender(where: {quick_medium: {mobile_no: {_eq: $mobile_no}}}){\n    BookedBy\n    Confirmation\n    id\n    isDeleted\n    Start_Date_Photo\n    Start_Date\n    Sites\n    Shortlisted\n    Printer\n    PO\n    Mounter\n    Monitoring_Photo\n    End_Date_Photo\n    End_Date\n    Electrician\n    Designer\n    quick_medium {\n      mobile_no\n    }\n  }\n}\n`\n\nfunction Purchase_Order_Management() {\n  var filteredBooking = \"\";\n  var booking_dat=[];\n  const [get_data,setGet_data] = useState();\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [searchField,setSearchField]=useState();\n  const [purchase, setpurchase] = useState({\n    id: '',\n    billing_name: '',\n    billing_address: '',\n    booking_number: 0,\n    purchase_order_date: '',\n    campaign_name: '',\n    quotation_number: '',\n    gst_details: '',\n    company_pan: '',\n    payment_terms: '',\n  })\n \n\n  const [modalpurchase, setModalpurchase] = useState({\n    id: '',\n    billing_name: '',\n    billing_address: '',\n    booking_number: 261,\n    purchase_order_date: '',\n    campaign_name: '',\n    quotation_number: '',\n    gst_details: '',\n    company_pan: '',\n    payment_terms: '',\n  });\n\n\n  const [insertpurchasedata] = useMutation(InsertPurchase_Master);\n  const [updatepurchasedata] = useMutation(UpdatePurchase_Master);\n  const [deletepurchasedata] = useMutation(DeletePurchase_Master);\n  const [getBookingData,{loading,error,data}] = useLazyQuery(GET_BOOKING_DATA, {\n    onCompleted: data => {\n        // console.log('data ', data);\n        setGet_data(data);\n    }\n});\n  const getpurchase_order = useSubscription(getPurchase_Master);\n  const searchbookingdata = useQuery(SEARCH_BOOKING);\n  if (searchbookingdata.loading||getpurchase_order.loading||loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n  }\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(purchase)\n    insertpurchasedata({ variables: purchase })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalpurchase({\n      id: row.id,\n      billing_name: row.billing_name,\n      billing_address: row.billing_address,\n      booking_number: row.booking_number,\n      purchase_order_date: row.purchase_order_date,\n      campaign_name: row.campaign_name,\n      quotation_number: row.quotation_number,\n      gst_details: row.gst_details,\n      company_pan: row.company_pan,\n      payment_terms: row.payment_terms,\n    })\n  }\n  const onModalInputChange = (e) => {\n    setModalpurchase({ ...modalpurchase, [e.target.name]: e.target.value });\n  }\n\n  const onInputChange = (e) => {\n    console.log(typeof e.target.value);\n    setpurchase({ ...purchase, [e.target.name]: e.target.value })\n    \n  }\n  \n  \n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modalpurchase);\n    updatepurchasedata({ variables: { id: modalpurchase.id, billing_name: modalpurchase.billing_name, billing_address: modalpurchase.billing_address, booking_number: modalpurchase.booking_number, purchase_order_date: modalpurchase.purchase_order_date, campaign_name: modalpurchase.campaign_name, quotation_number: modalpurchase.quotation_number, gst_details: modalpurchase.gst_details, company_pan: modalpurchase.company_pan, payment_terms: modalpurchase.payment_terms } })\n    toast.configure();\n    toast.warning('Successfully Updated')\n    handleClose();\n  }\n\n  const onDelete = (id) => {\n    console.log(id);\n    deletepurchasedata({ variables: { id: id } });\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n  const onSearchFieldChange=(e)=>{\n    setSearchField(e.target.value);\n  }\n  const onsearch = (e) => {\n    e.preventDefault();\n    getBookingData({variables:{mobile_no:searchField}})\n   \n    //search_booking({ variables: { mobile_no: e.target[0].value } })\n  }\n\n\n  const columns = [\n    {\n      field: 'sno',\n      headerName: 'Serial No',\n      width: 150,\n    },\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'billing_name', headerName: 'Billing Name', width: 200 },\n\n    { field: 'billing_address', headerName: 'Billing Address', width: 200, },\n\n    { field: 'booking_number', headerName: 'Booking number', width: 230, },\n\n    { field: 'purchase_order_date', headerName: 'Purchase Order Date', width: 230, },\n\n\n    { field: 'campaign_name', headerName: 'Campaign', width: 210, },\n    { field: 'quotation_number', headerName: 'Quotation Number', width: 210, },\n    { field: 'gst_details', headerName: 'GST Details', width: 190, },\n    { field: 'company_pan', headerName: 'company Pan', width: 190, },\n    { field: 'payment_terms', headerName: 'Payment Terms', width: 190, },\n    // { field: 'gst no', headerName: 'gst no', width: 170, },\n    // { field: 'pan', headerName: 'pan', width: 170, },\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" onClick={() => {\n              const confirmBox = window.confirm(\n                \"Do you really want to delete?\"\n              )\n              if (confirmBox === true) {\n                onDelete(params.row.id)\n              }\n            }} ><i className=\"bi bi-trash-fill\"></i></button>\n\n          </div>\n        );\n      }\n    },\n\n\n  ];\n\n\n\n  \n  if (getpurchase_order.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n  }\n  //console.log(getpurchase_order.data);\n//console.log(get_data)\n  const rows = getpurchase_order.data.purchase_order;\n  let newData = []\n  rows.map((item, index) => {\n    newData.push({ sno: index + 1, ...item })\n  })\n\n\n\n  return (\n\n    <div>\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title style={{ marginLeft: \"130px\" }}>Edit Purchase Order</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">ID</label>\n                <input defaultValue={modalpurchase.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Billing Name</label>\n                <input defaultValue={modalpurchase.billing_name} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"billing_name\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Billing address</label>\n                <input defaultValue={modalpurchase.billing_address} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"billing_address\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Booking Number</label>\n                <input value={modalpurchase.booking_number} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"booking_number\" type=\"text\" required readonly/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Purchase_order_date</label>\n                <input defaultValue={modalpurchase.purchase_order_date} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"purchse_order_date\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Campaign Name</label>\n                <input defaultValue={modalpurchase.campaign_name} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"campaign_name\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Quotation Number</label>\n                <input defaultValue={modalpurchase.quotation_number} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"quotation_number\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">GST Details</label>\n                <input defaultValue={modalpurchase.gst_details} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"gst_details\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Company Pan</label>\n                <input defaultValue={modalpurchase.company_pan} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"company_pan\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Payment Terms</label>\n                <input defaultValue={modalpurchase.payment_terms} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"payment_terms\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"field col-md-6\">\n              <button className=\"btn btn-primary mt-3\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n            </div>\n          </form>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br />\n        <h4 className=\"text-center\">Purchase Order</h4>\n        <form onSubmit={onsearch}>\n          <div className=\"row\">\n            <div className=\"field col-md-4\"></div>\n            <div className=\"field col-md-4\">\n              <label>Search By Customer Mobile</label>\n              <input onChange={onSearchFieldChange} className=\"form-control\" type=\"text\" name=\"customer_search\" /><br />\n              <button className=\"btn btn-primary\" type=\"submit\" style={{ marginRight: '10px', width: '30%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Search</button>\n            </div>\n            <div className=\"field col-md-4\"></div>\n          </div><br />\n        </form>\n        <form onSubmit={onFormSubmit} className=\"form-group\">\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Billing Name</label>\n              <input placeholder=\"enter billing name\" className=\"form-control mt-1\" onChange={onInputChange} name=\"billing_name\" type=\"text\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Billing Adress</label>\n              <input placeholder=\"enter biiling_address\" className=\"form-control mt-1\" onChange={onInputChange} name=\"billing_address\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Booking Number</label>\n              {/* <input placeholder=\"enter booking number\" className=\"form-control mt-1\" onChange={onInputChange} name=\"booking_number\" type=\"text\" required /> */}\n              <select className=\"form-control\" onChange={onInputChange} name=\"booking_number\" required>\n                <option>Select...</option>\n                {\n                  get_data===undefined?\"\":get_data.Booking_Calender.map((booking)=>(\n                    <option key={booking.id} value={parseInt(booking.id)}>{booking.id}</option>\n                  ))\n                }\n              </select>\n            </div><br />\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Purchase order date</label>\n              <input placeholder=\"enter date\" className=\"form-control mt-1\" onChange={onInputChange} name=\"purchase_order_date\" type=\"date\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Campaign Name</label>\n              <input placeholder=\"enter campaign name\" className=\"form-control mt-1\" onChange={onInputChange} name=\"campaign_name\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Quotation Number</label>\n              <input placeholder=\"enter quotation Number\" className=\"form-control mt-1\" onChange={onInputChange} name=\"quotation_number\" type=\"text\" required />\n            </div>\n          </div><br />\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">GST Details</label>\n              <input placeholder=\"enter gst details\" className=\"form-control mt-1\" onChange={onInputChange} name=\"gst_details\" type=\"text\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Company Pan</label>\n              <input placeholder=\"enter Pan\" className=\"form-control mt-1\" onChange={onInputChange} name=\"company_pan\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Payment Terms</label>\n              <input placeholder=\"enter payment terms\" className=\"form-control mt-1\" onChange={onInputChange} name=\"payment_terms\" type=\"text\" required />\n            </div>\n          </div>\n          <br />\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n            <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n            {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n          </div>\n          <br />\n        </form>\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={newData}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n    </div>\n  );\n\n}\n\nexport default Purchase_Order_Management;","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription\n} from \"@apollo/client\";\n\nconst getFlex_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  flex_vinyl_management(where: {isDeleted: {_eq: $_eq}}){\n    designer_selection\n    designer_payment\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n\nconst InsertFlex_Master = gql`\nmutation MyMutation($designer_selection: String = \"\", $designer_payment: String = \"\", $media: String = \"\", $mounter_payment: String = \"\", $mounter_selection: String = \"\", $printer_payment: String = \"\", $printer_selection: Int = 10) {\n  insert_flex_vinyl_management_one(object: {designer_selection: $designer_selection, designer_payment: $designer_payment, media: $media, mounter_payment: $mounter_payment, mounter_selection: $mounter_selection, printer_payment: $printer_payment, printer_selection: $printer_selection}) {\n    designer_selection\n    designer_payment\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n  \n// const deleteFlex_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//   delete_flex_vinyl_management_by_pk(id: $id) {\n//     designer_selection\n//     designer_payment\n//     id\n//     media\n//     mounter_payment\n//     mounter_selection\n//     printer_payment\n//     printer_selection\n//   }\n// }`\n\nconst deleteFlex_Master=gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n  update_flex_vinyl_management_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n    id\n  }\n}\n\n`\n\nconst updateFlex_Master = gql`\nmutation MyMutation($designer_payment: String = \"\", $designer_selection: String = \"\", $media: String = \"\", $mounter_payment: String = \"\", $mounter_selection: String = \"\", $printer_payment: String = \"\", $printer_selection: Int = 10) {\n  update_flex_vinyl_management_by_pk(pk_columns: {id: 10}, _set: {designer_payment: $designer_payment, designer_selection: $designer_selection, media: $media, mounter_payment: $mounter_payment, mounter_selection: $mounter_selection, printer_payment: $printer_payment, printer_selection: $printer_selection}) {\n    designer_payment\n    designer_selection\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n\n\n\n\nexport default function Flex_and_Vinyl_Management() {\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [showhide, setShowhide] = useState('hidden');\n  const [Media, setMedia] = useState();\n\n  const [modalId, setModalId] = useState();\n  const [modalMedia, setModalMedia] = useState();\n  const [flex, setflex] = useState({\n\n    media: '',\n    designer_selection: '',\n    designer_payment: '',\n    printer_selection: '',\n    printer_payment: '',\n    mounter_selection: '',\n    mounter_payment: '',\n\n\n\n\n  });\n  const [Modalflex, setModalflex] = useState({\n    id: '',\n    media: '',\n    designer_selection: '',\n    designer_payment: '',\n    printer_selection: '',\n    printer_payment: '',\n    mounter_selection: '',\n    mounter_payment: '',\n    \n  })\n\n\n\n\n\n\n\n  const [Insert_flexinsertData] = useMutation(InsertFlex_Master);\n  const [delete_flexdeleteData] = useMutation(deleteFlex_Master);\n  const [update_flexupdateData] = useMutation(updateFlex_Master);\n\n  const onMediaChange = (e) => {\n    if (e.target.value === 'Yes') {\n        setShowhide('visible');\n    }\n    else {\n        setShowhide('hidden');\n    }\n    setMedia(e.target.value);\n    console.log(e.target.value);\n}\n\n  const onInputChange = (e) => {\n    setflex({ ...flex, [e.target.name]: e.target.value })\n  }\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(e.target)\n    Insert_flexinsertData({ variables: flex })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalflex({\n      id: row.id,\n      media: row.media,\n      designer_selection: row.designer_selection,\n      designer_payment: row.designer_payment,\n      printer_selection: row.printer_selection,\n      printer_payment: row.printer_payment,\n      mounter_selection: row.mounter_selection,\n      mounter_payment: row.mounter_payment,\n\n    })\n    console.log(Modalflex);\n  }\n\n  const onModalInputChange = (e) => {\n    setModalflex({ ...Modalflex, [e.target.name]: e.target.value })\n  }\n  const onModalMediaChange = (e) => {\n    if (e.target.value === 'Yes') {\n        setShowhide('visible');\n    }\n    else {\n        setShowhide('hidden');\n    }\n    setModalMedia(e.target.value);\n    console.log(e.target.value);\n}\n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    update_flexupdateData({ variables: Modalflex })\n    handleClose();\n    toast.configure();\n    toast.warning('Successfully Updated')\n  }\n\n\n\n  const onDelete = (id) => {\n    delete_flexdeleteData({ variables: { id: id } })\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n\n\n\n  const getflex_vinyl_management = useSubscription(getFlex_Master);\n  if (getflex_vinyl_management.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    console.log(getflex_vinyl_management.data);\n\n  }\n\n  const columns = [\n    {\n      field: 'sno',\n      headerName: 'Serial No',\n      width: 150,\n  },\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'media', headerName: 'Media', width: 200 },\n    { field: 'designer_selection', headerName: 'Designer_Selection', width: 200 },\n    { field: 'designer_payment', headerName: 'Designer_Payment', width: 200 },\n    { field: 'printer_selection', headerName: 'printer_Selection', width: 200 },\n    { field: 'printer_payment', headerName: 'Printer_Payment', width: 230 },\n    { field: 'mounter_selection', headerName: 'Mounter_Selection', width: 230 },\n    { field: 'mounter_payment', headerName: 'Mounter_Payment', width: 230 },\n\n\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { onEdit(params.row) }} style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button onClick={() => {\n              const confirmBox = window.confirm(\n                \"Do you really want to delete?\"\n              )\n              if (confirmBox === true) {\n                onDelete(params.row.id)\n              }\n            }} style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" ><i className=\"bi bi-trash-fill\"></i></button>\n\n\n\n\n          </div>\n        );\n      }\n    },\n  ];\n\n  const rows = getflex_vinyl_management.data.flex_vinyl_management;\n  let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n  //  const rows = [\n  //     // const rows = [\n  //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  // //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  // //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  // //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  // //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  // //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  // //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  // //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n\n  // //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  // //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  //  ];\n  return (\n    <div>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>Edit Flex And Vinyl Management</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <form onSubmit={onModalFormSubmit} className=\"form-group\" padding=\"1px\">\n\n            <div className=\"row mt-3\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Media</label>\n                <input placeholder=\"enter media\" defaultValue={Modalflex.media} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"media\" type=\"text\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Designer_Selection </label>\n                <input placeholder=\"enter designer selection \" defaultValue={Modalflex.designer_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"designer_selection\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Designer_Payment</label>\n                <input placeholder=\"enter designer payment\" defaultValue={Modalflex.designer_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"designer_payment\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row mt-4\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Printer_Selection</label>\n                <input placeholder=\"enter printer selection\" defaultValue={Modalflex.printer_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"printer_selection\" type=\"number\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">printer_Payment</label>\n                <input placeholder=\"enter printer payment\" defaultValue={Modalflex.printer_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"printer_payment\" type=\"text\" required />\n              </div>\n\n\n            </div>\n            <div className=\"row mt-4\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Mounter_Selection</label>\n                <input placeholder=\"enter mounter selection\" defaultValue={Modalflex.mounter_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"mounter_selection\" type=\"text\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Mounter_Payment</label>\n                <input placeholder=\"enter mounter payment\" defaultValue={Modalflex.mounter_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"mounter_payment\" type=\"text\" required />\n              </div>\n\n\n            </div>\n\n            <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n              <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n              {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n            </div>\n            <br />\n          </form>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br />\n        <h4 className=\"text-center\">Flex Vinyl Management</h4>\n\n        <br />\n        <form onSubmit={onFormSubmit}>\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Media</label>\n              <select className=\"form-control mt-2\" onChange={onMediaChange} >\n                                    <option>Select...</option>\n                                    <option>Flex</option>\n                                    <option>Vinyl</option>\n                                </select>\n              \n            </div>\n\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Designer Selection</label>\n              <input placeholder=\"enter designer selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"designer_selection\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Designer Payment</label>\n              <input placeholder=\"enter designer payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"designer_payment\" type=\"text\" required />\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Printer Selection</label>\n              <input placeholder=\"enter printer selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"printer_selection\" type=\"number\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Printer Payment</label>\n              <input placeholder=\"enter printer payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"printer_payment\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Mounter Selection</label>\n              <input placeholder=\"enter mounter selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"mounter_selection\" type=\"text\" required />\n            </div>\n          </div>\n          \n            \n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Mounter Payment</label>\n              <input placeholder=\"enter mounter payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"mounter_payment\" type=\"text\" required />\n            </div>\n          </div>\n\n          <br />\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n          <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n\n          </div>\n          <br />\n        </form>\n\n        {/* <div style={{ height: 500, width: '100%' }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={10}\n          rowsPerPageOptions={[10]}\n          checkboxSelection={false}\n          // components={{\n          //   Toolbar: GridToolbar,\n          // }}\n          style={{borderTop: '4px solid #05386b'}}\n          disableSelectionOnClick\n        />\n      </div> */}\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={newData}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n\n    </div>\n\n\n\n\n  )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_MONITORING = gql`\nquery MyQuery {\n    monitoring_images {\n      id\n      upload_image\n      status\n      geo_location\n      date\n      clients_name\n      brand_name\n    }\n  }\n`\nconst READ_MONITORING = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    monitoring_images(where: {isDeleted: {_eq: $_eq}}) {\n      id\n      upload_image\n      status\n      geo_location\n      date\n      clients_name\n      brand_name\n    }\n  }  \n`\nconst INSERT_MONITORING = gql`\nmutation MyMutation($brand_name: String = \"\", $clients_name: String = \"\", $date: String = \"\", $geo_location: String = \"\", $status: String = \"\", $upload_image: String = \"\") {\n    insert_monitoring_images_one(object: {brand_name: $brand_name, clients_name: $clients_name, date: $date, geo_location: $geo_location, status: $status, upload_image: $upload_image}) {\n      id\n    }\n  }\n`\nconst UPDATE_MONITORING = gql`\nmutation MyMutation($id: Int = 1, $brand_name: String = \"\", $clients_name: String = \"\", $date: String = \"\", $geo_location: String = \"\", $status: String = \"\", $upload_image: String = \"\", $id1: Int = 10) {\n    update_monitoring_images_by_pk(pk_columns: {id: $id}, _set: {brand_name: $brand_name, clients_name: $clients_name, date: $date, geo_location: $geo_location, status: $status, upload_image: $upload_image}) {\n      brand_name\n      clients_name\n      date\n      geo_location\n      id\n      status\n      upload_image\n    }\n  }  \n`\n// const DELETE_MONITORING = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_monitoring_images_by_pk(id: $id) {\n//       id\n//     }\n//   }  \n// `\n\nconst DELETE_MONITORING = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_monitoring_images_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\nexport default function MonitoringImages() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [monitoring, setMONITORING] = useState({\n        brand_name: '',\n        clients_name: '',\n        date: '',\n        geo_location: '',\n        status: '',\n        upload_image: '',\n    });\n\n    const [modalMONITORING, setModalMONITORING] = useState({\n        id: '',\n        brand_name: '',\n        clients_name: '',\n        date: '',\n        geo_location: '',\n        status: '',\n        upload_image: '',\n    });\n    const [insert_monitoring, insert_data] = useMutation(INSERT_MONITORING);\n    const [update_monitoring, update_data] = useMutation(UPDATE_MONITORING);\n    const [delete_monitoring, delete_data] = useMutation(DELETE_MONITORING);\n    const monitoring_data = useSubscription(READ_MONITORING);\n    if (monitoring_data.loading || monitoring_data.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setMONITORING({ ...monitoring, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        insert_monitoring({ variables: monitoring })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalMONITORING({\n            id: row.id,\n            brand_name: row.brand_name,\n            clients_name: row.clients_name,\n            date: row.date,\n            geo_location: row.geo_location,\n            status: row.status,\n            upload_image: row.upload_image\n        })\n        console.log(modalMONITORING);\n    }\n    const onModalInputChange = (e) => {\n        setModalMONITORING({ ...modalMONITORING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_monitoring({ variables: modalMONITORING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_monitoring({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'upload_image',\n            headerName: 'Upload Image',\n            width: 190\n        },\n        {\n            field: 'status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'geo_location',\n            headerName: 'Location',\n            width: 250\n        },\n        {\n            field: 'clients_name',\n            headerName: 'Client Name',\n            width: 160\n        },\n        {\n            field: 'brand_name',\n            headerName: 'Brand Name',\n            width: 180\n        },\n        {\n            field: 'date',\n            headerName: 'Date',\n            width: 110\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = monitoring_data.data.monitoring_images;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Data</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalMONITORING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Upload Images</label>\n                                <input defaultValue={modalMONITORING.upload_image} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"upload_image\" type=\"text\" placeholder=\"enter address\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Status</label>\n                                <input defaultValue={modalMONITORING.status} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"status\" type=\"text\" placeholder=\"enter status\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Location</label>\n                                <input defaultValue={modalMONITORING.geo_location} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"geo_location\" type=\"text\" placeholder=\"enter location\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Client Name</label>\n                                <input defaultValue={modalMONITORING.clients_name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"clients_name\" type=\"text\" placeholder=\"enter clients name\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Display Brand Name</label>\n                                <input defaultValue={modalMONITORING.brand_name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"brand_name\" type=\"text\" placeholder=\"enter brand name\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Date</label>\n                                <input defaultValue={modalMONITORING.date} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"date\" type=\"date\" placeholder=\"enter brand name\" />\n                            </div>\n\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\"style={{ marginRight: '50px', width:'22%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        </div>\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">MONITORING IMAGES</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Upload Image</label>\n                            <input type=\"text\" name=\"upload_image\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"upload your image\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Status</label>\n                            <input type=\"text\" name=\"status\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter status\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Location</label>\n                            <input type=\"text\" name=\"geo_location\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter location\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Client Name</label>\n                            <input type=\"text\" name=\"clients_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter client's name\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Display Brand Name</label>\n                            <input type=\"text\" name=\"brand_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter brand name\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Date</label>\n                            <input type=\"date\" name=\"date\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter date\" required />\n                        </div>\n                    </div><br />\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","class Auth{\n\n    login(cb){\n        cb();\n        localStorage.setItem(\"authenticated\",\"true\")\n    }\n    logout(cb){\n        cb();\n        localStorage.clear();\n    }\n    isAuthenticated(){\n        return localStorage.getItem(\"authenticated\");\n    }\n}\n\nexport default new Auth();","import React,{useState} from 'react';\nimport { useHistory } from 'react-router';\nimport auth from '../auth';\nimport {\n    useQuery,\n    gql,\n    useMutation\n  } from \"@apollo/client\";\n//import Header from '../components/Header';\n\nconst LOGIN_MUTATION = gql`\nquery MyQuery {\n    User {\n      username\n      password\n      role\n    }\n  }\n`;\n\nconst Login=() =>\n{\n    const history = useHistory();\n    const [formState, setFormState] = useState({\n        username:'',\n        password: '',\n        role:''\n    });\n    const {loading,error,data} = useQuery(LOGIN_MUTATION);\n    //console.log(data.User);\n    const FormSubmit=(e)=>\n    {\n        e.preventDefault();\n        //console.log(formState);\n        Array.isArray(data.User) && data.User.map((user)=>{\n            if(formState.username === user.username && formState.password === user.password)\n            {\n                //console.log(\"-----------------\"+localStorage.getItem(\"authenticated\"));\n                auth.login(()=>{\n                    localStorage.setItem(\"userrole\",user.role)\n                    localStorage.setItem(\"userdata\",formState.username);\n                    history.push(\"/\")\n                })\n                //console.log(\"-----------------\"+localStorage.getItem(\"authenticated\"));\n            }\n            else\n            {\n                console.log(\"Fail\");\n            }\n        })\n    }\n    \n    \n    const onInputChange=(e)=>{\n        setFormState({...formState,[e.target.name]:e.target.value})\n    }\n    //const authToken = localStorage.getItem(AUTH_TOKEN);\n    \n    //console.log(data)\n    return (\n        // <div className=\"container\">\n        //     <div>\n        //         <form onSubmit={(e)=>{FormSubmit(e)}}>\n        //         <div class=\"form-group\">\n        //             <label>Username</label>\n        //             <input type=\"text\" defaultValue={formState.username} onChange={(e)=>{onInputChange(e)}} name=\"username\" className=\"form-control\" placeholder=\"Enter Username\" />\n        //         </div>\n        //         <div class=\"form-group\">\n        //             <label>Password</label>\n        //             <input type=\"text\" defaultValue={formState.password} onChange={(e)=>{onInputChange(e)}} name=\"password\" className=\"form-control\" placeholder=\"Enter Password\" />\n        //         </div>\n        //         <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        //         </form>\n        //     </div>\n        // </div>\n        <section class=\"vh-100\">\n  <div class=\"container-fluid h-custom\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-md-9 col-lg-6 col-xl-5\">\n        <img src=\"https://mdbootstrap.com/img/Photos/new-templates/bootstrap-login-form/draw2.png\" class=\"img-fluid\"\n          alt=\"Sample image\" />\n      </div>\n      <div class=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n        <form onSubmit={(e)=>{FormSubmit(e)}}>\n          {/* <div class=\"d-flex flex-row align-items-center justify-content-center justify-content-lg-start\">\n            <p class=\"lead fw-normal mb-0 me-3\">Sign in with</p>\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-facebook-f\"></i>\n            </button>\n\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-twitter\"></i>\n            </button>\n\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-linkedin-in\"></i>\n            </button>\n          </div> */}\n\n          {/* <div class=\"divider d-flex align-items-center my-4\">\n            <p class=\"text-center fw-bold mx-3 mb-0\">Or</p>\n          </div> */}\n\n        \n          <div class=\"form-outline mb-4\">\n            <label class=\"form-label\" for=\"form3Example3\">Username</label>\n            <input  defaultValue={formState.username} onChange={(e)=>{onInputChange(e)}} name=\"username\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter a valid username\" />\n          </div>\n\n       \n          <div class=\"form-outline mb-3\">\n            <label class=\"form-label\" for=\"form3Example4\">Password</label>\n            <input type=\"password\" defaultValue={formState.password} onChange={(e)=>{onInputChange(e)}} name=\"password\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter password\" />\n          </div>\n\n          \n          <div class=\"text-center text-lg-start mt-4 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary btn-lg\"\n              style={{paddingLeft: \"2.5rem\", paddingRight: \"2.5rem\"}}>Login</button>\n            {/* <p class=\"small fw-bold mt-2 pt-1 mb-0\">Don't have an account? <a href=\"#!\"\n                class=\"link-danger\">Register</a></p> */}\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n  {/* <div class=\"d-flex flex-column flex-md-row text-center text-md-start justify-content-between py-4 px-4 px-xl-5 bg-primary\">\n    \n    <div class=\"text-white mb-3 mb-md-0\">\n      Copyright © 2020. All rights reserved.\n    </div>\n    \n    <div>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-facebook-f\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-twitter\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-google\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white\">\n        <i class=\"fab fa-linkedin-in\"></i>\n      </a>\n    </div>\n    \n  </div> */}\n</section>\n        \n    )\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport auth from \"./auth\";\n\nexport const ProtectedRoute=({component:Component,...rest})=>{\n    const auth = localStorage.getItem(\"authenticated\");\n    // console.log(\"==================================\"+auth)\n   \n    return (\n        <Route\n        {...rest}\n        render={props=>{\n            // console.log(\"Success\")\n            // console.log(\"==================================\"+auth)\n            // auth ? return (<Component {...props} />) : return(\n            //     <Redirect\n            //     to={{\n            //         pathname:\"/\",\n            //         state:{\n            //             from:props.location\n            //         }\n            //     }} />\n            // )\n\n            if (auth===\"true\"){\n                //console.log(\"Login\")\n                return <Component {...props} />\n            }\n            else\n            {\n                return(\n                    <Redirect\n                    to={{\n                        pathname:\"/Login\",\n                        state:{\n                            from:props.location\n                        }\n                    }} />\n                )\n            }\n        }} />\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n  }  \n`\n\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n`\nconst READ_MEDIA = gql`\nquery MyQuery {\n    media_type_master {\n      id\n      media_type\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n    \n`\nconst READ_SIZE = gql`\nquery MyQuery {\n    size_master {\n      id\n      height\n      width\n      no_of_display\n    }\n  }  \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($country: Int!,$state:Int!,$city:Int!,$illumination:String!,$media_type:Int!,$_gt: date = \"\") {\n    Inventory_Master(where: {Country: {_eq: $country}, State:{_eq:$state},City_Village:{_eq:$city},Illumination:{_eq:$illumination},Media_Type:{_eq:$media_type},AvailabilityTo: {_lt: $_gt}}) {\n        Status\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        id\n        country {\n            id\n            name\n          }\n          city {\n            id\n            name\n          }\n          state {\n            id\n            name\n          }\n          media_type_master {\n            id\n            media_type\n          }\n      }\n  }\n  \n`\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($id: Int!) {\n  delete_inquiry_master_by_pk(id: $id) {\n    id\n  }\n}\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription {\n    inquiry_master {\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      end_date\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      work_order\n      task_sheet\n      downtime\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\nconst UPDATE_Inventory = gql`\nmutation MyMutation($id: Int = 0,$Status:String=\"Hold\") {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {Status:$Status}) {\n      id\n    }\n  }\n  \n`\n\nexport default function Availability_Master() {\n    //States\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [showhide, setShowhide] = useState('hidden');\n    const [country, setCountry] = useState();\n    const [state, setState] = useState();\n    const [city, setCity] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    // const [district, setDistrict] = useState();\n    // const [taluka, setTaluka] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n    // Modal States\n    \n    const [ModalId, setModalId] = useState();\n    const [ModalCountry, setModalCountry] = useState();\n    const [ModalStates, setModalStates] = useState();\n    const [ModalTaluka, setModalTaluka] = useState();\n    const [ModalDistrict, setModalDistrict] = useState();\n    const [ModalCity_Village, setModalCity_Village] = useState();\n    const [ModalLocation, setModalLocation] = useState();\n    const [ModalMedia_Type, setModalMedia_Type] = useState();\n    const [ModalIllumination, setModalIllumination] = useState();\n    const [ModalWidth, setModalWidth] = useState(1);\n    const [ModalHeight, setModalHeight] = useState(1);\n    const [ModalNoofDisplay, setModalNoofDisplay] = useState(1);\n    const [ModalTotalsqft, setModalTotalsqft] = useState();\n    const [ModalDisplayRatePM, setModalDisplayRatePM] = useState();\n    const [ModalOneTimePrintingCost, setModalOneTimePrintingCost] = useState();\n    const [ModalOneTimeMountingCost, setModalOneTimeMountingCost] = useState();\n    const [ModalTotal, setModalTotal] = useState();\n    const [ModalAvailabilityFrom, setModalAvailabilityFrom] = useState();\n    const [ModalAvailabilityTo, setModalAvailabilityTo] = useState();\n    const [ModalDrpmRate, setModalDrpmRate] = useState();\n    const [ModalOtpcRate, setModalOtpcRate] = useState();\n    const [ModalOtmcRate, setModalOtmcRate] = useState();\n    const [Modalhoarding_insurance,setModalhoarding_insurance]=useState();\n    const [Modalerrection_cost,setModalerrection_cost]=useState();\n    const [Modalerrection_year,setModalerrection_year]=useState();\n    const [Modalfabrication_selection,setModalfabrication_selection]=useState();\n    const [ModalStatus,setModalStatus]=useState();\n\n    const [update_InventorymasterData] = useMutation(UPDATE_Inventory);\n    const read_media = useQuery(READ_MEDIA);\n    const read_countries = useQuery(READ_COUNTRIES);\n    const read_states = useQuery(READ_STATES);\n    const read_cities = useQuery(READ_CITIES);\n    //const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n\n    //Loader\n    if (read_inquiry.loading  || read_countries.loading || read_states.loading || read_cities.loading || loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onCountryChange = (country_data) => {\n        setCountry(country_data.id)\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n    }\n    const onCityChange = (city_data) => {\n        setCity(city_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        console.log(e.target.value)\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        console.log(e.target.value);\n        setSearchDate(e.target.value);\n    }\n    // const onDistrictChange = (district_data) => {\n    //     setDistrict(district_data.District);\n    // }\n    // const onTalukaChange = (taluka_data) => {\n    //     setTaluka(taluka_data.Taluka);\n    // }\n    const onLocationChange = (e) => {\n        //console.log(e.target[1].value);\n\n        //console.log(e.target.value);\n        var inv = data.Inventory_Master[0]\n        const filteredInventory = data.Inventory_Master.filter((location) => location.Location.includes(e.target.value))\n        setInventoryData(filteredInventory[0]);\n        //console.log(filteredInventory[0].id)\n        setLocation(filteredInventory[0].id);\n        //setShowhide(\"visible\");\n    }\n    const onSearch = (e) => {\n        e.preventDefault();\n        //console.log(district);\n        // loadInventory({variables:{country:country,state:state,city:city,district:district,taluka:taluka,location:location,size:size,illumination:illumination,media:media}})\n        loadInventory({ variables: { country: country, state: state, city: city, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        //console.log(data);\n        setShowhide(\"visible\");\n    }\n    const onEdit = (row) => {\n        //console.log(row);\n        handleShow();\n        setModalId(row.id);\n        setModalStatus(row.Status);\n\n\n        //console.log(modalInventory);\n    }\n    const onModalStatusChange=(e)=>{\n        setModalStatus(e.target.value)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(ModalStates.toString());\n        update_InventorymasterData({ variables: { id: ModalId,Status:ModalStatus} })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'Country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.country.name;\n            }\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.state.name;\n            }\n        },\n        {\n            field: 'City_Village',\n            headerName: 'City_Village',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n        { \n            field: 'District', \n            headerName: 'District', \n            width: 200 \n        },\n        { \n            field: 'Taluka', \n            headerName: 'Taluka', \n            width: 200 \n        },\n        { \n            field: 'Location', \n            headerName: 'Location', \n            width: 200 \n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        { \n            field: 'Illumination', \n            headerName: 'Illumination', \n            width: 200 \n        },\n        { \n            field: 'Width', \n            headerName: 'Width', \n            width: 200 \n        },\n        { \n            field: 'Height', \n            headerName: 'Height', \n            width: 200 \n        },\n        { \n            field: 'NoofDisplay', \n            headerName: 'No Of Display', \n            width: 200 \n        },\n        { \n            field: 'Totalsqft', \n            headerName: 'Total Sq ft', \n            width: 200 \n        },\n        { \n            field: 'DrpmRate', \n            headerName: 'DrpmRate', \n            width: 200 \n        },\n        { \n            field: 'DisplayRatePM', \n            headerName: 'DisplayRatePM', \n            width: 200 \n        },\n        { \n            field: 'OtpcRate', \n            headerName: 'OtpcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimePrintingCost', \n            headerName: 'OneTimePrintingCost', \n            width: 200 \n        },\n        { \n            field: 'OtmcRate', \n            headerName: 'OtmcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimeMountingCost', \n            headerName: 'OneTimeMountingCost', \n            width: 200 \n        },\n        { \n            field: 'Total', \n            headerName: 'Total', \n            width: 200 \n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'AvailabilityFrom',\n            width: 200\n        },\n        { \n            field: 'AvailabilityTo', \n            headerName: 'AvailabilityTo', \n            width: 200 \n        },\n        { \n            field: 'Status', \n            headerName: 'Status', \n            width: 200 \n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 170,\n            renderCell: (params) => {\n              return (\n                <div className=\"\">\n                  <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { onEdit(params.row) }} style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n                </div>\n              );\n            }\n          },\n    ]\n    //console.log(data);\n    const emptyarr = [\n        {\n            id:45,\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            City_Village: \"\",\n            Country: \"\",\n            DisplayRatePM: \"\",\n            District: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            State: \"\",\n            Taluka: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            city:{\n                id: \"\",\n                name: \"\"\n            },\n            country:{\n                id: \"\",\n                name: \"\"\n            },\n            media_type_master:{\n                id: \"\",\n                media_type: \"\"\n            },\n            state:{\n                id: \"\",\n                name: \"\"\n            }\n        }\n    ]\n    var rows = emptyarr;\n    if(data)\n    {\n       rows=data.Inventory_Master;\n    }\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n    console.log(rows);\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Availability Master</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                        <label>Id</label>\n                            <input type='text' name=\"id\" className=\"form-control\" defaultValue={ModalId} />\n                        </div>\n                        <div className=\"field col-md-4\">\n                        <label>Status</label>\n                            <select defaultValue={ModalStatus} className=\"form-control\"onChange={onModalStatusChange} >\n                                <option>Select...</option>\n                                <option>Immediate</option>\n                                <option>Booked</option>\n                                <option>Hold</option>\n                            </select>\n                        </div>\n                        </div><br/>\n\n                        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                            <br /><br />\n                            {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                        </div>\n\n\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n                    <h4 className=\"text-center\">Availability Master</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"country\" className=\"form-control mt-1\" placeholder=\"enter country\" required>\n                        <option>--SELECT--</option>\n                        {read_countries.data.countries.map(country => (\n                            <option key={country.id} value={country.id}>{country.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"state\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                        <option>--SELECT--</option>\n                        {read_states.data.states.map(state => (\n                            <option key={state.id} value={state.id}>{state.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"cities\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                        <option>--SELECT--</option>\n                        {read_cities.data.cities.map(city => (\n                            <option key={city.id} value={city.id}>{city.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                                <option>ALL</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\n                    </div><br />\n                    <div className=\"row\">\n\n                        {/* <div className=\"field col-md-4\" style={{ marginLeft: '30%' }}>\n                            <label className=\"required\" style={{ visibility: 'visible' }}>Location</label>\n                            <select className=\"form-control\" onChange={onLocationChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.Location}>{inventory.Location}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                    </div><br /> <br />\n                </form >\n                {/* <div style={{ height: 500, width: '100%', visibility: showhide }}  >\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Country</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.country.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>State</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.state.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>City</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.city.name} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>District</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.District} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Taluka</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Taluka} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Location</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Location} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Media</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.media_type_master.media_type} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Illumination} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Width</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Width} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Height</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Height} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>No Of Display</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.NoofDisplay} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Total sq ft</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Totalsqft} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DrpmRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Display Rate PM</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DisplayRatePM} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtpcRate} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>One Time Printing Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimePrintingCost} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtmcRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>One Time Mounting Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimeMountingCost} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Total</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Total} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability From</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityFrom} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability To</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityTo} readOnly />\n                        </div>\n                    </div>\n                    <CSVLink data={data === undefined ? '' : data.Inventory_Master}>Download</CSVLink>\n                </div> */}\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($id: Int!) {\n    Inventory_Master_by_pk(id: $id) {\n        id\n        hoarding_insurance_to\n        hoarding_insurance_from\n        hoarding_insurance\n      }\n  }  \n`\n\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      State\n      District\n      Subdistrict\n      DisplayRatePM\n      \n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n    \n      Total\n      Totalsqft\n      Width\n      \n      \n      hoarding_insurance\n      hoarding_insurance_to\n        hoarding_insurance_from\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      \n    }\n  }\n`\nconst UPDATE_INVENTORY=gql`\nmutation MyMutation($hoarding_insurance: String = \"\", $hoarding_insurance_from: date = \"\", $hoarding_insurance_to: date = \"\", $id: Int!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {hoarding_insurance: $hoarding_insurance, hoarding_insurance_from: $hoarding_insurance_from, hoarding_insurance_to: $hoarding_insurance_to}) {\n      id\n    }\n  }  \n`\n\nfunction Hoarding_Insurance1() {\n    //States\n    const [filteredData,setFilteredData] = useState();\n    const [get_data, setGet_data] = useState();\n    const [inventory, setInventory] = useState();\n    const [id,setId] = useState();\n    const [insurance, setInsurance] = useState();\n    const [insuranceFrom, setInsuranceFrom] = useState();\n    const [insuranceTo, setInsuranceTo] = useState();\n\n    //Queries\n    const [update_inventory] = useMutation(UPDATE_INVENTORY);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const [searchInventory, searchInventoryData] = useLazyQuery(SEARCH_INVENTORY, {\n        onCompleted: data => {\n            // console.log('data ', data);\n            setGet_data(data);\n        }\n    });\n    if (read_inventory.loading || searchInventoryData.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n\n    //Events\n    const onInventoryChange = (e) => {\n        setFilteredData(\"\")\n        setInventory(e.target.value);\n        //console.log(typeof e.target.value);\n        searchInventory({ variables: { id: inventory } });\n        const filteredInventory = read_inventory.data.Inventory_Master.filter((location) => location.id.toString().includes(e.target.value))\n        console.log(read_inventory.data.Inventory_Master.filter((location) => location.id.toString().includes(e.target.value)));\n        //setFilteredData(filteredInventory);\n        setId(filteredInventory[0].id)\n        setInsurance(filteredInventory[0].hoarding_insurance)\n        setInsuranceFrom(filteredInventory[0].hoarding_insurance_from)\n        setInsuranceTo(filteredInventory[0].hoarding_insurance_to)\n        //console.log(filteredData[0].hoarding_insurance)\n\n    }\n    const onInsuranceChange=(e)=>{\n        setInsurance(e.target.value);\n    }\n    const onInsuranceFromChange=(e)=>{\n        setInsuranceFrom(e.target.value);\n    }\n    const onInsuranceToChange=(e)=>{\n        setInsuranceTo(e.target.value);\n    }\n    const onFormSubmit=(e)=>{\n        e.preventDefault();\n        update_inventory({variables:{id:id,hoarding_insurance:insurance,hoarding_insurance_from:insuranceFrom,hoarding_insurance_to:insuranceTo}})\n    }\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form className='form-group' onSubmit={onFormSubmit}>\n                    <div className=\"col-md-12\">\n                        <br />\n                        <h4 style={{ width: '100%', textAlign: 'center' }}>HOARDING INSURANCE</h4>\n                        <br />\n                        {/* <Divider style={{ marginBottom: '8px', }} /> */}\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Inventory</label>\n                                <select className=\"form-control mt-1\" onChange={onInventoryChange}>\n                                    <option>Select...</option>\n                                    {read_inventory.data.Inventory_Master.map(inventory => (\n                                        <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <select defaultValue={insurance} onChange={onInsuranceChange} className=\"form-control mt-2\" >\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                            <div className=\"field col-md-2 \">\n                                <label className=\"required\">From Date</label>\n                                <input defaultValue={insuranceFrom} onChange={onInsuranceFromChange} type=\"date\" className=\"form-control\" />\n                            </div>\n                            <div className=\"field col-md-2 \">\n                                <label className=\"required\">To Date</label>\n                                <input defaultValue={insuranceTo} onChange={onInsuranceToChange} type=\"date\" className=\"form-control\" />\n                            </div>\n                        </div>\n\n                    </div>\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n                    </div>\n                    <br />\n                </form>\n            </Card>\n        </div>\n    )\n}\n\nexport default Hoarding_Insurance1\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_HOARDING = gql`\nsubscription MySubscription {\n  hoarding_errection {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    fabricator\n  }\n}\n`\nconst READ_HOARDING = gql`\nsubscription MySubscription {\n    hoarding_errection {\n        laborMasterByExcavator {\n            id\n            labor_type\n            name\n          }\n          laborMasterByElectricianSelection {\n            id\n            labor_type\n            name\n          }\n          labor_master {\n            id\n            labor_type\n            name\n          }\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    id\n    fabricator\n    }   \n}\n`\nconst INSERT_HOARDING = gql`\nmutation MyMutation($location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  insert_hoarding_errection_one(object: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n  }\n}\n`\nconst UPDATE_HOARDING = gql`\nmutation MyMutation($id: Int = 10, $location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  update_hoarding_errection_by_pk(pk_columns: {id: $id}, _set: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n  }\n}\n`\nconst DELETE_HOARDING = gql`\nmutation MyMutation($id: Int = 10) {\n  delete_hoarding_errection_by_pk(id: $id) {\n    id\n  }\n}\n`\nconst READ_LABOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 21}}) {\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      pan\n      name\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nsubscription MySubscription {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n     \n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n`\nconst READ_ELECTRICIAN = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 20}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_CIVIL_CONTRACTOR = gql`\nsubscription MySubscription {\n    labor_master(where: {isDeleted: {_eq: \"false\"},labor_type: {_eq: 24}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_EXCAVATOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 23}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nexport default function HoardingErrection() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [hoarding, setHOARDING] = useState({\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n\n    const [modalHOARDING, setModalHOARDING] = useState({\n        id: '',\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n    const [insert_hoarding, insert_data] = useMutation(INSERT_HOARDING);\n    const [update_hoarding, update_data] = useMutation(UPDATE_HOARDING);\n    const [delete_hoarding, delete_data] = useMutation(DELETE_HOARDING);\n    const read_labor = useSubscription(READ_LABOR);\n    const read_excavator = useSubscription(READ_EXCAVATOR);\n    const read_electrician = useSubscription(READ_ELECTRICIAN);\n    const read_civil_contractor = useSubscription(READ_CIVIL_CONTRACTOR);\n    const read_inventory = useSubscription(READ_INVENTORY);\n    const hoarding_data = useSubscription(READ_HOARDING);\n    if (hoarding_data.loading || hoarding_data.loading || read_labor.loading || read_inventory.loading || read_excavator.loading || read_electrician.loading || read_civil_contractor.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setHOARDING({ ...hoarding, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(hoarding)\n        insert_hoarding({ variables: hoarding })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalHOARDING({\n            id: row.id,\n            location: row.location,\n            payment: row.payment,\n            permission: row.permission,\n            excavator: row.excavator,\n            excavator_charges: row.excavator_charges,\n            civil_contractor: row.civil_contractor,\n            civil_material: row.civil_material,\n            civil_contractor_labour_payment: row.civil_contractor_labour_payment,\n            fabrication_material: row.fabrication_material,\n            fabricator_labour_payment: row.fabricator_labour_payment,\n            transport_charges: row.transport_charges,\n            electrician_selection: row.electrician_selection,\n            electric_material_purchase: row.electric_material_purchase,\n            electrician_labour_payment: row.electrician_labour_payment,\n            fabricator:row.fabricator,\n        })\n        console.log(modalHOARDING);\n    }\n    const onModalInputChange = (e) => {\n        setModalHOARDING({ ...modalHOARDING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_hoarding({ variables: modalHOARDING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_hoarding({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'location',\n            headerName: 'Location Provided By Agent Name',\n            width: 300\n        },\n        {\n            field: 'payment',\n            headerName: 'Payment For Location To Agent Amount',\n            width: 330\n        },\n        {\n            field: 'permission',\n            headerName: 'Permission Cost Amount',\n            width: 250\n        },\n        {\n            field: 'excavator',\n            headerName: 'Excavator Selection',\n            width: 210,\n            valueGetter: (params) => {\n                return params.row.laborMasterByExcavator.name;\n            }\n        },\n        {\n            field: 'excavator_charges',\n            headerName: 'Excavator Charges Amount',\n            width: 260\n        },\n        {\n            field: 'civil_contractor',\n            headerName: 'Civil Contractor Selection',\n            width: 250,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'civil_material',\n            headerName: 'Civil Material Purchase Amount',\n            width: 280\n        },\n        {\n            field: 'civil_contractor_labour_payment',\n            headerName: 'Civil Contractor Labour Payment Amount',\n            width: 340\n        },\n        {\n            field: 'fabrication_material',\n            headerName: 'Fabrication Material Purchase Amount',\n            width: 320\n        },\n        {\n            field: 'fabricator_labour_payment',\n            headerName: 'Fabricator Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'transport_charges',\n            headerName: 'Transport Charges If Any',\n            width: 240\n        },\n        {\n            field: 'electrician_selection',\n            headerName: 'Electrician Selection',\n            width: 220,\n            valueGetter: (params) => {\n                return params.row.laborMasterByElectricianSelection.name;\n            }\n        },\n        {\n            field: 'electric_material_purchase',\n            headerName: 'Electric Material Purchase Amount',\n            width: 310\n        },\n        {\n            field: 'electrician_labour_payment',\n            headerName: 'Electrician Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'fabricator',\n            headerName: 'Fabricator',\n            width: 310\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = hoarding_data.data.hoarding_errection;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Hoarding Errection</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalHOARDING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Location Provided By Agent's Name\n                                </label>\n                                <input defaultValue={modalHOARDING.location} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"location\" type=\"text\" placeholder=\"enter location provided by agent's name\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Payment For Location To Agent Amount</label>\n                                <input defaultValue={modalHOARDING.payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"payment\" type=\"text\" placeholder=\"enter payment for location to agent's amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Permission Cost Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.permission} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"permission\" type=\"text\" placeholder=\"enter permission cost amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Selection</label>\n                                {/* <input defaultValue={modalHOARDING.excavator} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator\" type=\"text\" placeholder=\"select excavator\" /> */}\n                                <select defaultValue={modalHOARDING.excavator} name=\"excavator\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_excavator.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Charges Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.excavator_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator_charges\" type=\"text\" placeholder=\"enter excavator charges amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contractor Selection</label>\n                                {/* <input defaultValue={modalHOARDING.civil_contractor} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor\" type=\"text\" placeholder=\"select civil contractor\" /> */}\n                                <select defaultValue={modalHOARDING.civil_contractor} name=\"civil_contractor\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_civil_contractor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.civil_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_material\" type=\"text\" placeholder=\"enter civil material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contract Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.civil_contractor_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabrication Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.fabrication_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabrication_material\" type=\"text\" placeholder=\"enter fabrication material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.fabricator_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabricator_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Transport Changes If Any\n                                </label>\n                                <input defaultValue={modalHOARDING.transport_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"transport_charges\" type=\"text\" placeholder=\"enter transport charges if any\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Selection</label>\n                                {/* <input defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_selection\" type=\"text\" placeholder=\"select electrician\" /> */}\n                                <select defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} name=\"electrician_selection\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_electrician.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electric Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electric_material_purchase} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electric_material_purchase\" type=\"text\" placeholder=\"enter electric material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Labour Payment Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electrician_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_labour_payment\" type=\"text\" placeholder=\"enter electrician labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator</label>\n                                <select defaultValue={modalHOARDING.fabricator} name=\"fabricator\" className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_labor.data.labor_master.map((labor)=>(\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '25%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"0.5%\",\n                padding: \"0.5%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">HOARDING ERRECTION</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Location Provided By Agent Name</label>\n                            <input type=\"text\" name=\"location\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter location provided by agent name\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Payment For Location To Agent Amount</label>\n                            <input type=\"text\" name=\"payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter payment for location to agent amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Permission Cost Amount</label>\n                            <input type=\"text\" name=\"permission\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter permission cost amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Selection</label>\n                            {/* <input type=\"text\" name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select excavator\" required /> */}\n                            <select name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_excavator.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Charges Amount</label>\n                            <input type=\"text\" name=\"excavator_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter excavator charges amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Selection</label>\n                            {/* <input type=\"text\" name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select civil contractor\" required /> */}\n                            <select name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_civil_contractor.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Material Purchase Amount</label>\n                            <input type=\"text\" name=\"civil_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Labour Payment Amount</label>\n                            <input type=\"text\" name=\"civil_contractor_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil contractor labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabrication Material Purchase Amount</label>\n                            <input type=\"text\" name=\"fabrication_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabrication material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Transport Charges If Any</label>\n                            <input type=\"text\" name=\"transport_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter transport charges if any\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Selection</label>\n                            {/* <input type=\"text\" name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select electrician\" required /> */}\n                            <select name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_electrician.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electric Material Purchase Amount</label>\n                            <input type=\"text\" name=\"electric_material_purchase\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electric material purchase amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Labour Payment Amount</label>\n                            <input type=\"text\" name=\"electrician_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electrician labour payment amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator</label>\n                            <select name=\"fabricator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {\n                                    read_labor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_HOARDING = gql`\nsubscription MySubscription {\n  hoarding_errection {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    fabricator\n  }\n}\n`\nconst READ_HOARDING = gql`\nsubscription MySubscription {\n    hoarding_errection {\n        laborMasterByExcavator {\n            id\n            labor_type\n            name\n          }\n          laborMasterByElectricianSelection {\n            id\n            labor_type\n            name\n          }\n          labor_master {\n            id\n            labor_type\n            name\n          }\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    id\n    fabricator\n    }   \n}\n`\nconst INSERT_HOARDING = gql`\nmutation MyMutation($location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  insert_hoarding_errection_one(object: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n  }\n}\n`\nconst UPDATE_HOARDING = gql`\nmutation MyMutation($id: Int = 10, $location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  update_hoarding_errection_by_pk(pk_columns: {id: $id}, _set: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n  }\n}\n`\nconst DELETE_HOARDING = gql`\nmutation MyMutation($id: Int = 10) {\n  delete_hoarding_errection_by_pk(id: $id) {\n    id\n  }\n}\n`\nconst READ_LABOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 7}}) {\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      pan\n      name\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nsubscription MySubscription {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n     \n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n`\nconst READ_ELECTRICIAN = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 3}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_CIVIL_CONTRACTOR = gql`\nsubscription MySubscription {\n    labor_master(where: {isDeleted: {_eq: \"false\"},labor_type: {_eq: 5}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_EXCAVATOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 1}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nexport default function HoardingErrection() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [hoarding, setHOARDING] = useState({\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n\n    const [modalHOARDING, setModalHOARDING] = useState({\n        id: '',\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n    const [insert_hoarding, insert_data] = useMutation(INSERT_HOARDING);\n    const [update_hoarding, update_data] = useMutation(UPDATE_HOARDING);\n    const [delete_hoarding, delete_data] = useMutation(DELETE_HOARDING);\n    const read_labor = useSubscription(READ_LABOR);\n    const read_excavator = useSubscription(READ_EXCAVATOR);\n    const read_electrician = useSubscription(READ_ELECTRICIAN);\n    const read_civil_contractor = useSubscription(READ_CIVIL_CONTRACTOR);\n    const read_inventory = useSubscription(READ_INVENTORY);\n    const hoarding_data = useSubscription(READ_HOARDING);\n    if (hoarding_data.loading || hoarding_data.loading || read_labor.loading || read_inventory.loading || read_excavator.loading || read_electrician.loading || read_civil_contractor.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setHOARDING({ ...hoarding, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(hoarding)\n        insert_hoarding({ variables: hoarding })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalHOARDING({\n            id: row.id,\n            location: row.location,\n            payment: row.payment,\n            permission: row.permission,\n            excavator: row.excavator,\n            excavator_charges: row.excavator_charges,\n            civil_contractor: row.civil_contractor,\n            civil_material: row.civil_material,\n            civil_contractor_labour_payment: row.civil_contractor_labour_payment,\n            fabrication_material: row.fabrication_material,\n            fabricator_labour_payment: row.fabricator_labour_payment,\n            transport_charges: row.transport_charges,\n            electrician_selection: row.electrician_selection,\n            electric_material_purchase: row.electric_material_purchase,\n            electrician_labour_payment: row.electrician_labour_payment,\n            fabricator:row.fabricator,\n        })\n        console.log(modalHOARDING);\n    }\n    const onModalInputChange = (e) => {\n        setModalHOARDING({ ...modalHOARDING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_hoarding({ variables: modalHOARDING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_hoarding({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'location',\n            headerName: 'Location Provided By Agent Name',\n            width: 300\n        },\n        {\n            field: 'payment',\n            headerName: 'Payment For Location To Agent Amount',\n            width: 330\n        },\n        {\n            field: 'permission',\n            headerName: 'Permission Cost Amount',\n            width: 250\n        },\n        {\n            field: 'excavator',\n            headerName: 'Excavator Selection',\n            width: 210,\n            valueGetter: (params) => {\n                return params.row.laborMasterByExcavator.name;\n            }\n        },\n        {\n            field: 'excavator_charges',\n            headerName: 'Excavator Charges Amount',\n            width: 260\n        },\n        {\n            field: 'civil_contractor',\n            headerName: 'Civil Contractor Selection',\n            width: 250,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'civil_material',\n            headerName: 'Civil Material Purchase Amount',\n            width: 280\n        },\n        {\n            field: 'civil_contractor_labour_payment',\n            headerName: 'Civil Contractor Labour Payment Amount',\n            width: 340\n        },\n        {\n            field: 'fabrication_material',\n            headerName: 'Fabrication Material Purchase Amount',\n            width: 320\n        },\n        {\n            field: 'fabricator_labour_payment',\n            headerName: 'Fabricator Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'transport_charges',\n            headerName: 'Transport Charges If Any',\n            width: 240\n        },\n        {\n            field: 'electrician_selection',\n            headerName: 'Electrician Selection',\n            width: 220,\n            valueGetter: (params) => {\n                return params.row.laborMasterByElectricianSelection.name;\n            }\n        },\n        {\n            field: 'electric_material_purchase',\n            headerName: 'Electric Material Purchase Amount',\n            width: 310\n        },\n        {\n            field: 'electrician_labour_payment',\n            headerName: 'Electrician Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'fabricator',\n            headerName: 'Fabricator',\n            width: 310\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = hoarding_data.data.hoarding_errection;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Hoarding Errection</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalHOARDING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Location Provided By Agent's Name\n                                </label>\n                                <input defaultValue={modalHOARDING.location} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"location\" type=\"text\" placeholder=\"enter location provided by agent's name\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Payment For Location To Agent Amount</label>\n                                <input defaultValue={modalHOARDING.payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"payment\" type=\"text\" placeholder=\"enter payment for location to agent's amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Permission Cost Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.permission} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"permission\" type=\"text\" placeholder=\"enter permission cost amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Selection</label>\n                                {/* <input defaultValue={modalHOARDING.excavator} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator\" type=\"text\" placeholder=\"select excavator\" /> */}\n                                <select defaultValue={modalHOARDING.excavator} name=\"excavator\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_excavator.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Charges Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.excavator_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator_charges\" type=\"text\" placeholder=\"enter excavator charges amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contractor Selection</label>\n                                {/* <input defaultValue={modalHOARDING.civil_contractor} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor\" type=\"text\" placeholder=\"select civil contractor\" /> */}\n                                <select defaultValue={modalHOARDING.civil_contractor} name=\"civil_contractor\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_civil_contractor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.civil_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_material\" type=\"text\" placeholder=\"enter civil material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contract Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.civil_contractor_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabrication Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.fabrication_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabrication_material\" type=\"text\" placeholder=\"enter fabrication material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.fabricator_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabricator_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Transport Changes If Any\n                                </label>\n                                <input defaultValue={modalHOARDING.transport_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"transport_charges\" type=\"text\" placeholder=\"enter transport charges if any\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Selection</label>\n                                {/* <input defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_selection\" type=\"text\" placeholder=\"select electrician\" /> */}\n                                <select defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} name=\"electrician_selection\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_electrician.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electric Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electric_material_purchase} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electric_material_purchase\" type=\"text\" placeholder=\"enter electric material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Labour Payment Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electrician_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_labour_payment\" type=\"text\" placeholder=\"enter electrician labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator</label>\n                                <select defaultValue={modalHOARDING.fabricator} name=\"fabricator\" className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_labor.data.labor_master.map((labor)=>(\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '25%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"0.5%\",\n                padding: \"0.5%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">HOARDING ERRECTION</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Location Provided By Agent Name</label>\n                            <input type=\"text\" name=\"location\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter location provided by agent name\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Payment For Location To Agent Amount</label>\n                            <input type=\"text\" name=\"payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter payment for location to agent amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Permission Cost Amount</label>\n                            <input type=\"text\" name=\"permission\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter permission cost amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Selection</label>\n                            {/* <input type=\"text\" name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select excavator\" required /> */}\n                            <select name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_excavator.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Charges Amount</label>\n                            <input type=\"text\" name=\"excavator_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter excavator charges amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Selection</label>\n                            {/* <input type=\"text\" name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select civil contractor\" required /> */}\n                            <select name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_civil_contractor.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Material Purchase Amount</label>\n                            <input type=\"text\" name=\"civil_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Labour Payment Amount</label>\n                            <input type=\"text\" name=\"civil_contractor_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil contractor labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabrication Material Purchase Amount</label>\n                            <input type=\"text\" name=\"fabrication_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabrication material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Transport Charges If Any</label>\n                            <input type=\"text\" name=\"transport_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter transport charges if any\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Selection</label>\n                            {/* <input type=\"text\" name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select electrician\" required /> */}\n                            <select name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_electrician.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electric Material Purchase Amount</label>\n                            <input type=\"text\" name=\"electric_material_purchase\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electric material purchase amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Labour Payment Amount</label>\n                            <input type=\"text\" name=\"electrician_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electrician labour payment amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator</label>\n                            <select name=\"fabricator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {\n                                    read_labor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst INSERT_QUICK_MEDIA=gql`\nmutation MyMutation($inquiry: Int = 0, $mobile_no: String = \"\",$proposal_no:Int!) {\n    insert_quick_media_one(object: {inquiry: $inquiry, mobile_no: $mobile_no,proposal_no:$proposal_no}) {\n      id\n    }\n  }\n`\n\n// const DELETE_QUICK_MEDIA=gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_quick_media_by_pk(id: $id) {\n//       id\n//     }\n//   }\n  \n// `\n\nconst DELETE_QUICK_MEDIA=gql`\nmutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n    update_quick_media_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\nconst READ_QUICK=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    quick_media(where: {isDeleted: {_eq: $_eq}}) {\n      inquiry\n      inquiry_master {\n        id\n        Inventory_Master {\n          Location\n        }\n      }\n      id\n      mobile_no\n      proposal_no\n    }\n  }\n  \n`\nconst SEARCH_INQUIRY=gql`\nquery MyQuery($number: String!, $_eq: String = \"false\") {\n    inquiry_master(where: {number: {_eq: $number}, isDeleted: {_eq: $_eq}}) {\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        Subdistrict\n        State\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        \n        Status\n        \n        Total\n        Totalsqft\n        Width\n        \n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        \n      }\n      email_id\n      id\n      inventory\n      media_type\n      media_type_master {\n        id\n        media_type\n      }\n      name\n      number\n      sol\n      start_date\n      status\n      whatsapp_number\n    }\n  }\n    \n`\nconst GET_MOBILE=gql`\nquery MyQuery($mobile_no: String!, $_eq: String = \"false\") {\n    quick_media(where: {mobile_no: {_eq: $mobile_no}, isDeleted: {_eq: $_eq}}) {\n      id\n      inquiry\n      mobile_no\n      proposal_no\n    }\n  }\n  \n  \n  \n`\n\nfunction Quick_Media() {\n    //States\n    const [get_data,setGet_data] = useState();\n    const [mobile_no,setMobile_no] = useState();\n    const [selected,setSelected] = useState();\n    //Queries\n    const [delete_quick_media] = useMutation(DELETE_QUICK_MEDIA);\n    const [insert_quick_media] = useMutation(INSERT_QUICK_MEDIA);\n    const [search_inquiry,return_inquiry] = useLazyQuery(SEARCH_INQUIRY);\n    const [get_mobile,mobile_no_exists] = useLazyQuery(GET_MOBILE,{\n        onCompleted: data => {\n            console.log('data ', data);\n            setGet_data(data);\n          }\n    });\n    const read_quick = useSubscription(READ_QUICK)\n    //functions\n    const onSearch=(e)=>{\n        e.preventDefault();\n        //console.log(e.target[0].value)\n        get_mobile({variables:{mobile_no:e.target[0].value}})\n        search_inquiry({variables:{number:e.target[0].value}})\n    }\n    const onMobileNoChange=(e)=>{\n        setMobile_no(e.target.value);\n    }\n    const saveData=(e)=>{\n        console.log(get_data.quick_media);\n        // if(get_data.quick_media)\n        // {\n        //     var counter = \"\";\n        // }\n        // else\n        // {\n        //     var counter=get_data.quick_media.at(-1);\n        // }\n        //console.log(get_data.quick_media===\"[]\"?\"\":console.log(\"Hello\"));\n        //console.assert()\n\n        //console.log(get_data.quick_media.length===0);\n        //Code comented now\n        console.log(get_data.quick_media.length===0?\"\":get_data.quick_media.at(-1))\n        const counter=get_data.quick_media.length===0?\"\":get_data.quick_media.at(-1)\n        console.log(counter);\n        if(counter===\"\")\n        {\n            var counter_proposal=0;\n        }\n        else\n        {\n            var counter_proposal=counter.proposal_no\n        }\n        for(var i=0;i<selected.length;i++)\n        {\n            insert_quick_media({variables:{inquiry:selected[i],mobile_no:mobile_no,proposal_no:counter_proposal+1}});\n        }\n        \n    }\n    const onDelete=(id)=>{\n        delete_quick_media({variables:{id:id}})\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    //Loader\n    if (return_inquiry.loading||read_quick.loading||mobile_no_exists.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    const emptyarr = [\n        {\n            id:\"\",\n            number:\"\",\n            name:\"\",\n            sol:\"\",\n            start_date:\"\",\n            status:\"\",\n            whatsapp_number:\"\",\n            Inventory_Master:\n            {\n                id:\"\",\n                AvailabilityFrom: \"\",\n                AvailabilityTo: \"\",\n                Subdistrict: \"\",\n                State: \"\",\n                DisplayRatePM: \"\",\n                District: \"\",\n                DrpmRate: \"\",\n                Height: \"\",\n                Illumination: \"\",\n                Location: \"\",\n                Media_Type: \"\",\n                NoofDisplay: \"\",\n                OneTimeMountingCost: \"\",\n                OneTimePrintingCost: \"\",\n                OtmcRate: \"\",\n                OtpcRate: \"\",\n                Total: \"\",\n                Totalsqft: \"\",\n                Width: \"\",\n                \n                media_type_master:{\n                    id: \"\",\n                    media_type: \"\"\n                },\n               \n            }\n        }\n    ]\n    //console.log(\"-------------------------------\",mobile_no_exists===undefined?\"\":mobile_no_exists.data);\n    \n    var rows = emptyarr;\n    //console.log(data);\n    if(return_inquiry.data)\n    {\n       rows=return_inquiry.data.inquiry_master;\n    }\n    const rows1=read_quick.data.quick_media;\n    let newData1 = []\n    rows1.map((item, index) => {\n        newData1.push({ sno: index + 1, ...item })\n    })\n    const columns1=[\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field:'id',\n            headerName:'ID',\n            width:200\n        },\n        {\n            field:'mobile_no',\n            headerName:'Mobile No',\n            width:200\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.inquiry_master.Inventory_Master.Location;\n            }\n        },\n        {\n            field:'proposal_no',\n            headerName:'Proposal No',\n            width:200\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        {/* <button onClick={() => onDownload(params.row)} data-toggle=\"tooltip\" title=\"Download\" type=\"button\" className=\"btn btn-primary\"  ><i className=\"bi bi-pencil-fill\"></i></button> */}\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n        \n    ]\n    const columns=[\n        { \n            field: 'id', \n            headerName: 'ID', \n            width: 200 \n        },\n        { \n            field: 'name', \n            headerName: 'Name', \n            width: 200 \n        },\n        { \n            field: 'number', \n            headerName: 'Number', \n            width: 200 \n        },\n        { \n            field: 'sol', \n            headerName: 'Source Of Lead', \n            width: 200 \n        },\n        { \n            field: 'sol', \n            headerName: 'Source Of Lead', \n            width: 200 \n        },\n        { \n            field: 'start_date', \n            headerName: 'Start Date', \n            width: 200 \n        },\n        { \n            field: 'status', \n            headerName: 'Status', \n            width: 200 \n        },\n        { \n            field: 'whatsapp_number', \n            headerName: 'Whatsapp Number', \n            width: 200 \n        },\n        \n        {\n            field: 'media',\n            headerName: 'Media',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Illumination',\n            headerName: 'Illumination',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Illumination;\n            }\n        },\n        {\n            field: 'Width',\n            headerName: 'Width',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Width;\n            }\n        },\n        {\n            field: 'Height',\n            headerName: 'Height',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Height;\n            }\n        },\n        {\n            field: 'NoofDisplay',\n            headerName: 'No Of Display',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.NoofDisplay;\n            }\n        },\n        {\n            field: 'TotalSqft',\n            headerName: 'Total Sq Ft',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Totalsqft;\n            }\n        },\n        {\n            field: 'DrpmRate',\n            headerName: 'DRPM Rate',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.DrpmRate;\n            }\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'availability_from',\n            headerName: 'Availability From',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.AvailabilityFrom;\n            }\n        },\n        {\n            field: 'availability_to',\n            headerName: 'Availability To',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.AvailabilityTo;\n            }\n        },\n        \n    ]\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"4%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form className=\"form-group\" onSubmit={onSearch}>\n                    <h4 className=\"text-center\">Quick Media Proposal</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input onChange={onMobileNoChange} type=\"text\" className=\"form-control\" />\n                        </div>\n                        <div className=\"field col-md-4\"></div><br />\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\n                        <div className=\"field col-md-4\"></div>\n                    </div>\n                </form><br />\n                <div style={{ height: 500, width: '100%'}}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                        onSelectionModelChange={itm => setSelected(itm)}\n                        \n                    />\n                    <button className=\"btn btn-primary\" onClick={saveData} style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                    <br/>\n                </div>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%'}}>\n                <DataGrid\n                    rows={newData1}\n                    columns={columns1}\n                    pageSize={10}\n                    rowsPerPageOptions={[10]}\n                    checkboxSelection={true}\n                    components={{\n                        Toolbar: GridToolbar,\n                    }}\n                        \n                        \n                    /> \n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Quick_Media","import { Divider } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory, Link } from \"react-router-dom\";\nimport Navbar from './Navbar';\nimport { GridMenuIcon } from \"@material-ui/data-grid\";\nimport Employee_Master from './NavItems/Employee_Master';\nimport Location_Master from './NavItems/Location_Master';\nimport Customer_Master from './NavItems/Customer_Master';\nimport Media_Type_Master from './NavItems/Media_Type_Master';\nimport Size_Master from './NavItems/Size_Master';\nimport Industry_Master from './NavItems/Industry_Master';\nimport GST_Type_Master from './NavItems/GST_Type_Master';\nimport Labour_Master from './NavItems/Labour_Master';\nimport Dashboard from './NavItems/Dashboard';\nimport Inventory_Master from \"./NavItems/Inventory_Master\";\nimport Labor_Category_Master from \"./NavItems/Labor_Category_Master\";\nimport Payment_Type from \"./NavItems/Payment_Type\";\nimport Availability from \"./NavItems/Availability\";\nimport Inquiry_Master from \"./NavItems/Inquiry_Master\";\nimport Inquiry_Master1 from \"./NavItems/Inquiry_Master1\";\nimport Booking from \"./NavItems/Booking\";\nimport Landloard_Management from \"./NavItems/Landlord_Management\";\nimport Quick_Media_Proposal from \"./NavItems/Quick_Media_Proposal\";\nimport Purchase_Order_Management from \"./NavItems/Purchase_Order_Management\";\nimport Flex_and_Vinyl_Management from \"./NavItems/Flex_and_Vnyl_Management\";\nimport MonitoringImages from \"./NavItems/MonitoringImages\";\nimport Login from \"./Login\";\nimport { ProtectedRoute } from '../protected.route';\nimport auth from '../auth';\nimport Availability_Master from \"./NavItems/Availability_Master\";\nimport Hoarding_Insurance1 from \"./NavItems/Hoarding_Insurance1\";\nimport Hoarding_Erection from \"./NavItems/Hoarding_Erection\";\nimport HoardingErrection from \"./NavItems/HoardingErrection\";\nimport Quick_Media from \"./NavItems/Quick_Media\";\n\n// import { MenuOpen } from \"@material-ui/icons\";\n\nconst Body = () => {\n  const [date, setDate] = useState(new Date());\n\n  function refreshClock() {\n    setDate(new Date());\n  }\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000);\n    return function cleanup() {\n      clearInterval(timerId);\n    };\n  }, []);\n  const history = useHistory();\n  const homeRedirect = () => {\n    history.push('/')\n  }\n\n  const [menu, setMenu] = useState(false);\n  const menu_toggle = () => {\n    let a = document.getElementById('sidebar');\n    let b = document.getElementById('main');\n    if (menu) {\n      a.style.display = 'none';\n      b.className = 'col-md-12 main';\n      setMenu(false);\n    } else {\n      a.style.display = 'block';\n      b.className = 'col-md-10 main';\n      setMenu(true);\n    }\n\n  }\n\n  return (\n    <div>\n      <div>\n        <header className=\"header\" id=\"header\" >\n          <GridMenuIcon onClick={menu_toggle} id='menu-btn' style={{ margin: '32px', color: 'black' }} />\n          <div className='adu'>\n            <h4 style={{ cursor: 'pointer', marginLeft: '10px', color: 'black' }} onClick={homeRedirect}>\n              BHARTI EXPO-ADS\n            </h4>\n          </div>\n          <div style={{ display: 'flex', width: '100%', flex: '1' }}>\n            <div className=\"text-black\">\n              <br />\n              <h4 style={{ textAlign: 'center' }}>\n                {date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })}\n              </h4>\n            </div>\n\n            <nav className=\"navbar navbar-dark navbar-expand-sm\" >\n\n\n              <div className=\"collapse navbar-collapse\" id=\"navbar-list-4\">\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\"\n                      id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                      aria-expanded=\"false\">\n                      <img src=\"https://www.w3schools.com/howto/img_avatar.png\" width=\"20\" height=\"20\"\n                        className=\"rounded-circle\" />\n                    </a>\n                    <div style={{ marginLeft: '260px' }} class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                      <a class=\"dropdown-item\" href=\"#\">Dashboard</a>\n                      <a class=\"dropdown-item\" href=\"#\">Edit Profile</a>\n                      <li className=\"nav-item\" onClick={() => {\n                        auth.logout(() => {\n                          history.push(\"/Login\");\n                        })\n                        console.log(localStorage.getItem(\"authenticated\"))\n                      }}>\n                        <Link className=\"dropdown-item\">\n                          Logout\n                        </Link>\n                      </li>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </div>\n        </header>\n      </div>\n      <div className='body1'>\n\n        <div className=\"sidenav\" id='sidebar'>\n          <Navbar menu_function={menu_toggle}/>\n        </div>\n        <div className=\" main\" id='main'>\n          <Switch>\n            <ProtectedRoute exact path='/hoarding-final' component={Login} />\n            <ProtectedRoute exact path='/' component={Dashboard} />\n            <ProtectedRoute exact path='/Employee_Master' component={Employee_Master} />\n            <ProtectedRoute exact path='/Labour_Master' component={Labour_Master} />\n            <ProtectedRoute exact path='/Location_Master' component={Location_Master} />\n            <ProtectedRoute exact path='/Customer_Master' component={Customer_Master} />\n            <ProtectedRoute exact path='/Media_Type_Master' component={Media_Type_Master} />\n            <ProtectedRoute exact path='/Size_Master' component={Size_Master} />\n            <ProtectedRoute exact path='/Inventory_Master' component={Inventory_Master} />\n            <ProtectedRoute exact path='/Industry_Master' component={Industry_Master} />\n            <ProtectedRoute exact path='/GST_Type_Master' component={GST_Type_Master} />\n            <ProtectedRoute exact path='/Labor_Category_Master' component={Labor_Category_Master} />\n            <ProtectedRoute exact path='/Payment_Type' component={Payment_Type} />\n            <ProtectedRoute exact path=\"/Availability\" component={Availability} />\n            <ProtectedRoute exact path=\"/Inquiry_Master\" component={Inquiry_Master} />\n            <ProtectedRoute exact path=\"/Inquiry_Master1\" component={Inquiry_Master1} />\n            <ProtectedRoute exact path=\"/Booking\" component={Booking} />\n            <ProtectedRoute exact path=\"/Landlord_Management\" component={Landloard_Management} />\n            <ProtectedRoute exact path=\"/Quick_Media_Proposal\" component={Quick_Media_Proposal} />\n            <ProtectedRoute exact path=\"/Purchase_Order_Management\" component={Purchase_Order_Management} />\n            <ProtectedRoute exact path=\"/Flex_and_Vinyl_Management\" component={Flex_and_Vinyl_Management} />\n            <ProtectedRoute exact path=\"/MonitoringImages\" component={MonitoringImages} />\n            <ProtectedRoute exact path=\"/Availability_Master\" component={Availability_Master} />\n            <ProtectedRoute exact path=\"/Hoarding_Insurance\" component={Hoarding_Insurance1} />\n            <ProtectedRoute exact path=\"/Hoarding_Erection\" component={Hoarding_Erection} />\n            <ProtectedRoute exact path=\"/Quick_Media\" component={Quick_Media} />\n            <ProtectedRoute exact path=\"/HoardingErrection\" component={HoardingErrection} />\n          </Switch>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Body;\n","import './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Body from './Components/Body';\n//import 'bootstrap/dist/css/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  split,\n  ApolloProvider\n} from \"@apollo/client\";\n\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport Login from './Components/Login';\n// import jsPDF from 'jspdf';\n\nconst wsLink = new WebSocketLink({\n  uri: 'wss://refined-stork-71.hasura.app/v1/graphql',\n  options: {\n    reconnect: true\n  }\n});\nconsole.log(wsLink);\nconst httpLink = new HttpLink({\n  uri: 'https://refined-stork-71.hasura.app/v1/graphql',\n  // headers: {\n  //   'x-hasura-access-key': 'YrlJbtD2GXzRiZk16RqL4AIAHwrI25nvzcUDAIPQlozRWw007jDGsro4mILTcmb6'\n  // }\n})\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <Switch>\n        <Route exact path=\"/Login\" component={Login} />\n          <Route path=\"/\"> <Body /></Route>\n        </Switch>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}