{"version":3,"sources":["Components/Navbar.js","Components/NavItems/Employee_Master.js","Components/NavItems/Location_Master.js","Components/NavItems/Customer_Master.js","Components/NavItems/Media_Type_Master.js","Components/NavItems/Size_Master.js","Components/NavItems/Industry_Master.js","Components/NavItems/GST_Type_Master.js","Components/NavItems/Labour_Master.js","Components/NavItems/Dashboard.js","Components/NavItems/Inventory_Master.js","Components/NavItems/Labor_Category_Master.js","Components/NavItems/Payment_Type.js","Components/NavItems/Availability.js","Components/NavItems/Inquiry_Master.js","Components/NavItems/Booking.js","Components/NavItems/Landlord_Management.js","Components/NavItems/Quick_Media_Proposal.js","Components/NavItems/Purchase_Order_Management.js","Components/NavItems/Flex_and_Vnyl_Management.js","Components/NavItems/MonitoringImages.js","auth.js","Components/Login.js","protected.route.js","Components/NavItems/Availability_Master.js","Components/NavItems/Hoarding_Insurance1.js","Components/NavItems/Hoarding_Erection.js","Components/NavItems/HoardingErrection.js","Components/NavItems/Quick_Media.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","color","nested","paddingLeft","spacing","Navbar","props","useState","selectedIndex","setSelectedIndex","handleListItemClick","event","index","window","matchMedia","matches","menu_function","classes","React","open1","setOpen1","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","localStorage","getItem","style","textAlign","marginTop","className","List","component","to","ListItem","selected","onClick","button","ListItemIcon","ListItemText","primary","fontStyle","backgroundColor","Collapse","in","timeout","unmountOnExit","disablePadding","GET_BANK","gql","INSERT_EMPLOYEE","UPDATE_EMPLOYEE","READ_EMPLOYEE","DELETE_EMPLOYEE","Read_Labour_Master","Employee_Master","showModal","setShow","handleClose","name","address","contact_no","email_id","bank_name","branch_name","ifsc_code","account_no","labour_category","employee","setEmployee","id","modalEmployee","setModalEmployee","useMutation","insert_employee","update_employee","delete_employee","bank_data","useQuery","read_labour","employee_data","useSubscription","loading","CircularProgress","onInputChange","e","target","value","onEdit","row","console","log","onModalInputChange","columns","field","headerName","valueGetter","params","labour_category_master","renderCell","title","marginLeft","type","confirm","variables","toast","configure","error","data","employee_master","rows","newData","map","item","push","sno","Modal","show","onHide","Header","Title","Body","onSubmit","preventDefault","warning","defaultValue","onChange","placeholder","pattern","required","Labour_Category","maxlength","minlength","marginRight","borderColor","Footer","Button","variant","Card","margin","padding","background","boxShadow","borderRadius","success","height","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectiononChange","components","Toolbar","GridToolbar","GET_COUNTRY","GET_STATE","GET_CITY","INSERT_LOCATION","GET_LOCATION","UPDATE_LOCATION","DELETE_LOCATION","Location_Master","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","selectedDistrict","setSelectedDistrict","selectedTaluka","setSelectedTaluka","singleCountry","setSingleCountry","singleState","setSingleState","singleCity","setSingleCity","country","state","city","district","taluka","modalLocation","setModalLocation","editLocation","insert_location","update_location","delete_location","get_location","countryByCountry","stateByState","cityByCity","location_master","country_options","countries","states","cities","options","country_data","parseInt","fstate","filter","st","country_id","getOptionLabel","option","getOptionValue","state_data","fcity","ct","state_id","city_data","INSERT_CUSTOMER","READ_CUSTOMER","UPDATE_CUSTOMER","DELETE_CUSTOMER","READ_LOCATION","READ_COUNTRIES","READ_STATES","READ_CITIES","Customer_Master","setName","contact_person","setContact_person","mobile_no","setMobile_no","setEmail_id","gst_no","setGst_no","pan","setPan","res_address","setRes_address","setCountry","setState","setCities","setDistrict","setTaluka","modalId","setModalId","modalName","setModalName","modalContact_person","setModalContact_person","modalMobile_no","setModalMobile_no","modalEmail_id","setModalEmail_id","modalGst_no","setModalGst_no","modalPan","setModalPan","modalRes_address","setModalRes_address","modalCountry","setModalCountry","modalState","setModalState","modalCities","setModalCities","modalDistrict","setModalDistrict","modalTaluka","setModalTaluka","insert_customer","update_customer","delete_customer","read_customer","read_location","read_countries","read_states","read_cities","customer_master","find","op","getMedia_Type","DELETE_MEDIA","INSERT_MEDIA","UPDATE_MEDIA","Media_Type_Master","media_type","mediaType","setMediaType","modelMediaType","setModelMediaType","update_media","delete_media_type_master","getMedia","hide","editable","media_type_master","disableSelectionOnClick","getSize_MasterQuery","insert_size_MasterQuery","Delete_size_MasterQuery","UPDATE_SIZE","Franchise_Management","no_of_display","modalSize","setModalSize","insert_size_masterData","delete_size_masterData","update_size","getSize","size_master","onModalFormSubmit","getIndustry_master","insert_Industry_MasterQuery","delete_Industry_masterQuery","update_Industry_masterQuery","Industry_Master","handleShow","industry_type","ModalIndustry","setModalIndustry","insert_Industry","delete_Industry_masterData","update_Industry_masterData","getIndustry","industry_master","sl","GST_Type_Master","setId","cgst","sgst","igst","GST","setGST","updateGST","setUpdateGST","GST_MASTER_QUERY","GST_MASTER_Insertion","GST_MASTER_Update","GST_MASTER_Delete","Datatable","insertGSTMaster","updateGSTMaster","deleteGSTMaster","gst_master","editVehicle","deleteVehicle","LABOUR_MASTER_QUERY","LABOUR_MASTER_Insertion","LABOUR_MASTER_Update","LABOUR_MASTER_Delete","Labour_Master","labor_type","labour","setLabour","updateLabor","setUpdateLabor","insertLabourMaster","updateLabourMaster","deleteLabourMaster","labor_master","bank_master","display","READ_INVENTORY","INSERT_INSURANCE","READ_INSURANCE","UPDATE_INSURANCE","DELETE_INSURANCE","Hoarding_Insurance","totalsq","total","modaltotalsq","modaltotal","setShowhide","modalInventory","setModalInventory","modalInsurance","setModalInsurance","modalFromDate","setModalFromDate","modalToDate","setModalToDate","update_insurance","read_inventory","read_insurance","Inventory_Master","Location","hoarding_insurance","inventory","insurance","from_date","to_date","getInventory_Master","Insert_Inventory","Read_Fabricator","delete_Inventory","UPDATE_Inventory","MEDIA_TYPE","Read_hoarding_erection","Country","States","setStates","Taluka","District","City_Village","setCity_Village","setLocation","Media_Type","setMedia_Type","Illumination","setIllumination","Width","setWidth","Height","setHeight","NoofDisplay","setNoofDisplay","Totalsqft","setTotalsqft","DisplayRatePM","setDisplayRatePM","OneTimePrintingCost","setOneTimePrintingCost","OneTimeMountingCost","setOneTimeMountingCost","Total","setTotal","AvailabilityFrom","setAvailabilityFrom","AvailabilityTo","setAvailabilityTo","DrpmRate","setDrpmRate","OtpcRate","setOtpcRate","OtmcRate","setOtmcRate","setErection","Status","setStatus","ModalId","ModalCountry","ModalStates","setModalStates","ModalTaluka","ModalDistrict","ModalCity_Village","setModalCity_Village","ModalLocation","ModalMedia_Type","setModalMedia_Type","ModalIllumination","setModalIllumination","ModalWidth","setModalWidth","ModalHeight","setModalHeight","ModalNoofDisplay","setModalNoofDisplay","ModalTotalsqft","setModalTotalsqft","ModalDisplayRatePM","setModalDisplayRatePM","ModalOneTimePrintingCost","setModalOneTimePrintingCost","ModalOneTimeMountingCost","setModalOneTimeMountingCost","ModalTotal","setModalTotal","ModalAvailabilityFrom","setModalAvailabilityFrom","ModalAvailabilityTo","setModalAvailabilityTo","ModalDrpmRate","setModalDrpmRate","ModalOtpcRate","setModalOtpcRate","ModalOtmcRate","setModalOtmcRate","Modalhoarding_insurance","ModalErection","setModalErection","ModalStatus","setModalStatus","Insert_InventorymasterData","delete_InventorymasterData","update_InventorymasterData","State","getInventory","read_fabricator","read_hoarding_erection","toString","modal_country_data","modal_state_data","modal_city_data","modal_mdeia_type_data","label","modalIlluminationData","modaldrpm","modalotpc","modalotmc","hoarding_errection","erection","location","media_type_data","illumination_data","drpm","otpc","otmc","getLabour_Master","InsertLabour_Master","UpdateLabour_Master","Deletelabour_Master","Labour_Category_Master","modallabour","setmodallabour","Insert_labourmasterData","Update_labourmasterData","delete_labourmasterdata","getlabour_category_master","getPayment_master","InsertPayment_Master","UpdatePayment_Master","DeletePayment_Master","Payment_Type","payment_type","modalpayment","setmodalpayment","Insert_paymenttypeData","Update_paymenttypeData","delete_paymenttypeData","getpayment_type","getAVAILABILITY","DELETE_AVAILABILITY","INSERT_AVAILABILITY","UPDATE_AVAILABILITY","Availability","availability","setAvailability","modelAvailability","setModelAvailability","insert_availability","update_availability","delete_availability","getAvailability","READ_MEDIA","SEARCH_INVENTORYALL","SEARCH_INVENTORY","INSERT_INQUIRY","UPDATE_INQUIRY","DELETE_INQUIRY","READ_INQUIRY","Inquiry_Master","setSelected","showhide","setCity","illumination","searchMediaType","setSearchMediaType","searchDate","setSearchDate","sol","setSol","number","setNumber","emailid","setEmailid","whatsappNumber","setWhatsappNumber","startDate","setStartDate","setMedia_type","status","modalSol","setModalSol","modalNumber","setModalNumber","modalEmailid","setModalEmailid","modalWhatsappNumber","setModalWhatsappNumber","modalStartDate","setModalStartDate","modalMedia_type","setModalMedia_type","modalStatus","insert_inquiry","update_inquiry","delete_inquiry","read_media","read_inquiry","useLazyQuery","loadInventory","loadInventoryAll","invData","whatsapp_number","start_date","inquiry_master","rows1","readonly","media","_gt","visibility","onSelectionModelChange","itm","i","length","SEARCH_QUICK_MEDIA","READ_LABOR","Read_Printer","Read_Mounter","Read_Electrician","Read_Designer","INSERT_BOOKING","READ_BOOKING","UPDATE_BOOKING","DELETE_BOOKING","UPDATE_INVENTORY","READ_QUICK_MEDIA","GET_DATA","UPDATE_BOOKING_ON_DELETE","Booking","setGet_data","shortlisted","setShortlisted","confirmation","setConfirmation","PO","setPO","designer","setDesigner","printer","setPrinter","mounter","setMounter","electrician","setElectrician","startDatePhoto","setStartDatePhoto","monitoringPhoto","setMonitoringPhoto","endDatePhoto","setEndDatePhoto","endDate","setEndDate","Booked","setBooked","modalShortlisted","setModalShortlisted","modalConfirmation","setModalConfirmation","modalPO","setModalPO","modalDesigner","setModalDesigner","modalPrinter","setModalPrinter","modalMounter","setModalMounter","modalElectrician","setModalElectrician","modalStartDatePhoto","setModalStartDatePhoto","modalMonitoringPhoto","setModalMonitoringPhoto","modalEndDatePhoto","setModalEndDatePhoto","update_inventory","insert_booking","update_booking","delete_booking","update_booking_on_delete","read_labor","read_booking","read_printer","read_electrician","read_mounter","read_designer","read_quick_media","onCompleted","get_return_data","search_quick_media","Shortlisted","Confirmation","Designer","Printer","Mounter","Electrician","Start_Date_Photo","End_Date_Photo","Monitoring_Photo","src","BookedBy","Booking_Calender","proposal_no","quick_media","user","newData1","labor","formData","FormData","append","files","axios","post","then","dataimage1","ids","selectedIDs","Set","selectedRowData","has","Sites","Start_Date","End_Date","getlandloard_Master","Insertlanloard_Master","Updatelandloard_Master","Deletelandloard_Master","Landloard_Management","mobile_number","ifsc","rent_amount","site_address","agreement_from","agreement_to","rent_increment_reminder","landloard","setlandloard","modallandloard","setModallandloard","Insert_landloardmanagementData","update_landloardmanagementData","delete_landloardmanagementData","getlandloard_management","landlord_management","getPurchase_Master","InsertPurchase_Master","UpdatePurchase_Master","DeletePurchase_Master","Purchase_Order_Management","billing_name","billing_address","purchase_order_number","purchase_order_date","campaign_name","quotation_number","gst_details","company_pan","payment_terms","purchase","setpurchase","modalpurchase","setModalpurchase","insertpurchasedata","updatepurchasedata","deletepurchasedata","getpurchase_order","purchase_order","getFlex_Master","InsertFlex_Master","deleteFlex_Master","updateFlex_Master","Flex_and_Vinyl_Management","setMedia","designer_selection","designer_payment","printer_selection","printer_payment","mounter_selection","mounter_payment","flex","setflex","Modalflex","setModalflex","Insert_flexinsertData","delete_flexdeleteData","update_flexupdateData","getflex_vinyl_management","flex_vinyl_management","READ_MONITORING","INSERT_MONITORING","UPDATE_MONITORING","DELETE_MONITORING","MonitoringImages","brand_name","clients_name","date","geo_location","upload_image","monitoring","setMONITORING","modalMONITORING","setModalMONITORING","insert_monitoring","update_monitoring","delete_monitoring","monitoring_data","monitoring_images","cb","setItem","clear","LOGIN_MUTATION","Login","history","useHistory","username","password","role","formState","setFormState","class","alt","Array","isArray","User","auth","login","FormSubmit","for","paddingRight","ProtectedRoute","Component","rest","render","pathname","from","Availability_Master","Hoarding_Insurance1","setFilteredData","setInventory","setInsurance","insuranceFrom","setInsuranceFrom","insuranceTo","setInsuranceTo","searchInventory","searchInventoryData","hoarding_insurance_from","hoarding_insurance_to","filteredInventory","includes","READ_HOARDING","INSERT_HOARDING","UPDATE_HOARDING","DELETE_HOARDING","HoardingErrection","errection_cost","errection_year","fabricator","hoarding","setHOARDING","modalHOARDING","setModalHOARDING","insert_hoarding","update_hoarding","delete_hoarding","hoarding_data","READ_ELECTRICIAN","READ_CIVIL_CONTRACTOR","READ_EXCAVATOR","payment","permission","excavator","excavator_charges","civil_contractor","civil_material","civil_contractor_labour_payment","fabrication_material","fabricator_labour_payment","transport_charges","electrician_selection","electric_material_purchase","electrician_labour_payment","read_excavator","read_civil_contractor","laborMasterByExcavator","laborMasterByElectricianSelection","INSERT_QUICK_MEDIA","DELETE_QUICK_MEDIA","READ_QUICK","SEARCH_INQUIRY","GET_MOBILE","Quick_Media","get_data","delete_quick_media","insert_quick_media","search_inquiry","return_inquiry","get_mobile","mobile_no_exists","read_quick","columns1","undefined","at","counter","counter_proposal","inquiry","Date","setDate","refreshClock","useEffect","timerId","setInterval","clearInterval","menu","setMenu","menu_toggle","a","document","getElementById","b","cursor","toLocaleTimeString","hour","minute","second","href","logout","exact","path","Dashboard","Size_Master","Labor_Category_Master","Quick_Media_Proposal","Hoarding_Erection","wsLink","WebSocketLink","uri","reconnect","httpLink","HttpLink","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.63a537d9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n// import ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import DraftsIcon from '@material-ui/icons/Drafts';\n// import SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n// import StarBorder from '@material-ui/icons/StarBorder';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n// import GroupIcon from '@material-ui/icons/Group';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport BuildIcon from '@mui/icons-material/Build';\nimport InventoryIcon from '@mui/icons-material/Inventory';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AspectRatioIcon from '@mui/icons-material/AspectRatio';\n// import PinDropIcon from '@material-ui/icons/PinDrop';\nimport { Link } from 'react-router-dom';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AcUnitIcon from '@mui/icons-material/AcUnit';\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport PaymentsIcon from '@mui/icons-material/Payments';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\nimport BookIcon from '@mui/icons-material/Book';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport ApartmentIcon from '@mui/icons-material/Apartment';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport MonitorIcon from '@mui/icons-material/Monitor';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    color: 'black',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nexport default function Navbar(props) {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    if(window.matchMedia(\"(max-width:426px)\").matches)\n    {\n      props.menu_function();\n    }\n  };\n\n  const classes = useStyles();\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n  const [open4, setOpen4] = React.useState(false);\n  const [open5, setOpen5] = React.useState(false);\n  const [open6, setOpen6] = React.useState(false);\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n  const handleClick3 = () => {\n    setOpen3(!open3);\n  };\n  const handleClick4 = () => {\n    setOpen4(!open4);\n  };\n  const handleClick5 = () => {\n    setOpen5(!open5);\n  };\n  const handleClick6 = () => {\n    setOpen6(!open6);\n  };\n  const role = localStorage.getItem(\"userrole\");\n  if (role === \"admin\") {\n    return (\n      <>\n        <h6 style={{ textAlign: 'center', marginTop: '15px', color: 'Black' }} className=\"admin-nav\" >ADMIN</h6>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          className={classes.root}\n        >\n          {/* Dashboard */}\n          <Link to='/'>\n            <ListItem\n              selected={selectedIndex === 0}\n              onClick={(event) => handleListItemClick(event, 0)}\n              style={{ color: 'White' }}\n              button>\n              <DashboardIcon />\n              <ListItemIcon style={{ color: 'white' }}>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" className='menu-item-color' style={{ fontStyle: 'bold' }} />\n\n            </ListItem>\n          </Link>\n\n          {/* Master Creation */}\n\n          <ListItem button onClick={handleClick1} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon style={{ color: 'white' }}>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Master Creation\" className='menu-item-color' />\n            {open1 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {/* Employee Master */}\n              <Link to='/Employee_Master' >\n                <ListItem\n                  selected={selectedIndex === 1}\n                  onClick={(event) => handleListItemClick(event, 1)}\n                  button className={classes.nested}>\n                  <ListItemIcon>\n                    <FlagIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Employee Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labour Master */}\n              <Link to='/Labour_Master' >\n                <ListItem\n                  selected={selectedIndex === 2}\n                  onClick={(event) => handleListItemClick(event, 2)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <BuildIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Labour Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Location Master */}\n              {/* <Link to='/Location_Master' >\n  \n                <ListItem\n                  selected={selectedIndex === 3}\n                  onClick={(event) => handleListItemClick(event, 3)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <PinDropIcon style={{color:'white'}} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Location Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Customer Master */}\n              <Link to='/Customer_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 4}\n                  onClick={(event) => handleListItemClick(event, 4)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    < PersonIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Customer Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Media Type Master */}\n              <Link to='/Media_Type_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 5}\n                  onClick={(event) => handleListItemClick(event, 5)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <StarBorder style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Media Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Size Master */}\n              {/* <Link to='/Size_Master' >\n  \n                <ListItem\n                  selected={selectedIndex === 6}\n                  onClick={(event) => handleListItemClick(event, 6)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AspectRatioIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Size Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Hoarding Insurance */}\n              <Link to='/Hoarding_Insurance' >\n                <ListItem\n                  selected={selectedIndex === 6}\n                  onClick={(event) => handleListItemClick(event, 6)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <MonitorIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Hoarding Insurance\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Hoarding Erection */}\n              <Link to='/HoardingErrection' >\n                <ListItem\n                  selected={selectedIndex === 7}\n                  onClick={(event) => handleListItemClick(event, 7)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <MonitorIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Hoarding Erection\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n\n              {/* GST Type Master */}\n              <Link to='/Inventory_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 9}\n                  onClick={(event) => handleListItemClick(event, 9)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <InventoryIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Inventory Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Industry Master */}\n              <Link to='/Industry_Master' >\n\n                <ListItem\n                  selected={selectedIndex === 8}\n                  onClick={(event) => handleListItemClick(event, 8)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <LocationCityIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Industry Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* GST Type Master */}\n              <Link to='/GST_Type_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 10}\n                  onClick={(event) => handleListItemClick(event, 10)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccountBalanceIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"GST Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labor Category Type Master */}\n              <Link to='/Labor_Category_Master' >\n\n\n                <ListItem\n                  selected={selectedIndex === 11}\n                  onClick={(event) => handleListItemClick(event, 11)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AcUnitIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Labor Category Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Labor Category Type Master */}\n              <Link to='/Payment_Type' >\n                <ListItem\n                  selected={selectedIndex === 12}\n                  onClick={(event) => handleListItemClick(event, 12)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <PaymentsIcon style={{ color: 'white' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Payment Type Master\" className='menu-item-color' />\n                </ListItem>\n              </Link>\n              {/* Availability Master */}\n              {/* <Link to='/Availability_Master' >\n                <ListItem\n                  selected={selectedIndex === 7}\n                  onClick={(event) => handleListItemClick(event, 7)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccessibilityIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Availability Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n              {/* Availability Master */}\n              {/* <Link to='/Availability' >\n                <ListItem\n                  selected={selectedIndex === 12}\n                  onClick={(event) => handleListItemClick(event, 13)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AccessibilityIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Availability Master\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n\n            </List>\n          </Collapse>\n          {/* Landlord Management */}\n\n          <ListItem button onClick={handleClick2} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Landlord Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n            {/* Landlord Management */}\n            <Link to='/Landlord_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AccessibilityIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Landlord Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Planning */}\n          <ListItem button onClick={handleClick3} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Planning\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open3} timeout=\"auto\" unmountOnExit>\n            {/* Inquiry Master */}\n            <Link to='/Inquiry_Master' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AddIcCallIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Inquiry\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n            {/* Quick Media Proposal */}\n            {/* <Link to='/Quick_Media_Proposal' >\n                <ListItem\n                  selected={selectedIndex === 2}\n                  onClick={(event) => handleListItemClick(event, 2)}\n                  button\n                  className={classes.nested}>\n                  <ListItemIcon>\n                    <AssessmentIcon style={{color:'white'}}/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Quick Media Proposal\" className='menu-item-color' />\n                </ListItem>\n              </Link> */}\n            {/* Quick Proposal */}\n            <Link to='/Quick_Media' >\n              <ListItem\n                selected={selectedIndex === 2}\n                onClick={(event) => handleListItemClick(event, 2)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AssessmentIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Quick Media\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n            {/* Booking */}\n            <Link to='/Booking' >\n              <ListItem\n                selected={selectedIndex === 3}\n                onClick={(event) => handleListItemClick(event, 3)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <BookIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Booking\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n          {/* Purchase Order Management */}\n\n          <ListItem button onClick={handleClick4} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Purchase Order Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open4} timeout=\"auto\" unmountOnExit>\n            {/* Purchase Order Management */}\n            <Link to='/Purchase_Order_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <ApartmentIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Purchase Order Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Flex And Vnyl Management */}\n\n          <ListItem button onClick={handleClick5} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Flex And Vinyl Management\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open5} timeout=\"auto\" unmountOnExit>\n            {/* Flex And Vnyl Management */}\n            <Link to='/Flex_and_Vinyl_Management' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <AddBoxIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Flex And Vinyl Management\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n          {/* Flex And Vnyl Management */}\n\n          <ListItem button onClick={handleClick6} style={{ paddingLeft: '30px', backgroundColor: 'rgb(161 154 154)' }}>\n            <ListItemIcon>\n              <SettingsIcon style={{ color: 'white' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Monitoring Images\" className='menu-item-color' />\n            {open2 ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open6} timeout=\"auto\" unmountOnExit>\n            {/* Monitoring Images */}\n            <Link to='/MonitoringImages' >\n              <ListItem\n                selected={selectedIndex === 1}\n                onClick={(event) => handleListItemClick(event, 1)}\n                button\n                className={classes.nested}>\n                <ListItemIcon>\n                  <MonitorIcon style={{ color: 'white' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Monitoring Images\" className='menu-item-color' />\n              </ListItem>\n            </Link>\n          </Collapse>\n\n\n\n\n        </List>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <h6 style={{ textAlign: 'center', marginTop: '15px', color: 'Black' }} className=\"admin-nav\" >SUPER ADMIN</h6>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          className={classes.root}\n        >\n          {/* Dashboard */}\n          <Link to='/'>\n            <ListItem\n              selected={selectedIndex === 0}\n              onClick={(event) => handleListItemClick(event, 0)}\n              style={{ color: 'White' }}\n              button>\n              <DashboardIcon />\n              <ListItemIcon style={{ color: 'white' }}>\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" className='menu-item-color' style={{ fontStyle: 'bold' }} />\n\n            </ListItem>\n          </Link>\n        </List>\n      </>\n    )\n  }\n}\n\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst GET_BANK = gql`\nquery MyQuery {\n    bank_master {\n      id\n      ifsc_code\n      branch_name\n      bank_name\n      account_no\n    }\n  }  \n`\nconst INSERT_EMPLOYEE = gql`\nmutation MyMutation($address: String = \"\", $contact_no: String = \"\", $email_id: String = \"\", $name: String = \"\",$bank_name:String!,$branch_name:String!,$ifsc_code:String!,$account_no:String!,$labour_category:Int!) {\n    insert_employee_master_one(object: {address: $address, contact_no: $contact_no, email_id: $email_id, name: $name,bank_name:$bank_name,branch_name:$branch_name,ifsc_code:$ifsc_code,account_no:$account_no,labour_category:$labour_category}) {\n      id\n    }\n  }\n`\nconst UPDATE_EMPLOYEE = gql`\nmutation MyMutation($id: Int = 0, $address: String = \"\" $contact_no: String = \"\", $email_id: String = \"\", $name: String = \"\",$bank_name:String!,$branch_name:String!,$ifsc_code:String!,$account_no:String!,$labour_category:Int!) {\n    update_employee_master_by_pk(pk_columns: {id: $id}, _set: {address: $address, contact_no: $contact_no, email_id: $email_id, name: $name,bank_name:$bank_name,branch_name:$branch_name,ifsc_code:$ifsc_code,account_no:$account_no,labour_category:$labour_category}) {\n      address\n      bank_name\n      branch_name\n      ifsc_code\n      account_no\n      contact_no\n      email_id\n      id\n      name\n    }\n  }\n`\n\nconst READ_EMPLOYEE = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    employee_master(where: {isDeleted: {_eq: $_eq}}){\n      account_no\n      address\n      bank_name\n      branch_name\n      contact_no\n      email_id\n      id\n      ifsc_code\n      isDeleted\n      labour_category\n      labour_category_master {\n        isDeleted\n        labour_category\n        id\n      }\n      name\n    }\n  }\n  \n`\n// const DELETE_EMPLOYEE = gql`\n// mutation MyMutation($id: Int!) {\n//     delete_employee_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n// `\n\nconst DELETE_EMPLOYEE = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_employee_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\nconst Read_Labour_Master=gql`\nquery MyQuery($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n`\n\nexport default function Employee_Master() {\n   \n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n    const [employee, setEmployee] = useState({\n        name: '',\n        address: '',\n        contact_no: '',\n        email_id: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc_code: '',\n        account_no: '',\n        labour_category:''\n    });\n    const [modalEmployee, setModalEmployee] = useState({\n        id: '',\n        name: '',\n        address: '',\n        contact_no: '',\n        email_id: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc_code: '',\n        account_no: '',\n        labour_category:''\n    });\n    const [insert_employee, insert_data] = useMutation(INSERT_EMPLOYEE);\n    const [update_employee, update_data] = useMutation(UPDATE_EMPLOYEE);\n    const [delete_employee, delete_data] = useMutation(DELETE_EMPLOYEE);\n    const bank_data = useQuery(GET_BANK);\n    const read_labour =useQuery(Read_Labour_Master);\n    const employee_data = useSubscription(READ_EMPLOYEE);\n    if (bank_data.loading || employee_data.loading||read_labour.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n\n    \n    \n    const onInputChange = (e) => {\n        //console.log(e.target.name);\n        setEmployee({ ...employee, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        console.log(employee);\n        e.preventDefault();\n        insert_employee({ variables: employee})\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalEmployee({\n            id: row.id,\n            name: row.name,\n            address: row.address,\n            contact_no: row.contact_no,\n            email_id: row.email_id,\n            bank_name: row.bank_name,\n            branch_name: row.branch_name,\n            ifsc_code: row.ifsc_code,\n            account_no: row.account_no,\n            labour_category:row.labour_category\n        })\n        console.log(modalEmployee);\n    }\n    // const onModalFormSubmit=(e)=>{\n    //     e.preventDefault();\n    //     update_employee({variables:{id:modalEmployee.id,name:modalEmployee.name,address:modalEmployee.address,email_id:modalEmployee.email_id,contact_no:modalEmployee.contact_no,bank_id:modalEmployee.bank_id}})\n\n    // }\n    const onModalInputChange = (e) => {\n        setModalEmployee({ ...modalEmployee, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_employee({ variables: modalEmployee })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_employee({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n        {\n            field: 'address',\n            headerName: 'Address',\n            width: 190\n        },\n        {\n            field: 'contact_no',\n            headerName: 'Contact Number',\n            width: 190\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email ID',\n            width: 250\n        },\n        {\n            field: 'labour_category',\n            headerName: 'Labour Category',\n            width: 250,\n            valueGetter: (params) => {\n                return params.row.labour_category_master.labour_category;\n            }\n        },\n        // {\n        //     field: 'bank_id',\n        //     headerName: 'Bank Details',\n        //     width: 160,\n        //     valueGetter: (params) => {\n        //         return params.row.bank_master.bank_name;\n        //     }\n        // },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name',\n            width: 160\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name',\n            width: 180\n        },\n        {\n            field: 'ifsc_code',\n            headerName: 'IFSC',\n            width: 110\n        },\n        {\n            field: 'account_no',\n            headerName: 'Account Number',\n            width: 190\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }}  type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    console.log(employee_data.data.employee_master);\n    const rows = employee_data.data.employee_master;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Employee</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalEmployee.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Name</label>\n                                <input defaultValue={modalEmployee.name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Address</label>\n                                <input defaultValue={modalEmployee.address} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"address\" type=\"text\" placeholder=\"enter address\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Contact Number</label>\n                                <input defaultValue={modalEmployee.contact_no} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"contact_no\" type=\"tel\" placeholder=\"enter contact number\" pattern=\"[789][0-9]{9}\" title=\"Please enter valid contact number\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                                            <label className=\"required\">Labour Category</label>\n                                            <select defaultValue={modalEmployee.labour_category} onChange={onInputChange}  type=\"text\" name=\"labour_category\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                <option>--SELECT--</option>\n                                {read_labour.data.labour_category_master.map(Labour_Category => (\n                                    <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                ))}\n                                {/* <option>Printer</option>\n                                <option>Mounter</option>\n                                <option>Electrician</option>\n                                <option>Fabricator</option> */}\n                            </select>\n                                        </div>\n                                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Email ID</label>\n                                <input defaultValue={modalEmployee.email_id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"email_id\" type=\"text\" placeholder=\"enter email id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Bank Name</label>\n                                {/* <select defaultValue={modalEmployee.bank_id} className=\"form-control\" onChange={onModalInputChange} name=\"bank_id\" placeholder=\"enter bank details\">\n                                    <option>--SELECT--</option>\n                                    {bank_data.data.bank_master.map(bank => (\n                                        <option value={bank.id} key={bank.id}>{bank.bank_name}</option>\n                                    ))}\n                                </select> */}\n                                <input type=\"text\" defaultValue={modalEmployee.bank_name} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"bank_name\" placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Branch Name</label>\n                                <input type=\"text\" defaultValue={modalEmployee.branch_name} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"branch_name\" placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div><br />\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">IFSC</label>\n                                <input type=\"text\" maxlength=\"11\" minlength=\"11\" defaultValue={modalEmployee.ifsc_code} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"ifsc_code\" placeholder=\"enter ifsc\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Account number</label>\n                                <input type=\"text\" defaultValue={modalEmployee.account_no} className=\"form-control mt-1\" onChange={onModalInputChange} name=\"account_no\" placeholder=\"enter account number\" />\n                            </div>\n                        </div><br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        </div>\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n           \n                <br/>\n                <h4 className=\"text-center\">EMPLOYEE MASTER</h4>\n<br/>\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Name</label>\n                            <input type=\"text\" name=\"name\" onChange={onInputChange} className=\"form-control mt-1\" required placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Address</label>\n                            <input type=\"text\" name=\"address\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Contact Number</label>\n                            <input type=\"tel\" name=\"contact_no\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter contact number\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid contact number\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input type=\"email\" name=\"email_id\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter email id\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                                            <label className=\"required\">Labour Category</label>\n                                            <select onChange={onInputChange}  type=\"text\" name=\"labour_category\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                <option>--SELECT--</option>\n                                {read_labour.data.labour_category_master.map(Labour_Category => (\n                                    <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                ))}\n                                {/* <option>Printer</option>\n                                <option>Mounter</option>\n                                <option>Electrician</option>\n                                <option>Fabricator</option> */}\n                            </select>\n                                        </div>\n                                        </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Bank Name</label>\n                            {/* <select name=\"bank_id\" className=\"form-select\" onChange={onInputChange} placeholder=\"enter bank details\" required>\n                                <option>--SELECT--</option>\n                                {bank_data.data.bank_master.map(bank => (\n                                    <option value={bank.id} key={bank.id}>{bank.bank_name}</option>\n                                ))}\n                            </select> */}\n                            <input type=\"text\" name=\"bank_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Branch Name</label>\n                            <input type=\"text\" name=\"branch_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\"><br />\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">IFSC </label>\n                            <input type=\"text\" maxlength=\"11\" minlength=\"11\" name=\"ifsc_code\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter ifsc\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Account Number</label>\n                            <input type=\"number\" name=\"account_no\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter account number\" required />\n                        </div>\n                    </div>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'10%' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'10%' }}>Reset</button>\n                        <br/><br/>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst GET_COUNTRY = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n    states {\n      id\n      country_id\n      name\n    }\n    cities {\n        id\n        name\n        state_id\n      }\n  }  \n`\nconst GET_STATE = gql`\nquery MyQuery {\n    states {\n      id\n      country_id\n      name\n    }\n  } \n`\nconst GET_CITY = gql`\nquery MyQuery {\n    cities {\n      id\n      name\n      state_id\n    }\n  }\n`\nconst INSERT_LOCATION = gql`\nmutation MyMutation($city: Int = 0, $country: Int = 0, $district: String = \"\", $state: Int = 0, $taluka: String = \"\") {\n    insert_location_master_one(object: {city: $city, country: $country, district: $district, state: $state, taluka: $taluka}) {\n      id\n    }\n  }\n`\n// const INSERT_TALUKA = gql`\n// mutation MyMutation($name: String! ,$cities_id: Int!) {\n//     insert_taluka_one(object: {name: $name, cities_id: $cities_id}) {\n//       cities_id\n//       id\n//       name\n//     }\n//   }\n// `\n\n// const INSERT_DISTRICT = gql`\n// mutation MyMutation($cities_id: Int!, $name: String!) {\n//     insert_district_one(object: {name: $name, cities_id: $cities_id}) {\n//       id\n//     }\n//   }\n  \n// `\n\nconst GET_LOCATION = gql`\nsubscription MySubscription {\n    location_master {\n      city\n      cityByCity {\n        id\n        name\n      }\n      country\n      countryByCountry {\n        id\n        name\n      }\n      district\n      id\n      state\n      stateByState {\n        id\n        name\n      }\n      taluka\n    }\n  }   \n`\nconst UPDATE_LOCATION = gql`\nmutation MyMutation($id: Int=0, $city: Int = 0, $country: Int = 0, $district: String = \"\", $state: Int = 0, $taluka: String = \"\") {\n    update_location_master_by_pk(pk_columns: {id: $id}, _set: {city: $city, country: $country, district: $district, state: $state, taluka: $taluka}) {\n      city\n      country\n      district\n      id\n      state\n      taluka\n    }\n  }\n`\nconst DELETE_LOCATION = gql`\nmutation MyMutation($id: Int = 0) {\n    delete_location_master_by_pk(id: $id) {\n      id\n    }\n  }\n  \n`\n\nexport default function Location_Master() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [selectedCountry, setSelectedCountry] = useState();\n    const [selectedState, setSelectedState] = useState();\n    const [selectedCity, setSelectedCity] = useState();\n    const [selectedDistrict, setSelectedDistrict] = useState();\n    const [selectedTaluka, setSelectedTaluka] = useState();\n    const [singleCountry, setSingleCountry] = useState();\n    const [singleState, setSingleState] = useState();\n    const [singleCity, setSingleCity] = useState();\n    const [modalLocation, setModalLocation] = useState({\n        id: '',\n        country: '',\n        state: '',\n        city: '',\n        district: '',\n        taluka: '',\n    });\n    const onCountryChange = (country_data) => {\n        console.log(country_data.id);\n        setSingleCountry(country_data.id);\n        setSelectedCountry(parseInt(country_data.id));\n        console.log(country_data.id) \n        const fstate = state.data.states.filter(function (st) {\n            return st.country_id === parseInt(country_data.id);\n        })\n        setSelectedState(fstate);\n        console.log(selectedState);\n    }\n    const onStateChange = (state_data) => {\n        console.log(state_data.id)\n        setSingleState(state_data.id);\n        const fcity = city.data.cities.filter(function (ct) {\n            return ct.state_id === parseInt(state_data.id);\n        })\n        setSelectedCity(fcity);\n        console.log(selectedCity)\n        console.log(fcity);\n    }\n    const onCityChange = (city_data)=>{\n        console.log(city_data.id);\n        setSingleCity(city_data.id)\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e);\n        insert_location({ variables: { country: singleCountry, state: singleState, city: singleCity, district: selectedDistrict, taluka:selectedTaluka } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n    const editLocation = (row) => {\n        setModalLocation({\n            id: row.id,\n            country: row.country,\n            state: row.state,\n            city: row.city,\n            district: row.district,\n            taluka: row.taluka\n        })\n        handleShow();\n        //console.log(modalIndustry);\n    }\n    const onModalInputChange = (e) => {\n        setModalLocation({ ...modalLocation, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_location({ variables: { id: modalLocation.id, country: modalLocation.country, state: modalLocation.state, city: modalLocation.city, district: modalLocation.district, taluka: modalLocation.taluka } })\n        toast.configure();\n        toast.warning('Successfully Updated')\n        handleClose();\n    }\n    const delete_location_data = (id) => {\n        delete_location({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    //Queries\n    const [insert_location, insert_data] = useMutation(INSERT_LOCATION)\n    // const [insert_taluka, insert_taluka_data] = useMutation(INSERT_TALUKA)\n    // const [insert_district, insert_district_data] = useMutation(INSERT_DISTRICT)\n    const [update_location, update_data] = useMutation(UPDATE_LOCATION)\n    const [delete_location, delete_data] = useMutation(DELETE_LOCATION)\n    const country = useQuery(GET_COUNTRY);\n    const state = useQuery(GET_STATE);\n    const city = useQuery(GET_CITY);\n    const get_location = useSubscription(GET_LOCATION);\n    if (country.loading || state.loading || city.loading || get_location.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.countryByCountry.name;\n            }\n        },\n        {\n            field: 'state',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.stateByState.name;\n            }\n        },\n        {\n            field: 'district',\n            headerName: 'District',\n            width: 160,\n        },\n        {\n            field: 'taluka',\n            headerName: 'Taluka',\n            width: 160,\n        },\n        {\n            field: 'city',\n            headerName: 'City',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.cityByCity.name;\n            }\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 190,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => { editLocation(params.row) }} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                delete_location_data(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n\n    ];\n    const rows = get_location.data.location_master;\n    const country_options = country.data.countries;\n    const state_options = state.data.states;\n    const city_options = city.data.cities;\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Location</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                \n                        <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalLocation.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Country</label>\n                                {/* <input defaultValue={modalLocation.country} onChange={onModalInputChange} className=\"form-control\" name=\"country\" type=\"text\" /> */}\n                                <select className=\"form-control mt-1\" name=\"country\" defaultValue={modalLocation.country} onChange={onModalInputChange} required>\n                                    <option>--SELECT--</option>\n                                    {country.data.countries.map(country => (\n                                        <option key={country.id} value={country.id}>{country.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">State</label>\n                                {/* <input defaultValue={modalLocation.state} onChange={onModalInputChange} className=\"form-control\" name=\"state\" type=\"text\" /> */}\n                                <select defaultValue={modalLocation.state} onChange={onModalInputChange} name=\"state\" className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {country.data.states.map(state => (\n                                        <option key={state.id} value={state.id}>{state.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">City</label>\n                                {/* <input defaultValue={modalLocation.city} onChange={onModalInputChange} className=\"form-control\" name=\"city\" type=\"text\" /> */}\n                                <select defaultValue={modalLocation.city} onChange={onModalInputChange} className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {country.data.cities.map(city => (\n                                        <option key={city.id} value={city.id}>{city.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">District</label>\n                                <input defaultValue={modalLocation.district} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"district\" type=\"text\" required  pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\"/>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Taluka</label>\n                                <input defaultValue={modalLocation.taluka} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"taluka\" type=\"text\" required  pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\"/>\n                            </div>\n                            </div><br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n                    \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <br/><h4 className=\"text-center\">LOCATION MASTER</h4>\n<br/>\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Country</label>\n                            {/* <select onChange={onCountryChange} name=\"country\" className=\"form-select  mt-1\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {country.data.countries.map(country => (\n                                    <option key={country.id} value={country.id}>{country.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"country\"\n                                options={country_options}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">State</label>\n                            {/* <select onChange={onStateChange} name=\"state\" className=\"form-select  mt-1\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {selectedState === undefined ? '' : selectedState.map(state => (\n                                    <option key={state.id} value={state.id}>{state.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"state\"\n                                options={selectedState}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"field col-md-6 \">\n                            <label className=\"required\">City</label>\n                            {/* <select className=\"form-select mt-1\" name=\"city\" aria-label=\"Default select example\" required>\n                                <option>--SELECT--</option>\n                                {selectedCity === undefined ? '' : selectedCity.map(city => (\n                                    <option key={city.id} value={city.id}>{city.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"state\"\n                                options={selectedCity}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                        <div className=\"field col-md-6 \">\n                            <label className=\"required\">District</label>\n                            <input onChange={(e) => { setSelectedDistrict(e.target.value) }} type=\"text\" name=\"district\" className=\"form-control mt-1\" placeholder=\"enter district\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Taluka</label>\n                            <input onChange={(e) => { setSelectedTaluka(e.target.value) }} type=\"text\" name=\"taluka\" className=\"form-control mt-1\" placeholder=\"enter taluka\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div>\n                    <br/>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br/>\n                        <br/>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                    </div>\n                </form>\n            </Card>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst INSERT_CUSTOMER = gql`\nmutation MyMutation($cities: Int = 10, $contact_person: String = \"\", $country: Int = 10, $district: String = \"\", $email_id: String = \"\", $gst_no: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\", $res_address: String = \"\", $state: Int = 10, $taluka: String = \"\") {\n    insert_customer_master_one(object: {cities: $cities, contact_person: $contact_person, country: $country, district: $district, email_id: $email_id, gst_no: $gst_no, mobile_no: $mobile_no, name: $name, pan: $pan, res_address: $res_address, state: $state, taluka: $taluka}) {\n      id\n    }\n  }  \n`\nconst READ_CUSTOMER = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    customer_master(where: {isDeleted: {_eq: $_eq}}){\n      cities\n      contact_person\n      country\n      city {\n        id\n        name\n      }\n      district\n      countryByCountry {\n        id\n        name\n      }\n      email_id\n      gst_no\n      id\n      mobile_no\n      name\n      pan\n      res_address\n      state\n      stateByState {\n        country_id\n        id\n        name\n      }\n      taluka\n    }\n  }\n  \n`\nconst UPDATE_CUSTOMER = gql`\nmutation MyMutation($id: Int = 10, $cities: Int = 10, $contact_person: String = \"\", $country: Int = 10, $district: String = \"\", $email_id: String = \"\", $gst_no: String = \"\", $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\", $res_address: String = \"\", $state: Int = 10, $taluka: String = \"\") {\n    update_customer_master_by_pk(pk_columns: {id: $id}, _set: {cities: $cities, contact_person: $contact_person, country: $country, district: $district, email_id: $email_id, gst_no: $gst_no, mobile_no: $mobile_no, name: $name, pan: $pan, res_address: $res_address, state: $state, taluka: $taluka}) {\n      id\n    }\n  }\n  \n`\n\n// const DELETE_CUSTOMER = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_customer_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n  \n// `\n\nconst DELETE_CUSTOMER = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_customer_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\nconst READ_LOCATION = gql`\nquery MyQuery {\n    location_master{\n      city\n      country\n      id\n      state\n      taluka\n      district\n      cityByCity {\n        id\n        name\n        state_id\n      }\n      countryByCountry {\n        id\n        name\n        phonecode\n        sortname\n      }\n      stateByState {\n        country_id\n        id\n        name\n      }\n    }\n  }  \n`\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n  }  \n`\n\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n  \n`\n\nexport default function Customer_Master() {\n    const [customValidity, setCustomValidity] = useState();\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [name, setName] = useState();\n    const [contact_person, setContact_person] = useState();\n    const [mobile_no, setMobile_no] = useState();\n    const [email_id, setEmail_id] = useState();\n    const [gst_no, setGst_no] = useState();\n    const [pan, setPan] = useState();\n    const [res_address, setRes_address] = useState();\n    const [country, setCountry] = useState();\n    const [state, setState] = useState();\n    const [cities, setCities] = useState();\n    const [district, setDistrict] = useState();\n    const [taluka, setTaluka] = useState();\n\n    const [modalId, setModalId] = useState();\n    const [modalName, setModalName] = useState();\n    const [modalContact_person, setModalContact_person] = useState();\n    const [modalMobile_no, setModalMobile_no] = useState();\n    const [modalEmail_id, setModalEmail_id] = useState();\n    const [modalGst_no, setModalGst_no] = useState();\n    const [modalPan, setModalPan] = useState();\n    const [modalRes_address, setModalRes_address] = useState();\n    const [modalCountry, setModalCountry] = useState();\n    const [modalState, setModalState] = useState();\n    const [modalCities, setModalCities] = useState();\n    const [modalDistrict, setModalDistrict] = useState();\n    const [modalTaluka, setModalTaluka] = useState();\n\n    //Queries\n    const [insert_customer] = useMutation(INSERT_CUSTOMER);\n    const [update_customer] = useMutation(UPDATE_CUSTOMER);\n    const [delete_customer] = useMutation(DELETE_CUSTOMER);\n    const read_customer = useSubscription(READ_CUSTOMER);\n    const read_location = useQuery(READ_LOCATION);\n    const read_countries = useQuery(READ_COUNTRIES);\n    const read_states = useQuery(READ_STATES);\n    const read_cities = useQuery(READ_CITIES);\n    //Loader\n    if (read_customer.loading || read_countries.loading || read_states.loading || read_cities.loading || read_location.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    // const onInputChange = (e) => {\n    //     setCustomer({ ...customer, [e.target.name]: e.target.value });\n    // }\n    const onNameChange = (e) => {\n        setName(e.target.value);\n    }\n    const onContact_personChange = (e) => {\n        setContact_person(e.target.value);\n    }\n    const onMobile_noChange = (e) => {\n        setMobile_no(e.target.value);\n    }\n    const onEmail_idChange = (e) => {\n        setEmail_id(e.target.value);\n    }\n    const onGst_noChange = (e) => {\n        setGst_no(e.target.value);\n    }\n    const onPanChange = (e) => {\n        setPan(e.target.value);\n    }\n    const onCountryChange = (country_data) => {\n        setCountry(country_data.id);\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id);\n    }\n    const onCityChange = (city_data) => {\n        setCities(city_data.id);\n    }\n    const onDistrictChange = (e) => {\n        //console.log(data_district.district);\n        setDistrict(e.target.value);\n    }\n    const onTalukaChange = (e) => {\n        setTaluka(e.target.value);\n    }\n    const onRes_addressChange = (e) => {\n        setRes_address(e.target.value);\n    }\n    //Modal Form Data\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value);\n    }\n    const onModalNameChange = (e) => {\n        setModalName(e.target.value);\n    }\n    const onModalContact_personChange = (e) => {\n        setModalContact_person(e.target.value);\n    }\n    const onModalMobile_noChange = (e) => {\n        setModalMobile_no(e.target.value);\n    }\n    const onModalEmail_idChange = (e) => {\n        setModalEmail_id(e.target.value);\n    }\n    const onModalGst_noChange = (e) => {\n        setModalGst_no(e.target.value);\n    }\n    const onModalPanChange = (e) => {\n        setModalPan(e.target.value);\n    }\n    const onModalCountryChange = (country_data) => {\n        setModalCountry(country_data.id);\n    }\n    const onModalStateChange = (state_data) => {\n        setModalState(state_data.id);\n    }\n    const onModalCityChange = (city_data) => {\n        setModalCities(city_data.id);\n    }\n    const onModalDistrictChange = (e) => {\n        setModalDistrict(e.target.value);\n    }\n    const onModalTalukaChange = (e) => {\n        setModalTaluka(e.target.value);\n    }\n    const onModalRes_addressChange = (e) => {\n        setModalRes_address(e.target.value);\n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(customer);\n        insert_customer({ variables: { name: name, country: country, state: state, cities: cities, district: district, taluka: taluka, res_address: res_address, contact_person: contact_person, mobile_no: mobile_no, email_id: email_id, gst_no: gst_no, pan: pan } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalId(row.id)\n        setModalName(row.name)\n        setModalContact_person(row.contact_person)\n        setModalMobile_no(row.mobile_no)\n        setModalEmail_id(row.email_id)\n        setModalGst_no(row.gst_no)\n        setModalPan(row.pan)\n        setModalCountry(row.country)\n        setModalState(row.state)\n        setModalCities(row.cities)\n        setModalDistrict(row.district)\n        setModalTaluka(row.taluka)\n        setModalRes_address(row.res_address)\n    }\n    // const onModalInputChange = (e) => {\n    //     setModalCustomer({ ...modalCustomer, [e.target.name]: e.target.value })\n    // }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_customer({ variables: { id: modalId, name: modalName, country: modalCountry, state: modalState, cities: modalCities, district: modalDistrict, taluka: modalTaluka, res_address: modalRes_address, contact_person: modalContact_person, mobile_no: modalMobile_no, email_id: modalEmail_id, gst_no: modalGst_no, pan: modalPan } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_customer({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n        {\n            field: 'country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.countryByCountry.name;\n            }\n        },\n        {\n            field: 'state',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.stateByState.name;\n            }\n        },\n        {\n            field: 'city',\n            headerName: 'City',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n        {\n            field: 'district',\n            headerName: 'District',\n            width: 190\n        },\n        {\n            field: 'taluka',\n            headerName: 'Taluka',\n            width: 190\n        },\n        {\n            field: 'mobile_no',\n            headerName: 'Mobile Number',\n            width: 190\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email ID',\n            width: 160\n        },\n        {\n            field: 'contact_person',\n            headerName: 'Contact Person',\n            width: 190\n        },\n        {\n            field: 'gst_no',\n            headerName: 'GST Number',\n            width: 160\n        },\n        {\n            field: 'pan',\n            headerName: 'PAN Number',\n            width: 160\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_customer.data.customer_master;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n    //console.log(rows);\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Customer</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Name</label>\n                                <input defaultValue={modalName} onChange={onModalNameChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Contact Person</label>\n                                <input defaultValue={modalContact_person} onChange={onModalContact_personChange} className=\"form-control mt-1\" name=\"contact_person\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Mobile Number</label>\n                                <input defaultValue={modalMobile_no} onChange={onModalMobile_noChange} className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Email ID</label>\n                                <input defaultValue={modalEmail_id} onChange={onModalEmail_idChange} className=\"form-control mt-1\" name=\"email_id\" type=\"email\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">PAN Number</label>\n                                <input defaultValue={modalPan} onChange={onModalPanChange} className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan\" name=\"pan\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">GST Number</label>\n                                <input defaultValue={modalGst_no} onChange={onModalGst_noChange} className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid pan\" name=\"pan\" type=\"text\" required />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Country</label>\n                                {/* <input defaultValue={modalCustomer.country} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"country\" type=\"text\" required/> */}\n                                {/* <select value={modalCountry} onChange={onModalCountryChange} name=\"country\" className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {read_countries.data.countries.map(country => (\n                                        <option key={country.id} value={country.id}>{country.name}</option>\n                                    ))}\n                                </select> */}\n                                <Select\n                                    name=\"country\"\n                                    options={read_countries.data.countries}\n                                    value={read_countries.data.countries.find(op => op.id === modalCountry)}\n                                    onChange={onModalCountryChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                   />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">State</label>\n                                {/* <select defaultValue={modalState} onChange={onModalStateChange} name=\"country\" className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {read_states.data.states.map(state => (\n                                        <option key={state.id} value={state.id}>{state.name}</option>\n                                    ))}\n                                </select> */}\n                                <Select\n                                    name=\"state\"\n                                    options={read_states.data.states}\n                                    value={read_states.data.states.find(op => op.id === modalState)}\n                                    onChange={onModalStateChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">City</label>\n                                {/* <input defaultValue={modalCustomer.country} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"country\" type=\"text\" required/> */}\n                                {/* <select defaultValue={modalCities} onChange={onModalCityChange} name=\"cities\" className=\"form-control mt-1\" required>\n                                    <option>--SELECT--</option>\n                                    {read_cities.data.cities.map(city => (\n                                        <option key={city.id} value={city.id}>{city.name}</option>\n                                    ))}\n                                </select> */}\n                                <Select\n                                    name=\"city\"\n                                    options={read_cities.data.cities}\n                                    value={read_cities.data.cities.find(op => op.id === modalCities)}\n                                    onChange={onModalCityChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">District</label>\n                                <input defaultValue={modalDistrict} onChange={onModalDistrictChange} className=\"form-control\" name=\"district\" type=\"text\" />\n                                {/* <Select\n                                name=\"district\"\n                                value={read_location.data.location_master.find(op=> op.district === modalDistrict)}\n                                options={read_location.data.location_master}\n                                onChange={onModalDistrictChange}\n                                getOptionLabel={(option) => option.district}\n                                getOptionValue={(option) => option.district}\n                            /> */}\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Taluka</label>\n                                <input defaultValue={modalTaluka} onChange={onModalTalukaChange} className=\"form-control\" name=\"taluka\" type=\"text\" />\n                                {/* <Select\n                                name=\"taluka\"\n                                value={read_location.data.location_master.find(op=> op.taluka === modalTaluka)}\n                                options={read_location.data.location_master}\n                                onChange={onModalTalukaChange}\n                                getOptionLabel={(option) => option.taluka}\n                                getOptionValue={(option) => option.taluka}\n                            /> */}\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Resident Address</label>\n                                <input defaultValue={modalRes_address} onChange={onModalRes_addressChange} className=\"form-control\" name=\"res_address\" type=\"text\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field\">\n                            <button className=\"btn btn-primary\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <h4 className=\"text-center\">CUSTOMER MASTER</h4>\n\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Name</label>\n                            <input placeholder=\"enter name\" onChange={onNameChange} type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            <span ></span>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Contact Person</label>\n                            <input onChange={onContact_personChange} placeholder=\"enter contact person\" type=\"text\" name=\"contact_person\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input onChange={onMobile_noChange} placeholder=\"enter mobile number\" type=\"tel\" name=\"mobile_no\" className=\"form-control mt-1\" required pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input onChange={onEmail_idChange} placeholder=\"enter email id\" type=\"email\" name=\"email_id\" className=\"form-control mt-1\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">GST Number</label>\n                            <input onChange={onGst_noChange} placeholder=\"enter gst number\" type=\"text\" name=\"gst_no\" className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">PAN Number</label>\n                            <input onChange={onPanChange} placeholder=\"enter pan number\" type=\"text\" name=\"pan\" className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan\" required />\n                        </div>\n                    </div><br />\n                    <h5 style={{ textAlign: 'center' }}>Address</h5>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"country\" className=\"form-control mt-1\" placeholder=\"enter country\" required>\n                                <option>--SELECT--</option>\n                                {read_countries.data.countries.map(country => (\n                                    <option key={country.id} value={country.id}>{country.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"state\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                                <option>--SELECT--</option>\n                                {read_states.data.states.map(state => (\n                                    <option key={state.id} value={state.id}>{state.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"cities\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                                <option>--SELECT--</option>\n                                {read_cities.data.cities.map(city => (\n                                    <option key={city.id} value={city.id}>{city.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">District</label>\n                            <input onChange={onDistrictChange} type=\"text\" name=\"district\" className=\"form-control\" />\n                            {/* <Select\n                                name=\"district\"\n                                options={read_location.data.location_master}\n                                onChange={onDistrictChange}\n                                getOptionLabel={(option) => option.district}\n                                getOptionValue={(option) => option.district}\n                            /> */}\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Taluka</label>\n                            <input onChange={onTalukaChange} type=\"text\" name=\"taluka\" className=\"form-control\" />\n                            {/* <Select\n                                name=\"taluka\"\n                                options={read_location.data.location_master}\n                                onChange={onTalukaChange}\n                                getOptionLabel={(option) => option.taluka}\n                                getOptionValue={(option) => option.taluka}\n                            /> */}\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Residential Address</label>\n                            <input onChange={onRes_addressChange} type=\"text\" name=\"res_address\" className=\"form-control\" />\n                        </div>\n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type=\"reset\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData} \n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n// import Button from '@restart/ui/esm/Button';\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getMedia_Type = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    media_type_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      media_type\n    }\n  }\n  \n`\nconst DELETE_MEDIA = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_media_type_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n       \n`\nconst INSERT_MEDIA = gql`\nmutation MyMutation($media_type: String = \"\") {\n    insert_media_type_master_one(object: {media_type: $media_type}) {\n      media_type\n    }\n  }\n`\nconst UPDATE_MEDIA = gql`\nmutation MyMutation($id: Int = 0, $media_type: String = \"\") {\n    update_media_type_master_by_pk(pk_columns: {id: $id}, _set: {media_type: $media_type}) {\n      id\n    }\n  }  \n`\nfunction Media_Type_Master() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [mediaType, setMediaType] = useState({\n        media_type: '',\n    }\n    )\n\n    const [modelMediaType, setModelMediaType] = useState({\n        id: '',\n        media_type: '',\n    }\n    )\n    const onInputChange = (e) => {\n        setMediaType({ ...mediaType, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target[0].value)\n        insert_employee({ variables: { media_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setModelMediaType({\n            id: row.id,\n            media_type: row.media_type\n        })\n    }\n    const onModalInputChange = (e) => {\n        setModelMediaType({ ...modelMediaType, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_media({ variables: { id: modelMediaType.id, media_type: modelMediaType.media_type } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const [insert_employee] = useMutation(INSERT_MEDIA);\n    const [update_media] = useMutation(UPDATE_MEDIA);\n    const [delete_media_type_master] = useMutation(DELETE_MEDIA);\n    const onDelete = (id) => {\n        console.log(id);\n        delete_media_type_master({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const getMedia = useSubscription(getMedia_Type);\n    if (getMedia.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getMedia.error) {\n        return \"error\" + getMedia.error;\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'media_type',\n            headerName: 'Media Type',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { onEdit(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    const deleteVehicle = (row) => {\n\n    }\n    // const rows = [\n    //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n\n    //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    // ];\n    console.log(getMedia.data);\n    const rows = getMedia.data.media_type_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Media Type Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modelMediaType.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">Media Types</label>\n                                        <input defaultValue={modelMediaType.media_type} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"media_type\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>MEDIA TYPE MASTER</h3>\n\n<br/>\n                            <form className=\"form-group\" onSubmit={onFormSubmit}>\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Media Types</label>\n                                        <input placeholder=\"enter media types\" onChange={onInputChange} className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"media_type\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}\nexport default Media_Type_Master;","import React, { useState } from 'react'\n// import { DataGrid } from '@material-ui/data-grid';\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { OndemandVideoTwoTone } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\n\nconst getSize_MasterQuery = gql` \nsubscription MySubscription {\n  \n  size_master {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst Size_MasterQuery = gql`\nsubscription MySubscription {\n  size_master {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst insert_size_MasterQuery = gql`\nmutation MyMutation($height: String = \"\", $no_of_display: String = \"\", $width: String = \"\") {\n  insert_size_master(objects: {height: $height, no_of_display: $no_of_display, width: $width}) {\n    affected_rows\n  }\n}`\n\nconst Delete_size_MasterQuery = gql`\nmutation MyMutation($id:Int=0){\n  delete_size_master_by_pk(id:$id) {\n    height\n    id\n    no_of_display\n    width\n  }\n}`\n\nconst UPDATE_SIZE = gql`\nmutation MyMutation($height: String = \"\", $id: Int = 0, $no_of_display: String = \"\", $width: String = \"\") {\n  update_size_master_by_pk(pk_columns: {id: $id}, _set: {height: $height, no_of_display: $no_of_display, width: $width}) {\n    id\n  }\n}\n`\n\n\n\n\nexport default function Franchise_Management() {\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [modalSize, setModalSize] = useState({\n    id: '',\n    width: '',\n    height: '',\n    no_of_display: ''\n  });\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(e.target)\n    insert_size_masterData({ variables: { width: e.target[0].value, height: e.target[1].value, no_of_display: e.target[2].value } })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n  const onDelete = (id) => {\n    console.log(id);\n    delete_size_masterData({ variables: { id: id } });\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalSize({\n      id: row.id,\n      width: row.width,\n      height: row.height,\n      no_of_display: row.no_of_display\n    })\n  }\n  const onModalInputChange = (e) => {\n    setModalSize({ ...modalSize, [e.target.name]: e.target.value });\n  }\n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modalSize);\n    update_size({ variables: { id: modalSize.id, width: modalSize.width, height: modalSize.height, no_of_display: modalSize.no_of_display } })\n    toast.configure();\n    toast.warning('Successfully Updated')\n    handleClose();\n  }\n  const [insert_size_masterData] = useMutation(insert_size_MasterQuery);\n  const [delete_size_masterData] = useMutation(Delete_size_MasterQuery);\n  const [update_size] = useMutation(UPDATE_SIZE);\n\n\n  const getSize = useSubscription(getSize_MasterQuery);\n  if (getSize.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n  }\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'width', headerName: 'Width', width: 200 },\n\n    { field: 'height', headerName: 'Height', width: 200, },\n\n    { field: 'no_of_display', headerName: 'Number of display', width: 200, },\n\n    // { field: 'country', headerName: 'country', width: 170, },\n\n\n    // { field: 'state', headerName: 'state', width: 170, },\n    // { field: 'district', headerName: 'district', width: 170, },\n    // { field: 'taluka', headerName: 'taluka', width: 170, },\n    // { field: 'mobile no', headerName: 'mobile no', width: 170, },\n    // { field: 'email', headerName: 'email', width: 170, },\n    // { field: 'gst no', headerName: 'gst no', width: 170, },\n    // { field: 'pan', headerName: 'pan', width: 170, },\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} ><i className=\"bi bi-trash-fill\"></i></button>\n\n          </div>\n        );\n      }\n    },\n\n\n  ];\n\n  console.log(getSize.data);\n  const rows = getSize.data.size_master;\n\n  return (\n\n    <div>\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title style={{ marginLeft: \"130px\" }}>Edit Size Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          \n            <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n              <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">ID</label>\n                <input defaultValue={modalSize.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Height</label>\n                <input defaultValue={modalSize.height} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"height\" type=\"number\" required />\n              </div>\n              </div>\n              <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Width</label>\n                <input defaultValue={modalSize.width} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"width\" type=\"number\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">No Of Display</label>\n                <input defaultValue={modalSize.no_of_display} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"no_of_display\" type=\"number\" required />\n              </div>\n              </div>\n              <div className=\"field col-md-6\">\n                <button className=\"btn btn-primary mt-3\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n              </div>\n            </form>\n       \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br/>\n        <h4 className=\"text-center\"> SIZE MASTER</h4>\n\n<br/>\n        <form onSubmit={onFormSubmit} className=\"form-group\">\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Width (In Feet)</label>\n              <input placeholder=\"enter width\" className=\"form-control mt-1\" name=\"width\" type=\"number\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Height (In Feet)</label>\n              <input placeholder=\"enter height\" className=\"form-control mt-1\" name=\"height\" type=\"number\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Number of Display</label>\n              <input placeholder=\"enter number of display\" className=\"form-control mt-1\" name=\"no_of_display\" type=\"number\" required />\n            </div>\n          </div>\n<br/>\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n            <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n            <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n            {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n          </div>\n          <br/>\n        </form>\n\n        {/* <div style={{ height: 500, width: '100%' }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={10}\n          rowsPerPageOptions={[10]}\n          checkboxSelection={false}\n          // components={{\n          //   Toolbar: GridToolbar,\n          // }}\n          style={{borderTop: '4px solid #05386b'}}\n          disableSelectionOnClick\n        />\n      </div> */}\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n\n    </div>\n\n\n\n\n  )\n}","import React, { useState } from 'react';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\n// import { Divider } from '@material-ui/core';\nimport Card from '@mui/material/Card';\nimport {\n    useMutation,\n    useQuery,\n    gql,\n    useSubscription\n} from \"@apollo/client\";\nimport { Delete, Edit } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n\n\nconst getIndustry_master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  industry_master(where: {isDeleted: {_eq: $_eq}}){\n    id\n    industry_type\n  }\n}\n`\nconst Industry_MasterQuery = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  industry_master(where: {isDeleted: {_eq: $_eq}}){\n    id\n    industry_type\n  }\n}`\n\nconst insert_Industry_MasterQuery = gql\n    `mutation MyMutation($industry_type: String = \"\") {\n  insert_industry_master_one(object: { industry_type: $industry_type}) {\n    id\n    industry_type\n  }\n}\n`\n\n// const delete_Industry_masterQuery = gql`\n// mutation MyMutation($id:Int=0) {\n//   delete_industry_master_by_pk(id:$id) {\n//     id\n//     industry_type\n//   }\n// }`\n\nconst delete_Industry_masterQuery = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_industry_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\n\n\nconst update_Industry_masterQuery = gql`\nmutation MyMutation($id: Int = 0, $industry_type: String = \"\") {\n  update_industry_master_by_pk(pk_columns: {id: $id}, _set: {industry_type: $industry_type}) {\n    id\n    industry_type\n  }\n}\n\n`\n\n\nconst rows = [\n    { id: 1, Name: '10', Address: 'prajakta', },\n    { id: 2, Role: '28', Franchise: 'Cersei' },\n    { id: 3, Role: '30', Franchise: 'Jaime' },\n    { id: 4, Role: '40', Franchise: 'Arya' },\n    { id: 5, Role: '50', Franchise: 'Daenerys' },\n\n];\n\nfunction Industry_Master() {\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [ModalIndustry, setModalIndustry] = useState({\n        id: '',\n        industry_type: ''\n    });\n\n    const [insert_Industry] = useMutation(insert_Industry_MasterQuery);\n    const [delete_Industry_masterData] = useMutation(delete_Industry_masterQuery);\n    const [update_Industry_masterData] = useMutation(update_Industry_masterQuery);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        insert_Industry({ variables: { industry_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n\n    const getIndustry = useSubscription(getIndustry_master);\n    if (getIndustry.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onDelete = (id) => {\n        console.log(id);\n        delete_Industry_masterData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const onEdit = (row) => {\n        handleShow();\n        setModalIndustry({\n            id: row.id,\n            industry_type: row.industry_type\n        })\n    }\n\n    const onModalInputChange = (e) => {\n        setModalIndustry({ ...ModalIndustry, [e.target.name]: e.target.value });\n    }\n\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(ModalIndustry);\n        update_Industry_masterData({ variables: { id: ModalIndustry.id, industry_type: ModalIndustry.industry_type } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const editVehicle = (row) => {\n        handleShow();\n        setModalIndustry({\n            id: row.id,\n            industry_type: row.industry_type\n        })\n    }\n\n    const deleteVehicle = (row) => {\n\n    }\n    const columns = [\n        {field:'sl',headerName:'Serial No'},\n        { field: 'id', headerName: 'ID', width: 100 },\n\n        { field: 'industry_type', headerName: 'Industry Type', width: 200 },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\" onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '40%' }} className=\"btn btn-danger\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n\n    ];\n    console.log(getIndustry.data);\n    \n    const rows = getIndustry.data.industry_master;\n    let newData = [];\n    rows.map((item, index) => {\n            newData.push({sl: index + 1, ...item});\n        });\n    return (\n        <>\n\n            <div className=\"container\">\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Industry Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={ModalIndustry.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                                </div>\n\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Industry Type</label>\n                                    <input defaultValue={ModalIndustry.industry_type} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"industry_type\" type=\"text\" />\n                                </div>\n                            </div>\n                            <br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form onSubmit={onFormSubmit} className='form-group'>\n                    <div className=\"col-md-12\">\n                        <br/>\n                        <h4 style={{ width: '100%', textAlign: 'center' }}>INDUSTRY MASTER</h4>\n<br/>\n                        {/* <Divider style={{ marginBottom: '8px', }} /> */}\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                {/* <label> Franchise Name</label> */}\n\n                                {/* <input className=\"form-control \" name=\"licence\" type =\"text\" placeholder='Enter franchise name' required /> */}\n                            </div>\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\"> Industry Type</label>\n                                <input placeholder=\"enter industry type\" className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"licence\" type=\"text\" required pattern=\"[a-zA-Z]*\" title=\"Please enter Alphabets\"/>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n<br/>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n                    </div>\n                    <br/>\n                </form>\n            </Card>\n            <br />\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                marginTop: \"2px\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                          Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n\n\n        </>\n\n    );\n}\nexport default Industry_Master;","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport gql from 'graphql-tag';\nimport { Card, CircularProgress } from '@material-ui/core';\nimport { useMutation, useSubscription } from '@apollo/client';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n//import { GridToolbar } from '@mui/x-data-grid';\n\nexport default function GST_Type_Master() {\n    const [id, setId] = useState()\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [GST, setGST] = useState({\n        cgst: '',\n        sgst: '',\n        igst: '',\n    })\n    const [updateGST, setUpdateGST] = useState({\n        id: id,\n        cgst: '',\n        sgst: '',\n        igst: '',\n    })\n    const GST_MASTER_QUERY = gql`\n    subscription MySubscription($_eq: String = \"false\"){\n        gst_master(where: {isDeleted: {_eq: $_eq}}) {\n          cgst\n          sgst\n          igst\n          id\n        }\n      }      \n    `;\n\n    const GST_MASTER_Insertion = gql`\n    mutation MyMutation($cgst: String = \"\", $igst: String = \"\", $sgst: String = \"\") {\n        insert_gst_master(objects: {cgst: $cgst, igst: $igst, sgst: $sgst}) {\n          affected_rows\n        }\n      }      \n    `;\n\n    const GST_MASTER_Update = gql`\n    mutation MyMutation($id: Int = 10, $cgst: String = \"\", $igst: String = \"\", $sgst: String = \"\") {\n        update_gst_master_by_pk(pk_columns: {id: $id}, _set: {cgst: $cgst, igst: $igst, sgst: $sgst}) {\n          id\n        }\n      }      \n    `;\n\n    // const GST_MASTER_Delete = gql`\n    // mutation MyMutation($id: Int!) {\n    //     delete_gst_master_by_pk(id: $id) {\n    //       id\n    //     }\n    // }\n    //   `;\n    const GST_MASTER_Delete = gql`\n    mutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n        update_gst_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n          isDeleted\n        }\n      }      \n    `\n    const Datatable = useSubscription(GST_MASTER_QUERY);\n    const [insertGSTMaster] = useMutation(GST_MASTER_Insertion);\n    const [updateGSTMaster] = useMutation(GST_MASTER_Update);\n    const [deleteGSTMaster] = useMutation(GST_MASTER_Delete);\n\n    if (Datatable.loading) {\n        return (\n            <div className='App' style={{ marginTop: '20%', }}><CircularProgress /></div>\n        )\n    }\n    if (Datatable.error) {\n        return (\n            <>Error.</>\n        )\n    }\n    const rows = Datatable.data.gst_master;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n\n    const onInputChange = (e) => {\n        e.preventDefault();\n        setGST({ ...GST, [e.target.name]: e.target.value })\n    }\n\n    const onModalInputChange = (e) => {\n        e.preventDefault();\n        setUpdateGST({ ...updateGST, [e.target.name]: e.target.value })\n    }\n\n    const onModalSubmit = (e) => {\n        e.preventDefault();\n        updateGSTMaster({\n            variables: updateGST,\n        });\n        handleClose();\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(GST);\n        insertGSTMaster(\n            {\n                variables: GST\n            }\n        );\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n    const editVehicle = (row) => {\n        setId(row.id);\n        console.log(id);\n        setUpdateGST(\n            {\n                id: row.id,\n                cgst: row.cgst,\n                sgst: row.sgst,\n                igst: row.igst,\n            }\n        )\n        handleShow();\n    }\n\n    const deleteVehicle = (id) => {\n        deleteGSTMaster({\n            variables: {id: id},\n        })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'cgst',\n            headerName: 'CGST',\n            width: 190,\n            hide: false,\n        },\n        {\n            field: 'sgst',\n            headerName: 'SGST',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'igst',\n            headerName: 'IGST',\n            width: 150,\n            editable: false,\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 170,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"150%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button style={{ marginRight: '10%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                deleteVehicle(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n\n    ];\n\n    // const rows = [\n    //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    // ];\n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header >\n                        <Modal.Title>Edit GST Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalSubmit}>\n\n                                {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                <div className=\"row\" >\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">CGST</label>\n                                        <input defaultValue={updateGST.cgst} className=\"form-control mt-1\" name=\"cgst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">SGST</label>\n                                        <input defaultValue={updateGST.sgst} className=\"form-control mt-1\" name=\"sgst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-4\">\n                                        <label className=\"required\">IGST</label>\n                                        <input defaultValue={updateGST.igst} className=\"form-control mt-1\" name=\"igst\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                </div><br />\n                                 <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                            </form>\n                    \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                   <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>ADD GST DETAILS</h3>\n                            <br/>\n                                <form className=\"form-group\" onSubmit={onSubmit}>\n\n                                    {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                    <div className=\"row mt-3\" >\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">CGST</label>\n                                            <input placeholder=\"enter cgst\" className=\"form-control mt-1\" name=\"cgst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">SGST</label>\n                                            <input placeholder=\"enter sgst\" className=\"form-control mt-1\" name=\"sgst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">IGST</label>\n                                            <input placeholder=\"enter igst\" className=\"form-control mt-1\" name=\"igst\" type=\"number\" onChange={onInputChange} required />\n                                        </div>\n                                    </div>\n                                    <br/>\n                                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                                    </div>\n                                    <br/>\n                                </form>\n                            \n\n\n\n                \n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n  \n\n                        disableSelectiononChange\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid } from '@material-ui/data-grid'\nimport {\n    gql,\n    useQuery,\n    useMutation,\n    useSubscription,\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Card } from '@material-ui/core';\nimport { toast } from 'react-toastify';\n\nconst LABOUR_MASTER_QUERY = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labor_master(where: {isDeleted: {_eq: $_eq}}){\n      address\n      gst_no\n      id\n      labor_type\n      mobile_no\n      name\n      pan\n      labour_category_master {\n        labour_category\n      }\n      bank_master {\n        account_no\n        bank_name\n        ifsc_code\n        branch_name\n      }\n      bank_id \n    }\n\n\n\n}      \n`;\nconst LABOUR_MASTER_Insertion = gql`\nmutation MyMutation($account_no: String = \"\", $bank_name: String = \"\", $branch_name: String = \"\", $ifsc_code: String = \"\", $address: String = \"\", $gst_no: String = \"\", $labor_type: Int!, $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\") {\n    insert_labor_master(objects: {address: $address, gst_no: $gst_no, labor_type: $labor_type, mobile_no: $mobile_no, name: $name, pan: $pan, bank_master: {data: {account_no: $account_no, bank_name: $bank_name, branch_name: $branch_name, ifsc_code: $ifsc_code}}}) {\n      affected_rows\n    }\n  }        \n`;\n\nconst LABOUR_MASTER_Update = gql`\nmutation MyMutation($id: Int = 10, $address: String = \"\", $gst_no: String = \"\", $labor_type: Int!, $mobile_no: String = \"\", $name: String = \"\", $pan: String = \"\") {\n    update_labor_master_by_pk(pk_columns: {id: $id}, _set: {address: $address, gst_no: $gst_no, labor_type: $labor_type, mobile_no: $mobile_no, name: $name, pan: $pan}) {\n      id\n    }\n  }            \n`\n// const LABOUR_MASTER_Delete = gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_labor_master_by_pk(id: $id) {\n//       id\n//     }\n//   }\n// `\n\nconst LABOUR_MASTER_Delete = gql`\nmutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n    update_labor_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }   \n`\n\nconst Read_Labour_Master=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n`\n\n\n\n\n\n\nexport default function Labour_Master() {\n    const [id, setId] = useState()\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [labour, setLabour] = useState({\n        address: '',\n        gst_no: '',\n        labor_type: '',\n        mobile_no: '',\n        name: '',\n        pan: '',\n        account_no: '',\n        bank_name: '',\n        ifsc_code: '',\n        branch_name: '',\n    })\n    const [updateLabor, setUpdateLabor] = useState({\n        id: id,\n        address: '',\n        gst_no: '',\n        labor_type: '',\n        mobile_no: '',\n        name: '',\n        pan: '',\n        account_no: '',\n        bank_name: '',\n        ifsc_code: '',\n        branch_name: '',\n    })\n   \n\n\n\n\n\n    const Datatable = useSubscription(LABOUR_MASTER_QUERY);\n    const [insertLabourMaster] = useMutation(LABOUR_MASTER_Insertion);\n    const [updateLabourMaster] = useMutation(LABOUR_MASTER_Update);\n    const [deleteLabourMaster] = useMutation(LABOUR_MASTER_Delete);\n\n\n    const read_labour =useSubscription(Read_Labour_Master);\n\n\n    if (Datatable.loading||read_labour.loading) {\n        return (\n            <div className='App' style={{ marginTop: '20%', }}><CircularProgress /></div>\n        )\n    }\n    if (Datatable.error) {\n        return \"Error\"+Datatable.error;\n    }\n    //const rows = Datatable.data.labor_master;\n    const rows = Datatable.data.labor_master;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n\n    const onInputChange = (e) => {\n        console.log(e.target.value)\n        e.preventDefault();\n        setLabour({ ...labour, [e.target.name]: e.target.value })\n    }\n    const onModalInputChange = (e) => {\n        e.preventDefault();\n        setUpdateLabor({ ...updateLabor, [e.target.name]: e.target.value })\n    }\n\n    const onModalSubmit = (e) => {\n        console.log(updateLabor)\n        e.preventDefault();\n        updateLabourMaster({\n            variables: updateLabor,\n        });\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(labour);\n        insertLabourMaster(\n            { variables: labour }\n        )\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const editVehicle = (row) => {\n        setId(row.id);\n        setUpdateLabor({\n            id: row.id,\n            address: row.address,\n            gst_no: row.gst_no,\n            labor_type: row.labor_type,\n            mobile_no: row.mobile_no,\n            name: row.name,\n            pan: row.pan,\n            account_no: row.account_no,\n            bank_name: row.bank_name,\n            ifsc_code: row.ifsc_code,\n            branch_name: row.branch_name,\n        });\n        handleShow();\n    }\n\n    const deleteVehicle = (id) => {\n        console.log(id);\n        deleteLabourMaster({variables: {id: id}})\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }   \n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'labor_type',\n            headerName: 'Labour Type',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labour_category_master.labour_category;\n            },\n            editable: false,\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'mobile_no',\n            headerName: 'Contact Number',\n            width: 190,\n            editable: false,\n        },\n        {\n            field: 'address',\n            headerName: 'Address',\n            width: 190,\n            editable: false,\n        },\n        {\n            field: 'gst_no',\n            headerName: 'GST Number',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'pan',\n            headerName: 'PAN Number',\n            width: 160,\n            editable: false,\n        },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.bank_name;\n            },\n            editable: false,\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.branch_name;\n            },\n            editable: false,\n        },\n        {\n            field: 'ifsc_code',\n            headerName: 'IFSC',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.ifsc_code;\n            },\n            editable: false,\n        },\n        {\n            field: 'account_no',\n            headerName: 'Account Number',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.bank_master.account_no;\n            },\n            editable: false,\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"150%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '20%' }} onClick={() => { editVehicle(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button style={{ marginRight: '30%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                console.log(\"----\"+params.row.id);\n                                deleteVehicle(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n\n    \n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Labour Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className='card card-primary card-outline' style={{ padding: '20px' }}>\n                            <form className=\"form-group\" onSubmit={onModalSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Labour_Category</label>\n                                        <select placeholder=\"enter labour category\" onChange={onModalInputChange} defaultValue={updateLabor.labor_type} type=\"text\" name=\"labor_type\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                <option>--SELECT--</option>\n                                {read_labour.data.labour_category_master.map(Labour_Category => (\n                                    <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                ))}\n                            </select>\n                                    </div>\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Name</label>\n                                        <input placeholder=\"enter name\" defaultValue={updateLabor.name} className=\"form-control mt-1\" name=\"name\" type=\"text\" onChange={onModalInputChange} pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" required />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Contact Number</label>\n                                        <div style={{ display: 'flex' }}>\n                                            <input placeholder=\"enter contact number\" defaultValue={updateLabor.mobile_no} className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\" onChange={onModalInputChange} required  pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\"/>\n                                            {/* <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button> */}\n                                        </div>\n                                    </div>\n                                \n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">GST Number</label>\n                                        <input defaultValue={updateLabor.gst_no} className=\"form-control mt-1\" name=\"gst_no\" placeholder=\"enter gst number\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    {/* <div className=\"field col-md-6\">\n                                        <label>Enter OTP</label>\n                                        <input className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Please Enter Your OTP' />\n                                    </div> */}\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">PAN Number</label>\n                                        <input defaultValue={updateLabor.pan} className=\"form-control mt-1\" name=\"pan\" placeholder=\"enter pan number\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-6\">\n                                        <label className=\"required\">Address</label>\n                                        <input defaultValue={updateLabor.address} className=\"form-control mt-1\" name=\"address\" placeholder=\"enter address\" type=\"text\" onChange={onModalInputChange} required />\n                                    </div>\n\n                                </div>\n                                {/* <h5 style={{ width: '100%', textAlign: 'center' }}>BANK DETAILS</h5> */}\n                                {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                {/* <div className=\"row mt-3\" >\n                                    <div className=\"field col-md-4\">\n                                        <label>Bank Name</label>\n                                        <input className=\"form-control\" name=\"bank_name\" type=\"text\" placeholder='enter your bank name' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label>Branch Name</label>\n                                        <input className=\"form-control\" name=\"branch_name\" type=\"text\" placeholder='enter branch name' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4\">\n                                        <label>IFSC</label>\n                                        <input className=\"form-control\" name=\"ifsc_code\" type=\"text\" placeholder='enter your IFSC number' onChange={onModalInputChange} required />\n                                    </div>\n                                    <div className=\"field col-md-4 mt-3\">\n                                        <label>Account Number</label>\n                                        <input className=\"form-control\" name=\"account_no\" type=\"text\" placeholder='enter your account number' onChange={onModalInputChange} required />\n                                    </div>\n                                </div> */}\n                                <br />\n                                {/* <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}> */}\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Update</button>\n                                    {/* <button className=\"btn btn-primary\" type='reset'>Reset</button> */}\n                                {/* </div> */}\n                            </form>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <br/>\n                            <h4 style={{ width: '100%', textAlign: 'center' }}>LABOUR MASTER</h4>\n\n                            <br/>\n                         \n                                <form className=\"form-group\" onSubmit={onSubmit}>\n                                    <div className=\"row\">\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Labour Category</label>\n                                            <select onChange={onInputChange}  type=\"text\" name=\"labor_type\" className=\"form-control mt-1\" placeholder=\"enter labour category\" required>\n                                <option>--SELECT--</option>\n                                {read_labour.data.labour_category_master.map(Labour_Category => (\n                                    <option key={Labour_Category.id} value={Labour_Category.id}>{Labour_Category.labour_category}</option>\n                                ))}\n                            </select>\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Name</label>\n                                            <input className=\"form-control mt-1\" name=\"name\" type=\"text\"  onChange={onInputChange} placeholder=\"enter name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\"  required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Contact Number</label>\n                                            <div style={{ display: 'flex' }}>\n                                                <input className=\"form-control mt-1\" name=\"mobile_no\" type=\"tel\"  onChange={onInputChange} placeholder=\"enter contact number\" required  pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\"/>\n                                                {/* <button className=\"btn btn-primary\" style={{ margin: '0 20px' }} type='button'>Get OTP</button> */}\n                                            </div>\n                                        </div>\n                                    </div><br />\n                                    <div className=\"row mt-3\">\n                                        <div className=\"field col-md-4\">\n                                        <label className=\"required\">GST Number</label>\n                            <input onChange={onInputChange} placeholder=\"enter gst number\" type=\"text\" name=\"gst_no\" className=\"form-control mt-1\" pattern=\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$\" title=\"Please enter valid gst number\" required />\n                                        </div>\n                                        {/* <div className=\"field col-md-6\">\n                                        <label>Enter OTP</label>\n                                        <input className=\"form-control\" name=\"otp\" type=\"text\" placeholder='Please Enter Your OTP' />\n                                    </div> */}\n\n                                        <div className=\"field col-md-4\">\n                                        <label className=\"required\">PAN Number</label>\n                            <input onChange={onInputChange} placeholder=\"enter pan number\" type=\"text\" name=\"pan\" className=\"form-control mt-1\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\" title=\"Please enter valid pan number\" required />\n                                        </div>\n                                        <div className=\"field col-md-4 mb-4\">\n                                            <label className=\"required\">Address</label>\n                                            <input className=\"form-control mt-1\" name=\"address\" placeholder=\"enter address\" type=\"text\"  onChange={onInputChange} required />\n                                        </div>\n\n                                    </div><br />\n                                    <h5 style={{ width: '100%', textAlign: 'center' }}>BANK DETAILS</h5>\n                                    <br/>\n                                    {/* <span style={{ fontSize: '25px', fontFamily: 'Open Sans, sans-serif', width: '100%', textAlign: 'center', marginTop: '30px' }}>BANK DETAILS</span> */}\n                                    <div className=\"row mt-3\" >\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Bank Name</label>\n                                            <input className=\"form-control mt-1\" name=\"bank_name\" type=\"text\"  placeholder=\"enter bank name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">Branch Name</label>\n                                            <input className=\"form-control mt-1\" name=\"branch_name\" type=\"text\"  placeholder=\"enter branch name\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" onChange={onInputChange} required />\n                                        </div>\n                                        <div className=\"field col-md-4\">\n                                            <label className=\"required\">IFSC</label>\n                                            <input className=\"form-control mt-1\" maxlength=\"11\" minlength=\"11\" name=\"ifsc_code\" type=\"text\"placeholder=\"enter ifsc\"  onChange={onInputChange} required />\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"field col-md-4 mt-3\">\n                                            \n                                            <label className=\"required\">Account Number</label>\n                                            <input className=\"form-control mt-1\" name=\"account_no\" placeholder=\"enter account number\" type=\"number\"  onChange={onInputChange} required />\n                                        </div>\n                                    </div>\n                                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                        <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                                        <br/>\n                                        <br/>\n                                       \n                                    </div>\n                                </form>\n                         \n                        \n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n`\nconst INSERT_INSURANCE = gql`\nmutation MyMutation($from_date: date = \"\", $insurance: String = \"\", $inventory: Int = 0, $to_date: date = \"\") {\n    insert_hoarding_insurance_one(object: {from_date: $from_date, insurance: $insurance, inventory: $inventory, to_date: $to_date}) {\n      id\n    }\n  }\n`\nconst READ_INSURANCE = gql`\nsubscription MySubscription{\n    hoarding_insurance(where: {insurance: {_eq: \"No\"}}) {\n        Inventory_Master {\n          Location\n        }\n        from_date\n        id\n        insurance\n        inventory\n        to_date\n      }\n  }\n  \n  \n`\n\nconst UPDATE_INSURANCE=gql`\nmutation MyMutation($from_date: date = \"\", $insurance: String = \"\", $inventory: Int = 0, $to_date: date = \"\", $id: Int = 0) {\n    update_hoarding_insurance_by_pk(pk_columns: {id: $id}, _set: {from_date: $from_date, insurance: $insurance, inventory: $inventory, to_date: $to_date}) {\n      id\n    }\n  }\n  \n`\n\nconst DELETE_INSURANCE=gql`\nmutation MyMutation($id: Int = 0) {\n    delete_hoarding_insurance_by_pk(id: $id) {\n      id\n    }\n  }\n  \n  \n`\n\nfunction Hoarding_Insurance() {\n    //states\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [showhide, setShowhide] = useState('hidden');\n    const [inventory, setInventory] = useState();\n    const [insurance, setInsurance] = useState();\n    const [fromDate, setFromDate] = useState();\n    const [toDate, setToDate] = useState();\n\n    const [modalId, setModalId] = useState();\n    const [modalInventory, setModalInventory] = useState();\n    const [modalInsurance, setModalInsurance] = useState();\n    const [modalFromDate, setModalFromDate] = useState();\n    const [modalToDate, setModalToDate] = useState();\n    //Queries\n    const [insert_insurance] = useMutation(INSERT_INSURANCE);\n    const [update_insurance] = useMutation(UPDATE_INSURANCE);\n    const [delete_insurance] = useMutation(DELETE_INSURANCE);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const read_insurance = useSubscription(READ_INSURANCE);\n    if (read_inventory.loading || read_insurance.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    //Events\n    const onInsuranceChange = (e) => {\n        if (e.target.value === 'Yes') {\n            setShowhide('visible');\n        }\n        else {\n            setShowhide('hidden');\n        }\n        setInsurance(e.target.value);\n        console.log(e.target.value);\n    }\n    const onInventoryChange = (e) => {\n        setInventory(e.target.value);\n    }\n    const onFromDateChange = (e) => {\n        setFromDate(e.target.value);\n    }\n    const onToDateChange = (e) => {\n        setToDate(e.target.value)\n    }\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value);\n    }\n    const onModalInsuranceChange = (e) => {\n        if (e.target.value === 'Yes') {\n            setShowhide('visible');\n        }\n        else {\n            setShowhide('hidden');\n        }\n        setModalInsurance(e.target.value);\n        console.log(e.target.value);\n    }\n    const onModalInventoryChange = (e) => {\n        setModalInventory(e.target.value);\n    }\n    const onModalFromDateChange = (e) => {\n        setModalFromDate(e.target.value);\n    }\n    const onModalToDateChange = (e) => {\n        setModalToDate(e.target.value)\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        insert_insurance({ variables: { inventory: inventory, insurance: insurance, from_date: fromDate, to_date: toDate } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_insurance({ variables: {id:modalId, inventory: modalInventory, insurance: modalInsurance, from_date: modalFromDate, to_date: modalToDate } })\n        toast.configure();\n        toast.warning('Successfully Updated')\n        handleClose()\n    }\n    const onEdit = (row) => {\n        console.log(row.from_date)\n        handleShow();\n        setModalId(row.id);\n        setModalInventory(row.inventory);\n        setModalInsurance(row.insurance);\n        setModalFromDate(row.from_date);\n        setModalToDate(row.to_date);\n    }\n    const onDelete = (id) => {\n        console.log(id);\n        delete_insurance({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        // {\n        //     field: 'inventory',\n        //     headerName: 'Inventory',\n        //     width: 200,\n        //     editable: false,\n        // },\n        {\n            field: 'inventory',\n            headerName: 'Inventory',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'insurance',\n            headerName: 'Insurance',\n            width: 200,\n            editable: false,\n        },\n        // {\n        //     field: 'from_date',\n        //     headerName: 'From Date',\n        //     width: 200,\n        //     editable: false,\n        // },\n        // {\n        //     field: 'to_date',\n        //     headerName: 'To Date',\n        //     width: 200,\n        //     editable: false,\n        // },\n        {\n            \n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center' }}>\n                        {/* <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\" onClick={() => { onEdit(params.row) }}></i></button> */}\n\n                        {/* <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button> */}\n\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_insurance.data.hoarding_insurance;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Insurance Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" />\n                            </div>\n\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Inventory</label>\n                                <select defaultValue={modalInventory} onChange={onModalInventoryChange} className=\"form-control mt-1\">\n                                    <option>--SELECT--</option>\n                                    {read_inventory.data.Inventory_Master.map(inventory => (\n                                        <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <select defaultValue={modalInsurance} onChange={onModalInsuranceChange} className=\"form-control mt-2\" >\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                                <label className=\"required\">From Date</label>\n                                <input defaultValue={modalFromDate} onChange={onModalFromDateChange} className=\"form-control mt-1\" name=\"fromadte\" type=\"date\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">To Date</label>\n                                <input defaultValue={modalToDate} onChange={onModalToDateChange} className=\"form-control mt-1\" name=\"fromadte\" type=\"date\" />\n                            </div>\n                            \n                        </div>\n                        <br />\n                        <div className=\"field\">\n                            <button className=\"btn btn-primary\">Save</button>\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                {/* <form onSubmit={onFormSubmit} className='form-group'> */}\n                    {/* <div className=\"col-md-12\"> */}\n                        \n                        <h4 style={{ width: '100%', textAlign: 'center' }}>Dashboard</h4>\n                      \n                        {/* <Divider style={{ marginBottom: '8px', }} /> */}\n                        {/* <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Inventory</label>\n                                <select className=\"form-control mt-1\" onChange={onInventoryChange}>\n                                    <option>--SELECT--</option>\n                                    {read_inventory.data.Inventory_Master.map(inventory => (\n                                        <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div> */}\n                        {/* <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <select className=\"form-control mt-2\" onChange={onInsuranceChange} >\n                                    <option>Select...</option>\n                                    <option>Yes</option>\n                                    <option>No</option>\n                                </select>\n                            </div>\n                            <div className=\"field col-md-2 \" style={{ visibility: showhide }} onChange={onFromDateChange}>\n                                <label className=\"required\">From Date</label>\n                                <input type=\"date\" className=\"form-control\" />\n                            </div>\n                            <div className=\"field col-md-2 \" style={{ visibility: showhide }} onChange={onToDateChange}>\n                                <label className=\"required\">To Date</label>\n                                <input type=\"date\" className=\"form-control\" />\n                            </div>\n                        </div> */}\n\n                    {/* </div> */}\n                    \n                    {/* <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '18px', marginLeft: '-130px', width: '8%' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '10px', width: '8%' }}>Reset</button>\n                       \n                    </div> */}\n                 \n                {/* </form> */}\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                marginTop: \"2px\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 300, width: '100%' }}>\n                    <h4>Insurance Reminder</h4>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n        </div>\n    )\n}\n\nexport default Hoarding_Insurance","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { toast } from 'react-toastify';\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\n\nconst getInventory_Master = gql`\nsubscription MySubscription($_eq: String = \"true\"){\n    Inventory_Master(where: {isDeleted: {_neq: $_eq}}){\n      DrpmRate\n      OtpcRate\n      OtmcRate\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      DisplayRatePM\n      District\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      hoarding_insurance\n    \n      Status\n      BookedBy\n      country {\n        name\n        id\n      }\n      Country\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      id\n      state {\n        id\n        name\n      }\n      media_type_master {\n        id\n        media_type\n      }\n    }\n  }\n  \n\n`\nconst Insert_Inventory = gql`\nmutation MyMutation($AvailabilityFrom: date = \"\",$AvailabilityTo: date = \"\", $Country:Int=101,$City_Village: Int = 10, $DisplayRatePM: String = \"\", $District: String = \"\", $Height: String = \"\", $Illumination: String = \"\", $Location: String = \"\", $Media_Type:Int!, $NoofDisplay: String = \"\", $OneTimeMountingCost: String = \"\", $OneTimePrintingCost: String = \"\", $State: Int = 10, $Taluka: String = \"\", $Total: String = \"\", $Totalsqft: String = \"\", $Width: String = \"\", $id: Int = 10,$DrpmRate:String!,$OtpcRate:String!,$OtmcRate:String!,$hoarding_insurance:String=\"\",$Status:String!) {\n    insert_Inventory_Master_one(object: {AvailabilityFrom: $AvailabilityFrom, AvailabilityTo: $AvailabilityTo, City_Village: $City_Village, Country: $Country, DisplayRatePM: $DisplayRatePM, District: $District, DrpmRate: $DrpmRate, Height: $Height, Illumination: $Illumination, Location: $Location, Media_Type: $Media_Type, NoofDisplay: $NoofDisplay, OneTimeMountingCost: $OneTimeMountingCost, OneTimePrintingCost: $OneTimePrintingCost, OtmcRate: $OtmcRate, OtpcRate: $OtpcRate, State: $State, Taluka: $Taluka, Total: $Total, Totalsqft: $Totalsqft, Width: $Width,Status:$Status, hoarding_insurance: $hoarding_insurance}){\n      id\n    }\n  }\n  \n`\nconst Read_Fabricator=gql`\nquery MyQuery {\n    labor_master(where: {isDeleted: {_eq: \"false\"}, labor_type: {_eq: 21}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  `\n  const delete_Inventory=gql`\n  mutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n  `\n\n// const delete_Inventory = gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_Inventory_Master_by_pk(id: $id) {\n//       City_Village\n//       DisplayRatePM\n//       District\n//       Height\n//       Illumination\n//       Location\n//       Media_Type\n//       NoofDisplay\n//       OneTimeMountingCost\n//       OneTimePrintingCost\n//       Country\n//       State\n//       Taluka\n//       Total\n//       Totalsqft\n//       Width\n//       id\n//       hoarding_insurance\n\n//       Status\n//     }\n//   }\n// `\nconst UPDATE_Inventory = gql`\nmutation MyMutation($AvailabilityFrom: date = \"\",$AvailabilityTo: date = \"\", $Country:Int!,$City_Village: Int = 10, $DisplayRatePM: String = \"\", $District: String = \"\", $Height: String = \"\", $Illumination: String = \"\", $Location: String = \"\", $Media_Type:Int!, $NoofDisplay: String = \"\", $OneTimeMountingCost: String = \"\", $OneTimePrintingCost: String = \"\", $State: Int = 10, $Taluka: String = \"\", $Total: String = \"\", $Totalsqft: String = \"\", $Width: String = \"\", $id: Int = 10,$DrpmRate:String!,$OtpcRate:String!,$OtmcRate:String!,$hoarding_insurance:String=\"\",$Status:String!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {AvailabilityFrom: $AvailabilityFrom,AvailabilityTo: $AvailabilityTo, City_Village: $City_Village, DisplayRatePM: $DisplayRatePM, District: $District, Height: $Height, Illumination: $Illumination, Location: $Location, Media_Type: $Media_Type, NoofDisplay: $NoofDisplay, OneTimeMountingCost: $OneTimeMountingCost, OneTimePrintingCost: $OneTimePrintingCost, Country:$Country,State: $State, Taluka: $Taluka, Total: $Total, Totalsqft: $Totalsqft, Width: $Width,DrpmRate:$DrpmRate,OtpcRate:$OtpcRate,OtmcRate:$OtmcRate, Status:$Status,hoarding_insurance: $hoarding_insurance}) {\n      id\n    }\n  }\n  \n`\n\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n    }\n  }  \n`\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n`\nconst MEDIA_TYPE = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    media_type_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      media_type\n    }\n  }\n`\nconst Read_hoarding_erection = gql`\nquery MyQuery {\n    hoarding_errection {\n      id\n      location\n      payment\n      permission\n      transport_charges\n      fabricator_labour_payment\n      fabrication_material\n      excavator_charges\n      excavator\n      electrician_selection\n      electrician_labour_payment\n      electric_material_purchase\n      civil_material\n      civil_contractor_labour_payment\n      civil_contractor\n    }\n  }\n  \n`\n\nvar totalsq;\nvar total;\nvar modaltotalsq;\nvar modaltotal;\nexport default function Inventory_Master() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [Country, setCountry] = useState();\n    const [States, setStates] = useState();\n    const [Taluka, setTaluka] = useState();\n    const [District, setDistrict] = useState();\n    const [City_Village, setCity_Village] = useState();\n    const [Location, setLocation] = useState();\n    const [Media_Type, setMedia_Type] = useState();\n    const [Illumination, setIllumination] = useState();\n    const [Width, setWidth] = useState(1);\n    const [Height, setHeight] = useState(1);\n    const [NoofDisplay, setNoofDisplay] = useState(1);\n    const [Totalsqft, setTotalsqft] = useState();\n    const [DisplayRatePM, setDisplayRatePM] = useState();\n    const [OneTimePrintingCost, setOneTimePrintingCost] = useState();\n    const [OneTimeMountingCost, setOneTimeMountingCost] = useState();\n    const [Total, setTotal] = useState();\n    const [AvailabilityFrom, setAvailabilityFrom] = useState();\n    const [AvailabilityTo, setAvailabilityTo] = useState();\n    const [DrpmRate, setDrpmRate] = useState();\n    const [OtpcRate, setOtpcRate] = useState();\n    const [OtmcRate, setOtmcRate] = useState();\n    const[hoarding_insurance,sethoarding_insurance]=useState();\n    const[Erection,setErection]=useState();\n    \n    const[Status,setStatus]=useState();\n\n\n\n\n\n\n\n    const [ModalId, setModalId] = useState();\n    const [ModalCountry, setModalCountry] = useState();\n    const [ModalStates, setModalStates] = useState();\n    const [ModalTaluka, setModalTaluka] = useState();\n    const [ModalDistrict, setModalDistrict] = useState();\n    const [ModalCity_Village, setModalCity_Village] = useState();\n    const [ModalLocation, setModalLocation] = useState();\n    const [ModalMedia_Type, setModalMedia_Type] = useState();\n    const [ModalIllumination, setModalIllumination] = useState();\n    const [ModalWidth, setModalWidth] = useState(1);\n    const [ModalHeight, setModalHeight] = useState(1);\n    const [ModalNoofDisplay, setModalNoofDisplay] = useState(1);\n    const [ModalTotalsqft, setModalTotalsqft] = useState();\n    const [ModalDisplayRatePM, setModalDisplayRatePM] = useState();\n    const [ModalOneTimePrintingCost, setModalOneTimePrintingCost] = useState();\n    const [ModalOneTimeMountingCost, setModalOneTimeMountingCost] = useState();\n    const [ModalTotal, setModalTotal] = useState();\n    const [ModalAvailabilityFrom, setModalAvailabilityFrom] = useState();\n    const [ModalAvailabilityTo, setModalAvailabilityTo] = useState();\n    const [ModalDrpmRate, setModalDrpmRate] = useState();\n    const [ModalOtpcRate, setModalOtpcRate] = useState();\n    const [ModalOtmcRate, setModalOtmcRate] = useState();\n    const[Modalhoarding_insurance,setModalhoarding_insurance]=useState();\n    const[ModalErection,setModalErection]=useState();\n    \n    const[ModalStatus,setModalStatus]=useState();\n\n    const onCountryChange = (country_data) => {\n        console.log(country_data.id)\n        setCountry(country_data.id)\n        console.log(Country);\n    }\n    const onStateChange = (state_data) => {\n        setStates(state_data.id)\n    }\n    const onCity_VillageChange = (city_data) => {\n        setCity_Village(city_data.id)\n    }\n    const onDistrictChange = (e) => {\n        setDistrict(e.target.value)\n    }\n    const onTalukaChange = (e) => {\n        setTaluka(e.target.value)\n    }\n    const onLocationChange = (e) => {\n        setLocation(e.target.value)\n    }\n    const onMedia_TypeChange = (media_type_data) => {\n        setMedia_Type(media_type_data.id)\n    }\n    const onIlluminationChange = (illumination_data) => {\n        setIllumination(illumination_data.value)\n    }\n    const onWidthChange = (e) => {\n        totalsq = Height * NoofDisplay * e.target.value;\n        setWidth(e.target.value)\n        setTotalsqft(totalsq.toString());\n    }\n    const onHeightChange = (e) => {\n        totalsq = Width * NoofDisplay * e.target.value;\n        setHeight(e.target.value)\n        setTotalsqft(totalsq.toString());\n    }\n    const onNoofDisplayChange = (e) => {\n        setNoofDisplay(e.target.value)\n        //console.log(e.target.value);\n        totalsq = Width * Height * e.target.value;\n        setTotalsqft(totalsq.toString());\n        //console.log(totalsq);\n    }\n\n    // const onTotalsqftChange = (e) => {\n    //     // setTotalsqft(e.target.value)\n    //     // totalsq = Width * Height * NoofDisplay;\n    //     // setTotalsqft(totalsq);\n    // }\n    const onDrpmRateChange = (e) => {\n        setDrpmRate(e.target.value)\n        const drpm = Totalsqft * e.target.value\n        setDisplayRatePM(drpm);\n        console.log(DisplayRatePM)\n        total = parseInt(OneTimePrintingCost) + parseInt(OneTimeMountingCost) + parseInt(drpm)\n        //console.log(total);\n        setTotal(total.toString())\n    }\n    const onOtpcChange = (e) => {\n        setOtpcRate(e.target.value)\n        const otpc = Totalsqft * e.target.value\n        setOneTimePrintingCost(Totalsqft * e.target.value)\n        total = parseInt(otpc) + parseInt(OneTimeMountingCost) + parseInt(DisplayRatePM)\n        //console.log(total);\n        setTotal(total.toString())\n    }\n    const onOtmcChange = (e) => {\n        setOtmcRate(e.target.value)\n        const otmc = Totalsqft * e.target.value\n        setOneTimeMountingCost(Totalsqft * e.target.value)\n        total = parseInt(OneTimePrintingCost) + parseInt(otmc) + parseInt(DisplayRatePM)\n        console.log(total);\n        setTotal(total.toString())\n    }\n    // const onDisplayRatePMChange = (e) => {\n    //     setDisplayRatePM(e.target.value);\n    //     total=parseInt(OneTimePrintingCost) + parseInt(OneTimeMountingCost) + parseInt(e.target.value)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onOneTimePrintingCostChange = (e) => {\n    //     setOneTimePrintingCost(e.target.value)\n    //     total=parseInt(e.target.value) + parseInt(OneTimeMountingCost) + parseInt(DisplayRatePM)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onOneTimeMountingCostChange = (e) => {\n    //     setOneTimeMountingCost(e.target.value)\n    //     total=parseInt(OneTimePrintingCost) + parseInt(e.target.value) + parseInt(DisplayRatePM)\n    //     //console.log(total);\n    //     setTotal(total.toString())\n    // }\n    // const onTotalChange = (e) => {\n\n    // }\n    const onAvailabilityFromChange = (e) => {\n        setAvailabilityFrom(e.target.value)\n    }\n    const onAvailabilityToChange = (e) => {\n        setAvailabilityTo(e.target.value)\n    }\n\n    const onhoarding_insuranceChange=(e)=>{\n        sethoarding_insurance(e.target.value)\n    }\n\n    \n    const onErectionChange=(e)=>{\n        setErection(e.target.value)\n    }\n    const onStatusChange=(e)=>{\n        setStatus(e.target.value)\n    }\n\n\n    //Modal Changes\n    const onModalCountryChange = (modal_country_data) => {\n        setModalCountry(modal_country_data.id)\n    }\n    const onModalStateChange = (modal_state_data) => {\n        setModalStates(modal_state_data.id)\n    }\n    const onModalCity_VillageChange = (modal_city_data) => {\n        //console.log(modal_city_data.id);\n        setModalCity_Village(modal_city_data.id)\n    }\n    const onModalDistrictChange = (e) => {\n        setModalDistrict(e.target.value)\n    }\n    const onModalTalukaChange = (e) => {\n        setModalTaluka(e.target.value)\n    }\n    const onModalLocationChange = (e) => {\n        setModalLocation(e.target.value)\n    }\n    const onModalMedia_TypeChange = (modal_mdeia_type_data) => {\n        setModalMedia_Type(modal_mdeia_type_data.id)\n    }\n    const onModalIlluminationChange = (modalIlluminationData) => {\n        setModalIllumination(modalIlluminationData.value)\n    }\n    const onModalWidthChange = (e) => {\n        modaltotalsq = ModalHeight * ModalNoofDisplay * e.target.value;\n        setModalWidth(e.target.value)\n        setModalTotalsqft(modaltotalsq.toString());\n    }\n    const onModalHeightChange = (e) => {\n        modaltotalsq = ModalWidth * ModalNoofDisplay * e.target.value;\n        setModalHeight(e.target.value)\n        setModalTotalsqft(modaltotalsq.toString());\n    }\n    const onModalNoofDisplayChange = (e) => {\n        setModalNoofDisplay(e.target.value)\n        //console.log(e.target.value);\n        modaltotalsq = ModalWidth * ModalHeight * e.target.value;\n        setModalTotalsqft(modaltotalsq.toString());\n        //console.log(ModalTotalsqft);\n    }\n\n    // const onTotalsqftChange = (e) => {\n    //     // setTotalsqft(e.target.value)\n    //     // totalsq = Width * Height * NoofDisplay;\n    //     // setTotalsqft(totalsq);\n    // }\n    const onModalDrpmChange = (e) => {\n        setModalDrpmRate(e.target.value)\n        const modaldrpm = ModalTotalsqft * e.target.value\n        setModalDisplayRatePM(modaldrpm);\n        console.log(ModalDisplayRatePM)\n        modaltotal = parseInt(ModalOneTimePrintingCost) + parseInt(ModalOneTimeMountingCost) + parseInt(modaldrpm)\n        //console.log(total);\n        setModalTotal(modaltotal.toString())\n    }\n    const onModalOtpcChange = (e) => {\n        setModalOtpcRate(e.target.value)\n        const modalotpc = ModalTotalsqft * e.target.value\n        setModalOneTimePrintingCost(modalotpc)\n        modaltotal = parseInt(modalotpc) + parseInt(ModalOneTimeMountingCost) + parseInt(ModalDisplayRatePM)\n        //console.log(total);\n        setModalTotal(modaltotal.toString())\n    }\n    const onModalOtmcChange = (e) => {\n        setModalOtmcRate(e.target.value)\n        const modalotmc = ModalTotalsqft * e.target.value\n        setModalOneTimeMountingCost(modalotmc)\n        modaltotal = parseInt(ModalOneTimePrintingCost) + parseInt(modalotmc) + parseInt(ModalDisplayRatePM)\n        console.log(modaltotal);\n        setModalTotal(modaltotal.toString())\n    }\n    // const onModalDisplayRatePMChange = (e) => {\n    //     setModalDisplayRatePM(e.target.value);\n    //     modaltotal=parseInt(ModalOneTimePrintingCost) + parseInt(ModalOneTimeMountingCost) + parseInt(e.target.value)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    // const onModalOneTimePrintingCostChange = (e) => {\n    //     setModalOneTimePrintingCost(e.target.value)\n    //     modaltotal=parseInt(e.target.value) + parseInt(ModalOneTimeMountingCost) + parseInt(ModalDisplayRatePM)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    // const onModalOneTimeMountingCostChange = (e) => {\n    //     setModalOneTimeMountingCost(e.target.value)\n    //     modaltotal=parseInt(ModalOneTimePrintingCost) + parseInt(e.target.value) + parseInt(ModalDisplayRatePM)\n    //     //console.log(modaltotal);\n    //     setModalTotal(modaltotal.toString())\n    // }\n    const onModalAvailabilityFromChange = (e) => {\n        setModalAvailabilityFrom(e.target.value)\n    }\n    const onModalAvailabilityToChange = (e) => {\n        setModalAvailabilityTo(e.target.value)\n    }\n\n       const onModalhoarding_insuranceChange=(e)=>{\n        setModalhoarding_insurance(e.target.value)\n    }\n\n    \n\n    const onModalStatusChange=(e)=>{\n        setModalStatus(e.target.value)\n    }\n    const onModalErectionChange=(e)=>{\n        setModalErection(e.target.value)\n    }\n\n\n\n\n\n\n    const [Insert_InventorymasterData] = useMutation(Insert_Inventory);\n    const [delete_InventorymasterData] = useMutation(delete_Inventory);\n    const [update_InventorymasterData] = useMutation(UPDATE_Inventory);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(Country);\n        Insert_InventorymasterData({ variables: { Country: Country, State: States, City_Village: City_Village, District: District, Taluka: Taluka, Location: Location, Media_Type: Media_Type, Illumination: Illumination, Width: Width.toString(), Height: Height.toString(), NoofDisplay: NoofDisplay.toString(), Totalsqft: Totalsqft.toString(), DisplayRatePM: DisplayRatePM.toString(), OneTimeMountingCost: OneTimeMountingCost.toString(), OneTimePrintingCost: OneTimePrintingCost.toString(), Total: Total.toString(), AvailabilityFrom: AvailabilityFrom, AvailabilityTo: AvailabilityTo, DrpmRate: DrpmRate.toString(), OtpcRate: OtpcRate.toString(), OtmcRate: OtmcRate.toString(),hoarding_insurance:hoarding_insurance,Status:Status } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    // const onReset = () => {\n    //     States='';\n    //     City_Village='';\n    //     District='';\n    //     Taluka='';\n    //     Location='';\n    //     Media_Type='';\n    //     Illumination='';\n    //     Width='';\n    //     Height='';\n    //     NoofDisplay='';\n    //     Totalsqft='';\n    //     DisplayRatePM='';\n    //     OneTimeMountingCost='';\n    //     OneTimePrintingCost='';\n    //     Total='';\n    //     Availability=''\n    // }\n    const onEdit = (row) => {\n        //console.log(row);\n        handleShow();\n        setModalId(row.id);\n        setModalCountry(row.Country);\n        setModalStates(row.State);\n        setModalTaluka(row.Taluka);\n        setModalDistrict(row.District);\n        setModalCity_Village(row.City_Village);\n        setModalLocation(row.Location);\n        setModalMedia_Type(row.Media_Type);\n        setModalIllumination(row.Illumination);\n        setModalWidth(row.Width);\n        setModalHeight(row.Height);\n        setModalNoofDisplay(row.NoofDisplay);\n        setModalTotalsqft(row.Totalsqft);\n        setModalDisplayRatePM(row.DisplayRatePM);\n        setModalOneTimePrintingCost(row.OneTimePrintingCost);\n        setModalOneTimeMountingCost(row.OneTimeMountingCost);\n        setModalTotal(row.Total);\n        setModalAvailabilityFrom(row.AvailabilityFrom);\n        setModalAvailabilityTo(row.AvailabilityTo);\n        setModalDrpmRate(row.DrpmRate);\n        setModalOtpcRate(row.OtpcRate);\n        setModalOtmcRate(row.OtmcRate);\n        // setModalhoarding_insurance(row.hoarding_insurance);\n        // setModalerrection_cost(row.errection_cost);\n        // setModalerrection_year(row.errection_year);\n        // setModalfabrication_selection(row.fabrication_selection);\n        setModalStatus(row.Status);\n\n\n        //console.log(modalInventory);\n    }\n\n    // const onModalInputChange = (e) => {\n    //     setModalInventory({ ...modalInventory, [e.target.name]: e.target.value })\n    // }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(ModalStates.toString());\n        update_InventorymasterData({ variables: { id: ModalId, Country: ModalCountry, State: ModalStates, City_Village: ModalCity_Village, District: ModalDistrict, Taluka: ModalTaluka, Location: ModalLocation, Media_Type: ModalMedia_Type, Illumination: ModalIllumination, Width: ModalWidth.toString(), Height: ModalHeight.toString(), NoofDisplay: ModalNoofDisplay.toString(), Totalsqft: ModalTotalsqft.toString(), DisplayRatePM: ModalDisplayRatePM.toString(), OneTimeMountingCost: ModalOneTimeMountingCost.toString(), OneTimePrintingCost: ModalOneTimePrintingCost.toString(), Total: ModalTotal.toString(), AvailabilityFrom: ModalAvailabilityFrom, AvailabilityTo: ModalAvailabilityTo, DrpmRate: ModalDrpmRate, OtpcRate: ModalOtpcRate, OtmcRate: ModalOtmcRate , hoarding_insurance: Modalhoarding_insurance,Status:ModalStatus} })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        //console.log(id);\n        delete_InventorymasterData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const getInventory = useSubscription(getInventory_Master);\n    const read_countries = useQuery(READ_COUNTRIES)\n    const read_states = useQuery(READ_STATES)\n    const read_cities = useQuery(READ_CITIES)\n    const media_type = useSubscription(MEDIA_TYPE)\n    const read_fabricator=useQuery(Read_Fabricator)\n    const read_hoarding_erection=useQuery(Read_hoarding_erection)\n    if (getInventory.loading || read_states.loading || read_cities.loading || read_countries.loading || media_type.loading||read_fabricator.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    //console.log(getInventory.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'Country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.country.name;\n            }\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.state.name;\n            }\n        },\n        {\n            field: 'Taluka',\n            headerName: 'Taluka',\n            width: 190\n        },\n        {\n            field: 'District',\n            headerName: 'District',\n            width: 190\n        },\n        {\n            field: 'City_Village',\n            headerName: 'City_Village',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 160\n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Illumination',\n            headerName: 'Illumination',\n            width: 150\n        },\n        {\n            field: 'Width',\n            headerName: 'Width',\n            width: 130\n        },\n        {\n            field: 'Height',\n            headerName: 'Height',\n            width: 130\n        },\n        {\n            field: 'NoofDisplay',\n            headerName: 'NoofDisplay',\n            width: 170\n        },\n        {\n            field: 'Totalsqft',\n            headerName: 'Total Sq.Ft.',\n            width: 190\n        },\n        {\n            field: 'DrpmRate',\n            headerName: 'Display Rate P.M. Rate',\n            width: 240\n        },\n        {\n            field: 'DisplayRatePM',\n            headerName: 'Display Rate P.M.',\n            width: 240\n        },\n        {\n            field: 'OtpcRate',\n            headerName: 'One Time Printing Cost Rate',\n            width: 240\n        },\n        {\n            field: 'OneTimePrintingCost',\n            headerName: 'One Time Printing Cost',\n            width: 240\n        },\n        {\n            field: 'OtmcRate',\n            headerName: 'One Time Mounting Cost Rate',\n            width: 240\n        },\n        {\n            field: 'OneTimeMountingCost',\n            headerName: 'One Time Mounting Cost',\n            width: 240\n        },\n        {\n            field: 'Total',\n            headerName: 'Total',\n            width: 190\n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'Booked From',\n            width: 190\n        },\n        {\n            field: 'AvailabilityTo',\n            headerName: 'Booked To',\n            width: 190\n        },\n        // {\n        //     field: 'hoarding_insurance',\n        //     headerName: 'Hoarding Insurance',\n        //     width: 190\n        // },\n        // {\n        //     field: 'errection_cost',\n        //     headerName: 'Erection Cost',\n        //     width: 190\n        // },\n        // {\n        //     field: 'errection_year',\n        //     headerName: 'Erection year',\n        //     width: 190\n        // },\n        // {\n        //     field: 'fabrication_selection',\n        //     headerName: 'Fabrication Selection',\n        //     width: 190\n        // },\n        {\n            field: 'Status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'BookedBy',\n            headerName: 'Planner Name',\n            width: 190\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = getInventory.data.Inventory_Master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    var IlluminationOptions = [\n        { value: 'F LIT', label: 'F LIT' },\n        { value: 'NON LIT', label: 'NON LIT' },\n        {value:'All',label:'All'}\n    ]\n    // const rows=\n    //    [\n    //    { id: 1, state: 'Lannister', taluka: 'Cersei', district: 'kop' },\n    //    { id: 1, state: 'Lannister', taluka: 'pk', district: 'kop' },\n    //     { id: 3, state: 'Lannister', firstName: 'Jaime', age: 45 },\n    //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    // ]\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Inventory</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-4\">\n                                <label>Country</label>\n                                <Select\n                                    name=\"country\"\n                                    value={read_countries.data.countries.find(op => op.id === ModalCountry)}\n                                    options={read_countries.data.countries}\n                                    onChange={onModalCountryChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">State</label>\n                                {/* <input defaultValue={modalInventory.State} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"State\" type=\"text\" placeholder=\" enter state\" /> */}\n                                {/* <select defaultValue={ModalStates} onChange={onModalStateChange} type=\"text\" name=\"State\" className=\"form-control mt-1\" data-live-search=\"true\" placeholder=\"enter state\" required>\n                                    <option>--SELECT--</option>\n                                    {read_states.data.states.map(state => (\n                                        <option key={state.id} value={state.id}>{state.name}</option>\n                                    ))}\n                                </select> */}\n                                <Select\n                                    name=\"state\"\n                                    value={read_states.data.states.find(op => op.id === ModalStates)}\n                                    options={read_states.data.states}\n                                    onChange={onModalStateChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">City Village</label>\n                                {/* <input defaultValue={modalInventory.City_Village} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"City_village\"\n                                    placeholder=\"enter city village\" required /> */}\n                                {/* <select defaultValue={ModalCity_Village} onChange={onModalCity_VillageChange} type=\"text\" name=\"City_Village\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                                    <option>--SELECT--</option>\n                                    {read_cities.data.cities.map(city => (\n                                        <option key={city.id} value={city.id}>{city.name}</option>\n                                    ))}\n                                </select> */}\n                                <Select\n                                    name=\"city\"\n                                    value={read_cities.data.cities.find(op => op.id === ModalCity_Village)}\n                                    options={read_cities.data.cities}\n                                    onChange={onModalCity_VillageChange}\n                                    getOptionLabel={(option) => option.name}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">District</label>\n                                <input defaultValue={ModalDistrict} onChange={onModalDistrictChange} className=\"form-control mt-1\" name=\"District\" placeholder=\"enter district\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Taluka</label>\n                                <input defaultValue={ModalTaluka} onChange={onModalTalukaChange} className=\"form-control mt-1\" name=\"Taluka\" placeholder=\"enter taluka\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Location</label>\n                                <input defaultValue={ModalLocation} onChange={onModalLocationChange} className=\"form-control mt-1\" name=\"Location\" placeholder=\"enter location\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Media Type</label>\n                                {/* <input defaultValue={ModalMedia_Type} onChange={onModalMedia_TypeChange} className=\"form-control mt-1\" name=\"Media_Type\" placeholder=\"enter media type \" required /> */}\n                                <Select\n                                    name=\"Media_Type\"\n                                    value={media_type.data.media_type_master.find((op) => op.id === ModalMedia_Type)}\n                                    options={media_type.data.media_type_master}\n                                    onChange={onModalMedia_TypeChange}\n                                    getOptionLabel={(option) => option.media_type}\n                                    getOptionValue={(option) => option.id}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Illumination</label>\n\n                                {/* <input defaultValue={ModalIllumination} onChange={onModalIlluminationChange} className=\"form-control mt-1\" name=\"Illumination\" placeholder=\"enter illumination\" required /> */}\n                                <Select\n                                    name=\"Illumination\"\n                                    value={IlluminationOptions.find(op => op.value === ModalIllumination)}\n                                    options={[\n                                        { value: 'F LIT', label: 'F LIT' },\n                                        { value: 'NON LIT', label: 'NON LIT' },\n                                        { value: 'All',label:'All'}\n                                    ]}\n                                    onChange={onModalIlluminationChange}\n                                    getOptionLabel={(option) => option.label}\n                                    getOptionValue={(option) => option.value}\n                                />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Width</label>\n                                <input defaultValue={ModalWidth} onChange={onModalWidthChange} className=\"form-control mt-1\" name=\"Width\" placeholder=\"enter width\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Height </label>\n                                <input defaultValue={ModalHeight} onChange={onModalHeightChange} className=\"form-control mt-1\" name=\"Height\" placeholder=\"enter height\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">No of Display </label>\n                                <input defaultValue={ModalNoofDisplay} onChange={onModalNoofDisplayChange} className=\"form-control mt-1\" name=\"NoofDisplay\" placeholder=\"enter no of display\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Total Sq.Ft </label>\n                                <input value={ModalTotalsqft} className=\"form-control mt-1\" name=\"Totalsqft\" placeholder=\"enter total sq ft\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input value={ModalDrpmRate} onChange={onModalDrpmChange} className=\"form-control mt-1\" name=\"DrpmRate\" placeholder=\"enter display rate P.M\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Display Rate P.M </label>\n                                <input value={ModalDisplayRatePM} className=\"form-control mt-1\" name=\"DisplayRatePM\" placeholder=\"enter display rate P.M\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input value={ModalOtpcRate} onChange={onModalOtpcChange} className=\"form-control mt-1\" name=\"OtpcRate\" placeholder=\"enter rate \" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">One Time Printing Cost </label>\n                                <input value={ModalOneTimePrintingCost} className=\"form-control mt-1\" name=\"OneTimePrintingCost\" placeholder=\"enter OneTimePrintingCost\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Rate</label>\n                                <input value={ModalOtmcRate} onChange={onModalOtmcChange} className=\"form-control mt-4\" name=\"OtmcRate\" placeholder=\"enter rate \" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">One Time Mounting Cost </label>\n                                <input value={ModalOneTimeMountingCost} className=\"form-control mt-1\" name=\"OneTimeMountingCost\" placeholder=\"enter one time mounting cost\" required />\n                            </div>\n                        </div><br />\n                        <div className=\"row mt-2\"><br />\n                            <div className=\"field col-md-4\">\n                                <label className=\"required\">Total</label>\n                                <input value={ModalTotal} className=\"form-control mt-1\" name=\"Total\" placeholder=\"enter total\" required />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label>Booking From</label>\n                                <input defaultValue={ModalAvailabilityFrom} onChange={onModalAvailabilityFromChange} className=\"form-control mt-1\" name=\"Availability from\" placeholder=\"enter availability\" />\n                            </div>\n                            <div className=\"field col-md-4\">\n                                <label>Booking To</label>\n                                <input defaultValue={ModalAvailabilityTo} onChange={onModalAvailabilityToChange} className=\"form-control mt-1\" name=\"Availability to\" placeholder=\"enter availability\" />\n                            </div>\n                        </div>\n                        {/* <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Hoarding Insurance</label>\n                            <input  type=\"text\"defaultValue={Modalhoarding_insurance} name=\"hoarding_insurance\" onChange={onModalhoarding_insuranceChange}className=\"form-control mt-1\" placeholder=\"enter total\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Errection Cost</label>\n                            <input type=\"text\"defaultValue={Modalerrection_cost} name=\"errection_cost\" onChange={onModalerrection_costChange} className=\"form-control mt-1\" placeholder=\"enter availability\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Errection Year</label>\n                            <input type=\"text\" name=\"errection_year \" defaultValue={Modalerrection_year}onChange={onModalerrection_yearChange} className=\"form-control mt-1\" placeholder=\"enter availability\" required />\n                        </div>\n\n                        \n                    </div><br/> */}\n                    <div className=\"row mt-2\">\n                    {/* <div className=\"field col-md-4\">\n                            <label className=\"required\">Fabrication selection</label>\n                            <input type=\"text\" defaultValue={Modalfabrication_selection}name=\"fabrication_selection\" onChange={onModalfabrication_selectionChange} className=\"form-control mt-1\" placeholder=\"enter availability\" required />\n                        </div> */}\n                        <div className=\"field col-md-4\">\n                        <label>Erection Selection</label>\n                            <select defaultValue={ModalErection} className=\"form-control\"onChange={onModalErectionChange} >\n                                {read_hoarding_erection.data.hoarding_errection.map((erection)=>(\n                                    <option id={erection.id} value={erection.id}>{erection.location}</option>\n    ))}\n                            </select>\n\n                        </div>\n                        <div className=\"field col-md-4\">\n                        <label>Status</label>\n                            <select className=\"form-control\"onChange={onModalStatusChange} >\n                                <option>Select...</option>\n                                <option>Immediate</option>\n                                <option>Booked</option>\n                                <option>Hold</option>\n                            </select>\n\n                        </div>\n\n\n                        </div><br/>\n\n                        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                            <br /><br />\n                            {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                        </div>\n\n\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n\n\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 style={{ width: '100%', textAlign: 'center' }}>INVENTORY MASTER</h4>\n                <br />\n                <form className=\"form-group\" onSubmit={onFormSubmit} padding=\"2px\">\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            <Select\n                                name=\"Country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input type=\"text\" name=\"State\" onChange={onInputChange} className=\"form-control mt-1\" required placeholder=\"enter state\" title=\"Please enter Alphabets.\" /> */}\n                            {/* <select onChange={onStateChange} type=\"text\" name=\"State\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                                <option>--SELECT--</option>\n                                {read_states.data.states.map(state => (\n                                    <option key={state.id} value={state.id}>{state.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"State\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City Village</label>\n                            {/* <input type=\"city/village\" name=\"City_Village\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter village\" required title=\"Please enter valid contact number\" /> */}\n                            {/* <select onChange={onCity_VillageChange} type=\"text\" name=\"City_Village\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                                <option>--SELECT--</option>\n                                {read_cities.data.cities.map(city => (\n                                    <option key={city.id} value={city.id}>{city.name}</option>\n                                ))}\n                            </select> */}\n                            <Select\n                                name=\"City\"\n                                options={read_cities.data.cities}\n                                onChange={onCity_VillageChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Taluka</label>\n                            <input type=\"text\" name=\"Taluka\" onChange={onTalukaChange} className=\"form-control mt-1\" placeholder=\"enter taluka\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">District</label>\n                            <input type=\"district\" name=\"District\" onChange={onDistrictChange} className=\"form-control mt-1\" placeholder=\"enter district\" required title=\"Please enter valid contact number\" />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <input type=\"location\" name=\"Location\" onChange={onLocationChange} className=\"form-control mt-1\" placeholder=\"enter location\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Media Type</label>\n                            {/* <input type=\"mediatype\" name=\"Media_Type\" onChange={onMedia_TypeChange} className=\"form-control mt-1\" placeholder=\"enter media type \" required /> */}\n                            <Select\n                                name=\"Media_Type\"\n                                options={media_type.data.media_type_master}\n                                onChange={onMedia_TypeChange}\n                                getOptionLabel={(option) => option.media_type}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Illumination</label>\n\n                            {/* <input type=\"text\" name=\"Illumination\" onChange={onIlluminationChange} className=\"form-control mt-1\" placeholder=\"enter illumination\" required /> */}\n                            <Select\n                                name=\"Illumination\"\n                                options={[\n                                    { value: 'F LIT', label: 'F LIT' },\n                                    { value: 'NON LIT', label: 'NON LIT' },\n                                    { value: 'ALL',label:'ALL'}\n                                ]}\n                                onChange={onIlluminationChange}\n                                getOptionLabel={(option) => option.label}\n                                getOptionValue={(option) => option.value}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Width</label>\n                            <input type=\"number\" name=\"Width\" onChange={onWidthChange} className=\"form-control mt-1\" placeholder=\"enter width\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Height </label>\n                            <input type=\"number\" name=\"Height\" onChange={onHeightChange} className=\"form-control mt-1\" placeholder=\"enter height\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">No of Display </label>\n                            <input type=\"number\" name=\"NoofDisplay\" onChange={onNoofDisplayChange} className=\"form-control mt-1\" placeholder=\"enter no of display\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Total Sq.Ft </label>\n                            <input value={Totalsqft} type=\"number\" name=\"Totalsqft\" className=\"form-control mt-1\" placeholder=\"enter total sq.ft\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rate</label>\n                            <input type=\"number\" name=\"DisplayRatePMRate\" onChange={onDrpmRateChange} className=\"form-control mt-1\" placeholder=\"enter rate of display rate P.M\" required />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Display Rate P.M </label>\n                            <input value={DisplayRatePM} type=\"number\" name=\"DisplayRatePM\" className=\"form-control mt-1\" placeholder=\"enter display rate P.M\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Printing Rate Per Sq ft</label>\n                            <input type=\"number\" name=\"OneTimePrintingCostRate\" onChange={onOtpcChange} className=\"form-control mt-1\" placeholder=\"enter one time cost rate\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">One Time Printing Cost</label>\n                            <input value={OneTimePrintingCost} type=\"number\" name=\"OneTimePrintingCost\" className=\"form-control mt-2\" placeholder=\"enter one time printing cost\" required />\n                        </div>\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mounting Rate Per Sq ft</label>\n                            <input type=\"number\" name=\"OneTimeMountingCostRate\" onChange={onOtmcChange} className=\"form-control mt-1\" placeholder=\"enter one time mounting cost rate\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">One Time Mounting Cost </label>\n                            <input value={OneTimeMountingCost} type=\"number\" name=\"OneTimeMountingCost\" className=\"form-control mt-1\" placeholder=\"enter one time mounting cost\" required />\n                        </div>\n\n                    </div><br />\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Total</label>\n                            <input value={Total} type=\"number\" name=\"Total\" className=\"form-control mt-1\" placeholder=\"enter total\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"\">Booking From</label>\n                            <input type=\"date\" name=\"Availability From\" onChange={onAvailabilityFromChange} className=\"form-control mt-1\" placeholder=\"enter availability\" />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"\">Booking To</label>\n                            <input type=\"date\" name=\"Availability To\" onChange={onAvailabilityToChange} className=\"form-control mt-1\" placeholder=\"enter availability\" />\n                        </div>\n\n                        <br />\n                    </div><br />\n                    {/* <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Hoarding Insurance</label>\n                            <input  type=\"text\" name=\"hoarding_insurance\" onChange={onhoarding_insuranceChange}className=\"form-control mt-1\" placeholder=\"enter total\" required />\n                        </div>\n\n\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Errection Cost</label>\n                            <input type=\"text\" name=\"errection_cost\" onChange={onerrection_costChange} className=\"form-control mt-1\" placeholder=\"enter availability\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Errection Year</label>\n                            <input type=\"text\" name=\"errection_year \" onChange={onerrection_yearChange} className=\"form-control mt-1\" placeholder=\"enter availability\" required />\n                        </div>\n\n                        \n                    </div><br/> */}\n                    <div className=\"row mt-2\">\n                    {/* <div className=\"field col-md-4\">\n                    <label className=\"required\">Fabricator</label>\n                    <select className=\"form-control\" onChange={onfabrication_selectionChange}>\n                                <option>Select...</option>\n                                {read_fabricator.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                        <div className=\"field col-md-4\">\n                        <label>Erection Selection</label>\n                            <select className=\"form-control\"onChange={onErectionChange} >\n                                <option>Select...</option>\n                                {read_hoarding_erection.data.hoarding_errection.map((erection)=>(\n                                    <option id={erection.id} value={erection.id}>{erection.location}</option>\n                                ))}\n                            </select>\n\n                        </div>\n                        <div className=\"field col-md-4\">\n                        <label>Status</label>\n                            <select className=\"form-control\"onChange={onStatusChange} >\n                                <option>Select...</option>\n                                <option>Immediate</option>\n                                <option>Booked</option>\n                                <option>Hold</option>\n                            </select>\n                        </div>\n\n\n                        </div><br/>\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br /><br />\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                    </div>\n                </form>\n\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Category } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getLabour_Master=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labour_category_master(where: {isDeleted: {_eq: $_eq}}){\n      id\n      labour_category\n    }\n  }\n  \n  \n\n`\n\nconst InsertLabour_Master =gql`\nmutation MyMutation($labour_category: String = \"\") {\n    insert_labour_category_master_one(object: {labour_category: $labour_category}) {\n      id\n    }\n  }\n  \n\n`\n\nconst UpdateLabour_Master =gql`\nmutation MyMutation($id: Int = \"\", $labour_category: String = \"\") {\n    update_labour_category_master_by_pk(pk_columns: {id: $id}, _set: { labour_category: $labour_category}) {\n      id\n      labour_category\n    }\n  }\n  \n\n\n`\n\n// const Deletelabour_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_labour_category_master_by_pk(id: $id) {\n//       id\n//       labour_category\n//     }\n//   }\n  \n// `\n\nconst Deletelabour_Master = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 10) {\n    update_labour_category_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\n\n\n\n\nexport default function Labour_Category_Master() {\n    \n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\nconst[modallabour,setmodallabour]=useState({\n    id:'',\n    labour_category:'',\n})\n\n\nconst onModalInputChange =(e) =>{\n    setmodallabour({ ...modallabour, [e.target.name]: e.target.value });\n  }\n  \n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modallabour);\n    Update_labourmasterData({ variables: { id: modallabour.id, labour_category: modallabour.labour_category } })\n   \n    handleClose();\n  }\n\n\n\n    const[Insert_labourmasterData]=useMutation(InsertLabour_Master);\n    const[Update_labourmasterData]=useMutation(UpdateLabour_Master);\n    const[delete_labourmasterdata]=useMutation(Deletelabour_Master);\n    const onFormSubmit=(e)=>{\n        e.preventDefault();\n        console.log(e.target)\n        Insert_labourmasterData({variables:{labour_category: e.target[0].value}})\n        toast.configure();\n        toast.success('Successfully Inserted')\n       }\n       \n       const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setmodallabour({\n            id: row.id,\n            labour_category: row.labour_category\n        })\n    }\n\n    const onDelete = (id) => {\n        console.log(id);\n        delete_labourmasterdata({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const getlabour_category_master = useSubscription(getLabour_Master);\n    if (getlabour_category_master.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }   \n    console.log(getlabour_category_master.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'labour_category',\n            headerName: 'Labour Category ',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\"onClick={()=>{onEdit(params.row)}}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n    \n\n    const rows=getlabour_category_master.data.labour_category_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n        <div>\n            \n        <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>labour Category Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modallabour.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">labour Category master</label>\n                                        <input defaultValue={modallabour.labour_category} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"labour_category\" type=\"text\" placeholder='Enter labour_category' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n\n\n\n\n\n\n\n        <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Labour Category Master</h3>\n\n<br/>\n                            <form onSubmit={onFormSubmit} className=\"form-group\" >\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Labour Category</label>\n                                        <input placeholder=\"enter labour category\"  className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"labour_category\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        // components={{\n                        //   Toolbar: GridToolbar,\n                        // }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Category } from '@material-ui/icons';\nimport { Modal, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\n\nconst getPayment_master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    payment_type(where: {isDeleted: {_eq: $_eq}}){\n      id\n      payment_type\n    }\n  }\n  \n  \n\n`\n\n\nconst InsertPayment_Master = gql`\nmutation MyMutation($payment_type: String = \"\") {\n    insert_payment_type_one(object: {payment_type: $payment_type}) {\n      id\n    }\n  }\n  \n\n`\n\nconst UpdatePayment_Master = gql`\nmutation MyMutation($id: Int = \"\", $payment_type: String = \"\") {\n    update_payment_type_by_pk(pk_columns: {id: $id}, _set: { payment_type: $payment_type}) {\n      id\n      payment_type\n    }\n  }\n  \n\n\n`\n\n// const DeletePayment_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_payment_type_by_pk(id: $id) {\n//       id\n//       payment_type\n//     }\n//   }\n  \n// `\n\nconst DeletePayment_Master = gql`\nmutation MyMutation($isDeleted: String = \"\", $id: Int = 0) {\n    update_payment_type_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      isDeleted\n    }\n  }\n  \n`\n\n\nexport default function Payment_Type() {\n\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [modalpayment, setmodalpayment] = useState({\n        id: '',\n        payment_type: '',\n    })\n\n\n    const onModalInputChange = (e) => {\n        setmodalpayment({ ...modalpayment, [e.target.name]: e.target.value });\n    }\n\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(modalpayment);\n        Update_paymenttypeData({ variables: { id: modalpayment.id, payment_type: modalpayment.payment_type } })\n\n        handleClose();\n    }\n    const [Insert_paymenttypeData] = useMutation(InsertPayment_Master);\n    const [Update_paymenttypeData] = useMutation(UpdatePayment_Master);\n    const [delete_paymenttypeData] = useMutation(DeletePayment_Master);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        Insert_paymenttypeData({ variables: { payment_type: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setmodalpayment({\n            id: row.id,\n            payment_type: row.payment_type\n        })\n    }\n\n\n\n\n    const onDelete = (id) => {\n        console.log(id);\n        delete_paymenttypeData({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const getpayment_type = useSubscription(getPayment_master);\n    if (getpayment_type.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getpayment_type.error) {\n        return \"error\" + getpayment_type.error;\n    }\n    console.log(getpayment_type.data);\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'payment_type',\n            headerName: 'Payment Type ',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\" onClick={() => { onEdit(params.row) }}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    const rows = getpayment_type.data.payment_type;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <>\n            <div>\n\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Payment Type Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6 text-right\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={modalpayment.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter payment type' required />\n                                </div>\n                                <div className=\"field col-md-6 text-right\">\n                                    <label className=\"required\">labour Category master</label>\n                                    <input defaultValue={modalpayment.payment_type} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"payment_type\" type=\"text\" placeholder='Enter payment' required />\n                                </div>\n                            </div><br />\n\n                            <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n\n\n\n\n\n\n\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br />\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Payment Type</h3>\n\n                            <br />\n                            <form onSubmit={onFormSubmit} className=\"form-group\" >\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Payment_Type</label>\n                                        <input placeholder=\"enter Payment Type\" className=\"form-control mt-2\" style={{ marginTop: '10px', width: '80%' }} name=\"payment_type\" type=\"text\" required />\n                                    </div>\n                                </div>\n                                <br />\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                          Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n\n    )\n}","import React, { useState } from 'react';\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\n// import Button from '@restart/ui/esm/Button';\nimport {\n    gql,\n    useQuery,\n    useSubscription,\n    useMutation\n} from '@apollo/client';\nconst getAVAILABILITY = gql`\nsubscription MySubscription {\n    availability {\n      id\n      availability\n    }\n  } \n`\nconst DELETE_AVAILABILITY = gql`\n  mutation MyMutation($id: Int = 10) {\n    delete_availability_by_pk(id: $id) {\n      id\n      availability\n    }\n  }\n`\nconst INSERT_AVAILABILITY = gql`\nmutation MyMutation($availability: String = \"\") {\n    insert_availability_one(object: {availability: $availability}) {\n      id\n      availability\n    }\n  }  \n`\nconst UPDATE_AVAILABILITY = gql`\nmutation MyMutation($id: Int!, $availability: String!) {\n    update_availability_by_pk(pk_columns: {id: $id}, _set: {availability: $availability}) {\n      availability\n    }\n  }\n  \n  \n    \n`\nfunction Availability() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [availability, setAvailability] = useState({\n        availability: '',\n    }\n    )\n\n    const [modelAvailability, setModelAvailability] = useState({\n        id: '',\n        availability: '',\n    }\n    )\n    const onInputChange = (e) => {\n        setAvailability({ ...availability, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target[0].value)\n        insert_availability({ variables: { availability: e.target[0].value } })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        console.log(row);\n        setModelAvailability({\n            id: row.id,\n            availability: row.availability\n        })\n    }\n    const onModalInputChange = (e) => {\n        setModelAvailability({ ...modelAvailability, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(modelAvailability)\n        update_availability({ variables: { id: modelAvailability.id, availability: modelAvailability.availability } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const [insert_availability] = useMutation(INSERT_AVAILABILITY);\n    const [update_availability] = useMutation(UPDATE_AVAILABILITY);\n    const [delete_availability] = useMutation(DELETE_AVAILABILITY);\n    const onDelete = (id) => {\n        console.log(id);\n        delete_availability({ variables: { id: id } });\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const getAvailability = useSubscription(getAVAILABILITY);\n    if (getAvailability.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getAvailability.error) {\n        return \"error\" + getAvailability.error;\n    }\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'availability',\n            headerName: 'Availability',\n            width: 200,\n            editable: false,\n        },\n\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center'  }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{marginRight: '10%' }} onClick={() => { onEdit(params.row) }} ><i className=\"bi bi-pencil-fill\"></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n    //console.log(getAvailability.data);\n    const rows = getAvailability.data.availability;\n\n    return (\n        <>\n            <div>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Availability</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      \n                            <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                                <div className=\"row\">\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">ID</label>\n                                        <input defaultValue={modelAvailability.id} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"id\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                    <div className=\"field col-md-6 text-right\">\n                                        <label className=\"required\">Availability Master</label>\n                                        <input defaultValue={modelAvailability.availability} onChange={onModalInputChange} className=\"form-control mt-1\" style={{ marginTop: '10px' }} name=\"availability\" type=\"text\" placeholder='Enter media type' required />\n                                    </div>\n                                </div><br />\n                               \n                                    <button className=\"btn btn-primary\" type='submit' style={{ marginLeft: '80px' }}>Save</button>  \n                            </form>\n                       \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n                <Card variant=\"outlined\" className=\"form-card\" style={{\n                    margin: \"2%\",\n                    padding: \"2%\",\n                    background: \"#FFFFFF\",\n                    boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"10px\"\n                }}>\n                    <div className=\"container\">\n                        <div className=\"col-md-12\">\n                            <br/>\n                            <h3 style={{ width: '100%', textAlign: 'center' }}>Availability Master</h3>\n\n<br/>\n                            <form className=\"form-group\" onSubmit={onFormSubmit}>\n                                <div className=\"row mt-2\">\n                                    <div className=\"field col-md-4\" style={{ marginRight: '40px' }}>\n                                    </div>\n                                    <div className=\"field col-md-4 text-right\">\n                                        <label className=\"required\">Availability</label>\n                                        <input placeholder=\"enter availability\" onChange={onInputChange} className=\"form-control mt-2\" style={{ marginTop: '10px', width:'80%' }} name=\"availability\" type=\"text\" required />\n                                    </div>\n                                </div>\n                               <br/>\n                                <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                                    <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '20px', width:'8%' }}>Save</button>\n\n                                    <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'8%' }} >Reset</button>\n                                </div>\n                            </form>\n\n                        </div><br />\n                    </div>\n                </Card>\n            </div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        components={{\n                            Toolbar: GridToolbar,\n                          }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n        </>\n    )\n}\nexport default Availability;","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport exportFromJSON from 'export-from-json'\n\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n  }  \n`\n\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n`\nconst READ_MEDIA = gql`\nquery MyQuery($_eq: String = \"false\") {\n    media_type_master(where: {isDeleted: {_eq: $_eq}}) {\n      id\n      media_type\n    }\n  }\n  \n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery($_eq: String = \"false\"){\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n    \n`\nconst READ_SIZE = gql`\nquery MyQuery {\n    size_master {\n      id\n      height\n      width\n      no_of_display\n    }\n  }  \n`\nconst SEARCH_INVENTORYALL = gql`\nquery MyQuery($country: Int!, $state: Int!, $city: Int!, $illumination: String = \"\", $media_type: Int!, $_gt: date = \"\", $_eq: String = \"false\") {\n    Inventory_Master(where: {Country: {_eq: $country}, State: {_eq: $state}, City_Village: {_eq: $city}, Illumination: {_nsimilar: $illumination}, Media_Type: {_eq: $media_type}, AvailabilityTo: {_lt: $_gt}, isDeleted: {_eq: $_eq}}) {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      hoarding_insurance\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      id\n      country {\n        id\n        name\n      }\n      city {\n        id\n        name\n      }\n      state {\n        id\n        name\n      }\n      media_type_master {\n        id\n        media_type\n      }\n    }\n  }\n    \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($country: Int!, $state: Int!, $city: Int!, $illumination: String = \"\", $media_type: Int!, $_gt: date = \"\", $_eq: String = \"false\") {\n    Inventory_Master(where: {Country: {_eq: $country}, State: {_eq: $state}, City_Village: {_eq: $city}, Illumination: {_eq: $illumination}, Media_Type: {_eq: $media_type}, AvailabilityTo: {_lt: $_gt}, isDeleted: {_eq: $_eq}}) {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      hoarding_insurance\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      id\n      country {\n        id\n        name\n      }\n      city {\n        id\n        name\n      }\n      state {\n        id\n        name\n      }\n      media_type_master {\n        id\n        media_type\n      }\n    }\n  }\n    \n`\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\n// const DELETE_INQUIRY = gql`\n// mutation MyMutation($id: Int!) {\n//   delete_inquiry_master_by_pk(id: $id) {\n//     id\n//   }\n// }\n// `\n\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    inquiry_master(where: {isDeleted: {_eq: $_eq}}){\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\n\nexport default function Inquiry_Master() {\n    //variables\n    var data_country = \"\";\n    var data_state = \"\";\n    var data_city = \"\";\n    //States\n    const [selected,setSelected] = useState();\n    const [showhide, setShowhide] = useState('hidden');\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [country, setCountry] = useState();\n    const [state, setState] = useState();\n    const [city, setCity] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    // const [district, setDistrict] = useState();\n    // const [taluka, setTaluka] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n\n    //Form states\n    const [sol, setSol] = useState();\n    const [name, setName] = useState();\n    const [number, setNumber] = useState();\n    const [emailid, setEmailid] = useState();\n    const [whatsappNumber, setWhatsappNumber] = useState();\n    const [startDate, setStartDate] = useState();\n    \n    const [media_type, setMedia_type] = useState();\n    const [status, setStatus] = useState();\n    //Modal states\n    const [modalId, setModalId] = useState();\n    const [modalSol, setModalSol] = useState();\n    const [modalName, setModalName] = useState();\n    const [modalNumber, setModalNumber] = useState();\n    const [modalEmailid, setModalEmailid] = useState();\n    const [modalWhatsappNumber, setModalWhatsappNumber] = useState();\n    const [modalStartDate, setModalStartDate] = useState();\n\n    const [modalMedia_type, setModalMedia_type] = useState();\n    const [modalStatus, setModalStatus] = useState();\n    const [modalLocation, setModalLocation] = useState();\n    //Queries\n    const [insert_inquiry] = useMutation(INSERT_INQUIRY);\n    const [update_inquiry] = useMutation(UPDATE_INQUIRY);\n    const [delete_inquiry] = useMutation(DELETE_INQUIRY);\n    const read_media = useQuery(READ_MEDIA);\n    const read_countries = useQuery(READ_COUNTRIES);\n    const read_states = useQuery(READ_STATES);\n    const read_cities = useQuery(READ_CITIES);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n    const [loadInventoryAll, invData] = useLazyQuery(SEARCH_INVENTORYALL);\n\n    //Loader\n    if (read_media.loading|| read_inquiry.loading || read_inventory.loading || read_countries.loading || read_states.loading || read_cities.loading || loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onCountryChange = (country_data) => {\n        setCountry(country_data.id)\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n    }\n    const onCityChange = (city_data) => {\n        setCity(city_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        //console.log(e.target.value)\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        //console.log(e.target.value);\n        setSearchDate(e.target.value);\n    }\n    // const onDistrictChange = (district_data) => {\n    //     setDistrict(district_data.District);\n    // }\n    // const onTalukaChange = (taluka_data) => {\n    //     setTaluka(taluka_data.Taluka);\n    // }\n    const onLocationChange = (e) => {\n        //console.log(e.target[1].value);\n\n        //console.log(e.target.value);\n        var inv = data.Inventory_Master[0]\n        const filteredInventory = data.Inventory_Master.filter((location) => location.Location.includes(e.target.value))\n        setInventoryData(filteredInventory[0]);\n        //console.log(filteredInventory[0].id)\n        setLocation(filteredInventory[0].id);\n    }\n    const onSearch = (e) => {\n        setShowhide(\"visible\");\n        e.preventDefault();\n        //console.log(district);\n        // loadInventory({variables:{country:country,state:state,city:city,district:district,taluka:taluka,location:location,size:size,illumination:illumination,media:media}})\n        if(illumination===\"ALL\")\n        {\n            loadInventoryAll({ variables: { country: country, state: state, city: city, illumination: \"\", media_type: searchMediaType, _gt: searchDate } })   \n        }\n        else\n        {\n            loadInventory({ variables: { country: country, state: state, city: city, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        }\n    }\n    const onFormSOLChange = (e) => {\n        setSol(e.target.value);\n    }\n    const onFormNameChange = (e) => {\n        setName(e.target.value)\n    }\n    const onFormNumberChange = (e) => {\n        setNumber(e.target.value)\n    }\n    const onFormEmailIdChange = (e) => {\n        setEmailid(e.target.value)\n    }\n    const onFormWhatsappNumberChange = (e) => {\n        setWhatsappNumber(e.target.value);\n    }\n    const onStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    }\n    // const onEndDateChange = (e) => {\n    //     setEndDate(e.target.value);\n    // }\n    // const onTask_sheetChange = (e) => {\n    //     setTask_sheet(e.target.value);\n    // }\n    // const onDowntimeChange = (e) => {\n    //     setDowntime(e.target.value);\n    // }\n    // const onWork_orderChange = (e) => {\n    //     setWork_order(e.target.value);\n    // }\n    const onMediaChange = (e) => {\n        setMedia_type(e.target.value);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.target.value);\n    }\n    //Modal Statets\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value)\n    }\n    const onModalSOLChange = (e) => {\n        setModalSol(e.target.value);\n    }\n    const onModalNameChange = (e) => {\n        setModalName(e.target.value)\n    }\n    const onModalNumberChange = (e) => {\n        setModalNumber(e.target.value)\n    }\n    const onModalEmail_idChange = (e) => {\n        setModalEmailid(e.target.value)\n    }\n    const onModalWhatsappNumberChange = (e) => {\n        setModalWhatsappNumber(e.target.value);\n    }\n    const onModalLocationChange = (e) => {\n        setModalLocation(e.target.value);\n    }\n    const onModalStartDateChange = (e) => {\n        setModalStartDate(e.target.value);\n    }\n    // const onModalEndDateChange = (e) => {\n    //     setModalEndDate(e.target.value);\n    // }\n    // const onModalTask_sheetChange = (e) => {\n    //     setModalTask_sheet(e.target.value);\n    // }\n    // const onModalDowntimeChange = (e) => {\n    //     setModalDowntime(e.target.value);\n    // }\n    // const onModalWork_orderChange = (e) => {\n    //     setModalWork_order(e.target.value);\n    // }\n    const onModalMediaChange = (e) => {\n        setModalMedia_type(e.target.value);\n    }\n    const onModalStatusChange = (e) => {\n        setModalStatus(e.target.value);\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        for(var i=0;i<selected.length;i++)\n        {   \n            //selected[i];\n            console.log(selected[i]);\n            insert_inquiry({ variables: { sol: sol, name: name, number: number, email_id: emailid, whatsapp_number: whatsappNumber, inventory:selected[i] , start_date: startDate, media_type: media_type, status: status } })\n        }\n        \n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        //console.log(row)\n        handleShow();\n        setModalId(row.id);\n        setModalSol(row.sol);\n        setModalName(row.name);\n        setModalNumber(row.number);\n        setModalEmailid(row.email_id);\n        setModalWhatsappNumber(row.whatsapp_number);\n        setModalStartDate(row.start_date);\n        \n        setModalMedia_type(row.media_type);\n        setModalStatus(row.status);\n        setModalLocation(row.Inventory_Master.id)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_inquiry({ variables: { id: modalId, sol: modalSol, name: modalName, number: modalNumber, email_id: modalEmailid, whatsapp_number: modalWhatsappNumber, inventory: modalLocation, start_date: modalStartDate,  media_type: modalMedia_type, status: modalStatus } })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_inquiry({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    // const onDownload = (row) => {\n    //     const entries = Object.entries(row);\n\n    //     console.log(entries);\n    //     //console.log(row.Inventory_Master);\n    //     const data = entries\n    //     const fileName = 'download'\n    //     const exportType = 'xls'\n    //     exportFromJSON({ data, fileName, exportType })\n    // }\n    const columns1 = [\n        {\n            field:'id',\n            headerName:'Id',\n            width:160,\n        },\n        {\n            field: 'Country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.country.name;\n            }\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.state.name;\n            }\n        },\n        {\n            field: 'City_Village',\n            headerName: 'City_Village',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n        { \n            field: 'District', \n            headerName: 'District', \n            width: 200 \n        },\n        { \n            field: 'Taluka', \n            headerName: 'Taluka', \n            width: 200 \n        },\n        { \n            field: 'Location', \n            headerName: 'Location', \n            width: 200 \n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        { \n            field: 'Illumination', \n            headerName: 'Illumination', \n            width: 200 \n        },\n        { \n            field: 'Width', \n            headerName: 'Width', \n            width: 200 \n        },\n        { \n            field: 'Height', \n            headerName: 'Height', \n            width: 200 \n        },\n        { \n            field: 'NoofDisplay', \n            headerName: 'No Of Display', \n            width: 200 \n        },\n        { \n            field: 'Totalsqft', \n            headerName: 'Total Sq ft', \n            width: 200 \n        },\n        { \n            field: 'DrpmRate', \n            headerName: 'DrpmRate', \n            width: 200 \n        },\n        { \n            field: 'DisplayRatePM', \n            headerName: 'DisplayRatePM', \n            width: 200 \n        },\n        { \n            field: 'OtpcRate', \n            headerName: 'OneTimePrintingCostRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimePrintingCost', \n            headerName: 'OneTimePrintingCost', \n            width: 200 \n        },\n        { \n            field: 'OtmcRate', \n            headerName: 'OneTimeMountingCostRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimeMountingCost', \n            headerName: 'OneTimeMountingCost', \n            width: 200 \n        },\n        { \n            field: 'Total', \n            headerName: 'Total', \n            width: 200 \n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'Booking From',\n            width: 200\n        },\n        { \n            field: 'AvailabilityTo', \n            headerName: 'Booking To', \n            width: 200 \n        },\n    ]\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'sol',\n            headerName: 'Source Of Lead',\n            width: 160\n        },\n        {\n            field: 'name',\n            headerName: 'Name',\n            width: 160\n        },\n        {\n            field: 'number',\n            headerName: 'Number',\n            width: 160,\n        },\n        {\n            field: 'email_id',\n            headerName: 'Email Id',\n            width: 160,\n        },\n        {\n            field: 'whatsapp_number',\n            headerName: 'Whatsapp Number',\n            width: 190\n        },\n        {\n            field: 'start_date',\n            headerName: 'Start Date',\n            width: 190\n        },\n        \n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        {/* <button onClick={() => onDownload(params.row)} data-toggle=\"tooltip\" title=\"Download\" type=\"button\" className=\"btn btn-primary\"  ><i className=\"bi bi-pencil-fill\"></i></button> */}\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_inquiry.data.inquiry_master;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    const emptyarr = [\n        {\n            id:\"\",\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            City_Village: \"\",\n            Country: \"\",\n            DisplayRatePM: \"\",\n            District: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            State: \"\",\n            Taluka: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            city:{\n                id: \"\",\n                name: \"\"\n            },\n            country:{\n                id: \"\",\n                name: \"\"\n            },\n            media_type_master:{\n                id: \"\",\n                media_type: \"\"\n            },\n            state:{\n                id: \"\",\n                name: \"\"\n            }\n        }\n    ]\n    var rows1 = emptyarr;\n    //console.log(data);\n    if(illumination===\"ALL\")\n    {\n        if(invData.data)\n        {\n        rows1=invData.data.Inventory_Master;\n        }\n    }\n    else\n    {\n        if(data)\n        {\n        rows1=data.Inventory_Master;\n        }\n    }\n    \n    // const onSelectionModelChange=(ids) => {\n    //     const selectedIDs = new Set(ids);\n    //     const selectedRowData = rows.filter((row) =>\n    //       selectedIDs.has(row.id.toString())\n    //     );\n    //     //console.log(selectedRowData);\n    //     setSelected(selectedRowData)\n    //     console.log(selected);\n    //   }\n    //console.log(data.Inventory_Master);\n    //console.log(data);\n    return (\n        <div>\n            \n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Edit Customer</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">ID</label>\n                                    <input defaultValue={modalId} onChange={onModalIdChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Name</label>\n                                    <input defaultValue={modalName} onChange={onModalNameChange} className=\"form-control mt-1\" name=\"name\" type=\"text\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Number</label>\n                                    <input defaultValue={modalNumber} onChange={onModalNumberChange} className=\"form-control mt-1\" name=\"contact_person\" type=\"text\" required pattern=\"[789][0-9]{9}\" title=\"Please enter Alphabets.\" />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Email ID</label>\n                                    <input defaultValue={modalEmailid} onChange={onModalEmail_idChange} className=\"form-control mt-1\" name=\"email_id\" type=\"tel\" required pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email\" />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Whatsapp Number</label>\n                                    <input defaultValue={modalWhatsappNumber} onChange={onModalWhatsappNumberChange} className=\"form-control mt-1\" name=\"whatsappNumber\" type=\"number\" pattern=\"[789][0-9]{9}\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Source Of Lead</label>\n                                    <input defaultValue={modalSol} onChange={onModalSOLChange} className=\"form-control mt-1\" required />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Location</label>\n                                    {/* <input readonly defaultValue={modalLocation} onChange={onModalLocationChange} className=\"form-control mt-1\" required /> */}\n                                    <select onChange={onModalLocationChange} className=\"form-control\" defaultValue={modalLocation}>\n                                        <option>Select...</option>\n                                        {read_inventory.data.Inventory_Master.map((inventory) => (\n                                            <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Date</label>\n                                    <input type=\"date\" readonly defaultValue={modalStartDate} onChange={onModalStartDateChange} className=\"form-control mt-1\" required />\n                                </div>\n                                {/* <div className=\"field col-md-6\">\n                                    <label className=\"required\">End Date</label>\n                                    <input type=\"date\" readonly defaultValue={modalEndDate} onChange={onModalEndDateChange} className=\"form-control mt-1\" required />\n                                </div> */}\n                            </div>\n                            {/* <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Task Sheet</label>\n                                    <input defaultValue={modalTask_sheet} onChange={onModalTask_sheetChange} className=\"form-control mt-1\" name=\"task_sheet\" type=\"text\" required title=\"Please enter task sheet.\" />\n                                </div>\n                                <div className=\"field col-md-6\">\n                                    <label className=\"required\">Downtime</label>\n                                    <input defaultValue={modalDowntime} onChange={onModalDowntimeChange} className=\"form-control mt-1\" name=\"downtime\" type=\"tel\" required title=\"Please enter downtime\" />\n                                </div>\n                            </div> */}\n                            <div className=\"row\">\n                                {/* <div className=\"field col-md-6\">\n                                    <label className=\"required\">Work Order</label>\n                                    <input defaultValue={modalWork_order} onChange={onModalWork_orderChange} className=\"form-control mt-1\" name=\"work_order\" type=\"text\" required title=\"Please enter work order.\" />\n                                </div> */}\n                                <div className=\"field col-md-6\">\n                                    <label>Media Type</label>\n                                    <select defaultValue={modalMedia_type} className=\"form-control\" onChange={onModalMediaChange}>\n                                        <option>Select...</option>\n                                        {read_media.data.media_type_master.map((media) => (\n                                            <option key={media.id} value={media.id}>{media.media_type}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"field col-md-6\">\n                                    <label>Status</label>\n                                    <select defaultValue={modalStatus} onChange={onModalStatusChange} className=\"form-control\">\n                                        <option>Select...</option>\n                                        <option>Completed</option>\n                                        <option>In Process</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <br />\n                            <div className=\"field\">\n                                <button className=\"btn btn-primary\" style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                            </div>\n                        </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <form  className=\"form-group\" padding=\"2px\">\n                <h4 className=\"text-center\">INQUIRY MASTER</h4>\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Source Of Lead</label>\n                            <input placeholder=\"enter source of lead\" type=\"text\" name=\"form_sol\" onChange={onFormSOLChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter source of lead.\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Name</label>\n                            <input placeholder=\"enter customer name\" type=\"text\" name=\"form_name\" onChange={onFormNameChange} className=\"form-control mt-1\" pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter customer name.\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Number</label>\n                            <input placeholder=\"enter customer number\" type=\"tel\" name=\"form_number\" onChange={onFormNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter valid mobile no\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Email ID</label>\n                            <input placeholder=\"enter email id\" type=\"email\" name=\"form_email_id\" onChange={onFormEmailIdChange} className=\"form-control mt-1\" pattern=\"^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$\" title=\"Please enter valid email address\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Whatsapp Number</label>\n                            <input placeholder=\"enter whatsapp number\" type=\"text\" name=\"form_whatsapp_no\" onChange={onFormWhatsappNumberChange} className=\"form-control mt-1\" pattern=\"[789][0-9]{9}\" title=\"Please enter whatsapp\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Start Date</label>\n                            <input placeholder=\"enter start date\" type=\"date\" name=\"start_date\" onChange={onStartDateChange} className=\"form-control mt-1\" title=\"Please enter start date\" />\n                        </div>\n                    </div><br />\n                    {/* <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">End Date</label>\n                            <input placeholder=\"enter end date\" type=\"date\" name=\"start_date\" onChange={onEndDateChange} className=\"form-control mt-1\" title=\"Please enter end date\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Task Sheet</label>\n                            <input placeholder=\"enter task sheet\" type=\"text\" name=\"task_sheet\" onChange={onTask_sheetChange} className=\"form-control mt-1\" title=\"Please enter task sheet\" />\n                        </div>\n                    </div><br /> */}\n                    {/* <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Downtime</label>\n                            <input placeholder=\"enter downtime\" type=\"text\" name=\"downtime\" onChange={onDowntimeChange} className=\"form-control mt-1\" title=\"Please enter downtime\" />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Work Order</label>\n                            <input placeholder=\"enter work order\" type=\"text\" name=\"work_order\" onChange={onWork_orderChange} className=\"form-control mt-1\" title=\"Please enter work order\" />\n                        </div>\n                    </div><br /> */}\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Media Type</label>\n                            {/* <input placeholder=\"enter media type\" type=\"text\" name=\"media_type\" onChange={onDowntimeChange} className=\"form-control mt-1\" title=\"Please enter media type\" /> */}\n                            <select className=\"form-control\" onChange={onMediaChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div><br />\n                        <div className=\"field col-md-6\">\n                            <label>Status</label>\n                            <select className=\"form-control\" onChange={onStatusChange}>\n                                <option>Select...</option>\n                                <option>Completed</option>\n                                <option>In Process</option>\n                            </select>\n                        </div>\n                    </div>\n                    \n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"8%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n                    \n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"country\" className=\"form-control mt-1\" placeholder=\"enter country\" required>\n                        <option>--SELECT--</option>\n                        {read_countries.data.countries.map(country => (\n                            <option key={country.id} value={country.id}>{country.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"state\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                        <option>--SELECT--</option>\n                        {read_states.data.states.map(state => (\n                            <option key={state.id} value={state.id}>{state.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"cities\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                        <option>--SELECT--</option>\n                        {read_cities.data.cities.map(city => (\n                            <option key={city.id} value={city.id}>{city.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                                <option>ALL</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n                        {/* <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div> */}\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'21%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\n                    </div>\n                    <br />\n                    {/* <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <select className=\"form-control\" onChange={onLocationChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.Location}>{inventory.Location}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\"></div>\n                    </div><br /> */}\n\n                </form>\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={rows1}\n                        columns={columns1}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                        checkboxSelection     \n                        onSelectionModelChange={itm => setSelected(itm)}\n                    />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onFormSubmit} className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type=\"reset\"style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n                    </div>\n                </div>\n                {/* <div style={{ height: 500, width: '100%' }}>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Country</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.country.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>State</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.state.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>City</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.city.name} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>District</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.District} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Taluka</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Taluka} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Location</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Location} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Media</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.media_type_master.media_type} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Illumination} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Width</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Width} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Height</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Height} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>No Of Display</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.NoofDisplay} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Total sq ft</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Totalsqft} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DrpmRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Display Rate PM</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DisplayRatePM} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtpcRate} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>One Time Printing Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimePrintingCost} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtmcRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>One Time Mounting Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimeMountingCost} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Total</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Total} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability From</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityFrom} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability To</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityTo} readOnly />\n                        </div>\n                    </div>\n                    <CSVLink data={data === undefined ? '' : data.Inventory_Master}>Download</CSVLink>\n                </div> */}\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState, useRef } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useLazyQuery, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport axios from 'axios';\nimport { ContactSupportOutlined } from '@material-ui/icons';\n\n\nconst READ_INVENTORY = gql`\nquery MyQuery($_eq: String = \"false\"){\n    Inventory_Master(where: {isDeleted: {_eq: $_eq}}){\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n  \n`\nconst SEARCH_QUICK_MEDIA = gql`\nquery MyQuery($_eq: String = \"Booked\", $mobile_no: String!, $_eq1: String = \"false\") {\n    quick_media(where: {mobile_no: {_eq: $mobile_no}, inquiry_master: {Inventory_Master: {Status: {_neq: $_eq}}}, isDeleted: {_eq: $_eq1}}) {\n      inquiry\n      mobile_no\n      proposal_no\n      id\n      inquiry_master {\n        Inventory_Master {\n          Location\n        }\n      }\n    }\n  }\n    \n  \n  \n`\nconst SEARCH_INQUIRY = gql`\nquery MyQuery($number: String!, $_eq: String = \"false\") {\n    inquiry_master(where: {number: {_eq: $number}, isDeleted: {_eq: $_eq}}) {\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimePrintingCost\n        OneTimeMountingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      email_id\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n    }\n  }\n  \n`\nconst READ_INQUIRY = gql`\nquery MyQuery($_eq: String = \"false\"){\n    inquiry_master(where: {isDeleted: {_eq: $_eq}}){\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimePrintingCost\n        OneTimeMountingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      email_id\n      \n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n    }\n  }\n  \n`\n\nconst READ_LABOR = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    labor_master(where: {isDeleted: {_eq: $_eq}}){\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      name\n      pan\n    }\n  }\n`\n\n\nconst Read_Printer = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 17}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }  \n`\nconst Read_Mounter = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 18}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  \n`\nconst Read_Electrician = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 20}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }\n  \n  \n`\nconst Read_Designer = gql`\nsubscription MySubscription($_eq: String = \"false\") {\n    labor_master(where: {labor_type: {_eq: 19}, isDeleted: {_eq: $_eq}}) {\n      id\n      labor_type\n      name\n    }\n  }  \n  `\nconst INSERT_BOOKING = gql`\nmutation MyMutation($Confirmation: String!, $Designer: Int = 10, $Electrician: Int = 10, $End_Date_Photo: String = \"\", $Monitoring_Photo: String = \"\", $Mounter: Int = 10, $PO: String = \"\", $Printer: Int = 10, $Shortlisted: String!, $Start_Date_Photo: String = \"\",$Start_Date:date!,$End_Date:date!,$Sites:Int!) {\n    insert_Booking_Calender_one(object: {Confirmation: $Confirmation, Designer: $Designer, Electrician: $Electrician, End_Date_Photo: $End_Date_Photo, Monitoring_Photo: $Monitoring_Photo, Mounter: $Mounter, PO: $PO, Printer: $Printer, Shortlisted: $Shortlisted, Start_Date_Photo: $Start_Date_Photo,Start_Date:$Start_Date,End_Date:$End_Date,Sites:$Sites}) {\n      id\n    }\n  }\n`\n\nconst READ_BOOKING = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    Booking_Calender(where: {isDeleted: {_eq: $_eq}}){\n      Confirmation\n      Designer\n      Electrician\n      End_Date\n      End_Date_Photo\n      Monitoring_Photo\n      Mounter\n      PO\n      Printer\n      Shortlisted\n      Sites\n      Start_Date\n      Start_Date_Photo\n      id\n      laborMasterByElectrician {\n        name\n        id\n      }\n      laborMasterByMounter {\n        id\n        name\n      }\n      laborMasterByPrinter {\n        id\n        name\n      }\n      labor_master {\n        id\n        name\n      }\n      quick_medium {\n        id\n        inquiry\n        mobile_no\n        proposal_no\n        inquiry_master {\n          Inventory_Master {\n            id\n            Location\n          }\n          email_id\n          id\n          inventory\n          media_type\n        }\n      }\n    }\n  }\n     \n`\n\nconst UPDATE_BOOKING = gql`\nmutation MyMutation($id: Int!, $Confirmation: Int = 10, $Designer: Int = 10, $Electrician: Int = 10, $End_Date_Photo: String = \"\", $Monitoring_Photo: String = \"\", $Mounter: Int = 10, $PO: String = \"\", $Printer: Int = 10, $Shortlisted: Int = 10, $Start_Date_Photo: String = \"\") {\n    update_Booking_Calender_by_pk(pk_columns: {id: $id}, _set: {Confirmation: $Confirmation, Designer: $Designer, Electrician: $Electrician, End_Date_Photo: $End_Date_Photo, Monitoring_Photo: $Monitoring_Photo, Mounter: $Mounter, PO: $PO, Printer: $Printer, Shortlisted: $Shortlisted, Start_Date_Photo: $Start_Date_Photo}) {\n      id\n    }\n  }\n`\n\n\n// const Update_Inventory=gql`\n// mutation MyMutation($Status: String = \"\") {\n//     update_Inventory_Master_by_pk(pk_columns: {id: 0}, _set: {Status: $Status}) {\n//       Status\n//     }\n//   }\n// `\n\n\n\n\n// const DELETE_BOOKING = gql`\n// mutation MyMutation($id: Int!) {\n//     delete_Booking_Calender_by_pk(id: $id) {\n//       id\n//     }\n//   }  \n// `\n\nconst DELETE_BOOKING = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_Booking_Calender_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\n\nconst UPDATE_INVENTORY = gql`\nmutation MyMutation($id: Int!, $AvailabilityFrom: date=\"2021-11-23\", $AvailabilityTo: date=\"2021-11-23\",$Status:String=\"Booked\",$BookedBy:String!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {AvailabilityFrom: $AvailabilityFrom, AvailabilityTo: $AvailabilityTo,Status:$Status,BookedBy:$BookedBy}) {\n      AvailabilityFrom\n      AvailabilityTo\n      Status\n      BookedBy\n    }\n  }\n`\nconst READ_QUICK_MEDIA = gql`\nquery MyQuery($_eq: String = \"false\"){\n    quick_media(where: {isDeleted: {_eq: $_eq}}){\n      inquiry\n      id\n      mobile_no\n      inquiry_master {\n        Inventory_Master {\n          Location\n        }\n      }\n    }\n  }\n  `\nconst GET_DATA = gql`\nquery MyQuery($id: Int = 0, $_eq1: String = \"false\") {\n    quick_media(where: {id: {_eq: $id}, isDeleted: {_eq: $_eq1}}) {\n      inquiry_master {\n        Inventory_Master {\n          id\n        }\n      }\n    }\n  }\n  \n  `\n\nconst UPDATE_BOOKING_ON_DELETE = gql`\n  mutation MyMutation($id: Int!, $BookedBy: String=\"\") {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {BookedBy: $BookedBy}) {\n      BookedBy\n    }\n  }  \n  `\nconst UPDATE_INQUIRY = gql`\n  mutation MyMutation($id: Int = 0, $status: String = \"\") {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {status: $status}) {\n      id\n    }\n  }\n  `\n\nfunction Booking() {\n    //States\n    const [selected, setSelected] = useState();\n    const [get_data, setGet_data] = useState();\n    const [username, setUsername] = useState();\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [shortlisted, setShortlisted] = useState();\n    const [confirmation, setConfirmation] = useState();\n    const [PO, setPO] = useState();\n    const [designer, setDesigner] = useState();\n    const [printer, setPrinter] = useState();\n    const [mounter, setMounter] = useState();\n    const [electrician, setElectrician] = useState();\n    const [startDatePhoto, setStartDatePhoto] = useState();\n    const [monitoringPhoto, setMonitoringPhoto] = useState();\n    const [endDatePhoto, setEndDatePhoto] = useState();\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [Booked, setBooked] = useState();\n    //Modal states\n    const [modalId, setModalId] = useState();\n    const [modalShortlisted, setModalShortlisted] = useState();\n    const [modalConfirmation, setModalConfirmation] = useState();\n    const [modalPO, setModalPO] = useState();\n    const [modalDesigner, setModalDesigner] = useState();\n    const [modalPrinter, setModalPrinter] = useState();\n    const [modalMounter, setModalMounter] = useState();\n    const [modalElectrician, setModalElectrician] = useState();\n    const [modalStartDatePhoto, setModalStartDatePhoto] = useState();\n    const [modalMonitoringPhoto, setModalMonitoringPhoto] = useState();\n    const [modalEndDatePhoto, setModalEndDatePhoto] = useState();\n    const [modalStartDate, setModalStartDate] = useState();\n    const [modalEndDate, setModalEndDate] = useState();\n    //Queries\n    const [update_inventory] = useMutation(UPDATE_INVENTORY);\n    const [insert_booking] = useMutation(INSERT_BOOKING);\n    const [update_booking] = useMutation(UPDATE_BOOKING);\n    const [delete_booking] = useMutation(DELETE_BOOKING);\n    const [update_booking_on_delete] = useMutation(UPDATE_BOOKING_ON_DELETE);\n    const [update_inquiry] = useMutation(UPDATE_INQUIRY);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useQuery(READ_INQUIRY);\n    const read_labor = useSubscription(READ_LABOR);\n    const read_booking = useSubscription(READ_BOOKING);\n    const read_printer = useSubscription(Read_Printer);\n    const read_electrician = useSubscription(Read_Electrician);\n    const read_mounter = useSubscription(Read_Mounter);\n    const read_designer = useSubscription(Read_Designer);\n    const read_quick_media = useQuery(READ_QUICK_MEDIA);\n    const [get_inventory, get_return_data] = useLazyQuery(GET_DATA, {\n        onCompleted: data => {\n            // console.log('data ', data);\n            setGet_data(data);\n        }\n    });\n\n    const [search_quick_media, { loading, error, data }] = useLazyQuery(SEARCH_QUICK_MEDIA)\n    // const [update_Inventory]=useQuery(Update_Inventory)\n    if (read_booking.loading || read_inventory.loading || read_inquiry.loading || read_labor.loading || loading || read_designer.loading || read_electrician.loading || read_printer.loading || read_mounter.loading || read_quick_media.loading || get_return_data.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    //Functions\n    const onShortlistedChange = (e) => {\n        // console.log(e.target.value)\n        setShortlisted(e.target.value);\n        // console.log(shortlisted)\n    }\n    const onConfirmationChange = (e) => {\n        setConfirmation(e.target.value);\n    }\n    const onPOChange = (e) => {\n        setPO(e.target.value);\n    }\n    const onDesignerChange = (e) => {\n        // console.log(e.target.value)\n        setDesigner(e.target.value);\n    }\n    const onPrinterChange = (e) => {\n        setPrinter(e.target.value);\n    }\n    const onMounterChange = (e) => {\n        setMounter(e.target.value);\n    }\n    const onElectricianChange = (e) => {\n        setElectrician(e.target.value);\n    }\n    const onStartDatePhotoChange = (e) => {\n        // console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setStartDatePhoto(dataimage1.data);\n            })\n\n    }\n    const onMonitoringPhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setMonitoringPhoto(dataimage1.data);\n            })\n\n    }\n    const onEndDatePhotoChange = (e) => {\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setEndDatePhoto(dataimage1.data);\n            })\n    }\n    const onStartDateChange = (e) => {\n        setStartDate(e.target.value);\n    }\n    const onEndDateChange = (e) => {\n        setEndDate(e.target.value);\n    }\n    // const onStatusChange=(e)=>{\n    //     setBooked(e.target.value);\n    // }\n    //Modal Functions\n    const onModalIdChange = (e) => {\n        setModalId(e.target.value);\n    }\n    const onModalShortlistedChange = (e) => {\n        setModalShortlisted(e.target.value);\n    }\n    const onModalConfirmationChange = (e) => {\n        setModalConfirmation(e.target.value);\n    }\n    const onModalPOChange = (e) => {\n        setModalPO(e.target.value);\n    }\n    const onModalDesignerChange = (e) => {\n        //console.log(e.target.value);\n        setModalDesigner(e.target.value);\n    }\n    const onModalPrinterChange = (e) => {\n        setModalPrinter(e.target.value);\n    }\n    const onModalMounterChange = (e) => {\n        setModalMounter(e.target.value);\n    }\n    const onModalElectricianChange = (e) => {\n        setModalElectrician(e.target.value);\n    }\n    const onModalStartDatePhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalStartDatePhoto(dataimage1.data);\n            })\n        //setModalStartDatePhoto(e.target.value);\n    }\n    const onModalMonitoringPhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalMonitoringPhoto(dataimage1.data);\n            })\n    }\n    const onModalEndDatePhotoChange = (e) => {\n        //console.log(e.target.files[0])\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"name\",\n            e.target.files[0],\n            e.target.files[0].name\n        );\n\n        // Details of the uploaded file\n        //console.log(this.state.selectedFile);\n\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://velocepro.in/bharti_expo_php/bharatiimg.php\", formData)\n            .then((dataimage1) => {\n                setModalEndDatePhoto(dataimage1.data);\n            })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(confirmation);\n        if (shortlisted === \"Yes\" && confirmation === \"Yes\") {\n            setBooked('Booked');\n            for (var i = 0; i < selected.length; i++) {\n                console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, AvailabilityFrom: startDate, AvailabilityTo: endDate, Status: \"Booked\", BookedBy: user } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n        else if (shortlisted === \"Yes\" && confirmation === \"No\") {\n            setBooked('Hold');\n            for (var i = 0; i < selected.length; i++) {\n                console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, AvailabilityFrom: startDate, AvailabilityTo: endDate, Status: \"Hold\", BookedBy: user } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n        //if(shortlisted===\"No\" && confirmation===\"No\")\n        else {\n            setBooked('Immediate');\n            for (var i = 0; i < selected.length; i++) {\n                console.log(user)\n                console.log(selected[i].inquiry_master.inventory);\n                insert_booking({\n                    variables: {\n                        Shortlisted: shortlisted, Confirmation: confirmation, Sites: selected[i].id, PO: PO, Designer: designer,\n                        Printer: printer, Mounter: mounter, Electrician: electrician, Start_Date_Photo: startDatePhoto, Monitoring_Photo: monitoringPhoto, End_Date_Photo: endDatePhoto, Start_Date: startDate, End_Date: endDate\n                    }\n                })\n                update_inventory({ variables: { id: selected[i].inquiry_master.inventory, Status: \"Immediate\", BookedBy: \"\" } })\n                update_inquiry({ variables: { id: selected[i].inquiry_master.id, status: \"Completed\" } })\n            }\n            toast.configure();\n            toast.success('Successfully Inserted')\n        }\n    }\n    const onEdit = (row) => {\n        handleShow();\n        //console.log(row)\n        setModalId(row.id);\n        setModalShortlisted(row.Shortlisted);\n        setModalConfirmation(row.Confirmation);\n        setModalPO(row.PO);\n        setModalDesigner(row.Designer);\n        setModalPrinter(row.Printer);\n        setModalMounter(row.Mounter);\n        setModalElectrician(row.Electrician);\n        setModalStartDatePhoto(row.Start_Date_Photo);\n        setModalEndDatePhoto(row.End_Date_Photo);\n        setModalMonitoringPhoto(row.Monitoring_Photo)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_booking({ variables: { id: modalId, Shortlisted: modalShortlisted, Confirmation: modalConfirmation, PO: modalPO, Designer: modalDesigner, Printer: modalPrinter, Mounter: modalMounter, Electrician: modalElectrician, Start_Date_Photo: modalStartDatePhoto, End_Date_Photo: modalEndDatePhoto, Monitoring_Photo: modalMonitoringPhoto } });\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        setBooked('');\n        delete_booking({ variables: { id: id } })\n        update_booking_on_delete({ variables: { id: id, BookedBy: Booked } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const onsearch = (e) => {\n        e.preventDefault();\n        //console.log(e.target[0].value)\n        search_quick_media({ variables: { mobile_no: e.target[0].value } })\n    }\nconsole.log(read_electrician.data);\n    const columns1 = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n        {\n            field: 'proposal_no',\n            headerName: 'Proposal No',\n            width: 160,\n        },\n        {\n            field: 'mobile_no',\n            headerName: 'Mobile No',\n            width: 160,\n        },\n        {\n            field: 'Location',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.inquiry_master.Inventory_Master.Location;\n            }\n        },\n    ]\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 160,\n        },\n\n        {\n            field: 'PO',\n            headerName: 'PO',\n            width: 160,\n        },\n        {\n            field: 'Designer',\n            headerName: 'Designer',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Printer',\n            headerName: 'Printer',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Mounter',\n            headerName: 'Mounter',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Electrician',\n            headerName: 'Electrician',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'Start_Date_Photo',\n            headerName: 'Start Date Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.Start_Date_Photo}`} />,\n        },\n        {\n            field: 'Monitoring_Photo',\n            headerName: 'Monitoring Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.Monitoring_Photo}`} />,\n        },\n        {\n            field: 'End_Date_Photo',\n            headerName: 'End Date Photo',\n            width: 250,\n            renderCell: (params) => <img width=\"800\" height=\"100\" src={`https://velocepro.in/bharti_expo_images/${params.row.End_Date_Photo}`} />,\n        },\n        {\n            field: 'Start_Date',\n            headerName: 'Start Date',\n            width: 160\n        },\n        {\n            field: 'End_Date',\n            headerName: 'End Date',\n            width: 160\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = read_booking.data.Booking_Calender;\n    const emptyarr = [\n        {\n            id: \"\",\n            proposal_no: \"\",\n            mobile_no: \"\",\n            inquiry_master: {\n                Inventory_Master: {\n                    Location: \"\"\n                }\n            }\n        }\n    ]\n    var rows1 = emptyarr\n    if (data) {\n        rows1 = data.quick_media;\n        //console.log(rows1)\n    }\n\n\n    const user = localStorage.getItem(\"userdata\");\n    //console.log(user);\n    let newData1 = []\n    rows1.map((item, index) => {\n        newData1.push({ sno: index + 1, ...item })\n    })\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    //console.log(data === undefined ?'':data.inquiry_master[0])\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Booking</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form className=\"form-group\" onSubmit={onModalFormSubmit}>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input value={modalId} className=\"form-control mt-1\" onChange={onModalIdChange} name=\"id\" type=\"text\" required />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Shortlisted</label>\n                                {/* <select value={modalShortlisted} className=\"form-control\" onChange={onModalShortlistedChange}>\n                                    <option>Select...</option>\n                                    {read_quick_media.data.quick_media.map((shortlist) => (\n                                        <option key={shortlist.id} value={shortlist.id}>{shortlist.inquiry_master.Inventory_Master.Location}</option>\n                                    ))}\n                                </select> */}\n                                <select onChange={onModalShortlistedChange} value={modalShortlisted} className=\"form-control\">\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Confirmation</label>\n                                {/* <select onChange={onModalConfirmationChange} value={modalConfirmation} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_inventory.data.Inventory_Master.map((confirmation) => (\n                                        <option key={confirmation.id} value={confirmation.id}>{confirmation.Location}</option>\n                                    ))}\n                                </select> */}\n                                <select onChange={onModalConfirmationChange} value={modalConfirmation} className=\"form-control\">\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">PO</label>\n                                <input onChange={onModalPOChange} value={modalPO} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Designer</label>\n                                <select onChange={onModalDesignerChange} value={modalDesigner} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_designer.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Mounter</label>\n                                <select onChange={onModalMounterChange} value={modalMounter} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_mounter.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician</label>\n                                <select onChange={onModalElectricianChange} value={modalElectrician} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_electrician.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Start Date Photo</label>\n\n                                <input onChange={onModalStartDatePhotoChange} className=\"form-control\" type=\"file\" />\n\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Printer</label>\n                                <select onChange={onModalPrinterChange} value={modalPrinter} className=\"form-control\">\n                                    <option>Select...</option>\n                                    {read_printer.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Monitoring Photo</label>\n                                <input onChange={onModalMonitoringPhotoChange} className=\"form-control\" type=\"file\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">End Date Photo</label>\n                                <input onChange={onModalEndDatePhotoChange} className=\"form-control\" type=\"file\" />\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <h4 className=\"text-center\">BOOKING</h4>\n                <form onSubmit={onsearch}>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <div className=\"field col-md-4\">\n                            <label>Search By Customer Mobile</label>\n                            <input className=\"form-control\" type=\"text\" name=\"customer_search\" /><br />\n                            <button className=\"btn btn-primary\" type=\"submit\" style={{ marginRight: '10px', width: '30%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Search</button>\n                        </div>\n                        <div className=\"field col-md-4\"></div>\n                    </div><br />\n                </form>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData1}\n                        columns={columns1}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection\n                        onSelectionModelChange={(ids) => {\n                            const selectedIDs = new Set(ids);\n                            const selectedRowData = rows1.filter((row) =>\n                                selectedIDs.has(row.id)\n                            )\n                            console.log(selectedRowData);\n                            setSelected(selectedRowData)\n                        }}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Shortlisted</label>\n                            {/* <select className=\"form-control\" onChange={onShortlistedChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.quick_media.map((shortlist) => (\n                                    <option key={shortlist.id} value={shortlist.id}>{shortlist.inquiry_master.Inventory_Master.Location}</option>\n                                ))}\n                            </select> */}\n                            <select className=\"form-control\" onChange={onShortlistedChange}>\n                                <option>Select...</option>\n                                <option value=\"Yes\">Yes</option>\n                                <option value=\"No\">No</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Confirmation</label>\n                            {/* <select className=\"form-control\" onChange={onConfirmationChange}>\n                                <option>Select...</option>\n                                {read_inventory.data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                ))}\n                            </select> */}\n                            <select className=\"form-control\" onChange={onConfirmationChange}>\n                                <option>Select...</option>\n                                <option value=\"Yes\">Yes</option>\n                                <option value=\"No\">No</option>\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">PO</label>\n                            <input type=\"text\" name=\"PO\" className=\"form-control\" onChange={onPOChange} />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Designer</label>\n                            <select className=\"form-control\" onChange={onDesignerChange}>\n                                <option>Select...</option>\n                                {read_designer.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Printer</label>\n                            <select className=\"form-control\" onChange={onPrinterChange}>\n                                <option>Select...</option>\n                                {read_printer.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Mounter</label>\n                            <select className=\"form-control\" onChange={onMounterChange}>\n                                <option>Select...</option>\n                                {read_mounter.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician</label>\n                            <select className=\"form-control\" onChange={onElectricianChange}>\n                                <option>Select...</option>\n                                {read_electrician.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\" >Start Date Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onStartDatePhotoChange} />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Monitoring Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onMonitoringPhotoChange} />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">End Date Photo</label>\n                            <input type=\"file\" name=\"PO\" className=\"form-control\" onChange={onEndDatePhotoChange} />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Start Date</label>\n                            <input type=\"date\" name=\"PO\" className=\"form-control\" onChange={onStartDateChange} />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">End Date</label>\n                            <input type=\"date\" name=\"PO\" className=\"form-control\" onChange={onEndDateChange} />\n                        </div>\n\n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type=\"reset\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Booking","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\n\n\nconst getlandloard_Master=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    landlord_management(where: {isDeleted: {_eq: $_eq}}){\n      account_no\n      address\n      agreement_from\n      agreement_to\n      bank_name\n      branch_name\n      height\n      id\n      ifsc\n      location\n      mobile_number\n      name\n      rent_amount\n      rent_increment_reminder\n      site_address\n    \n      width\n    }\n  }\n`\n\n\nconst Insertlanloard_Master=gql`\nmutation MyMutation($account_no: String = \"\", $address: String = \"\", $agreement_from: date = \"\", $agreement_to: date = \"\", $bank_name: String = \"\", $branch_name: String = \"\", $height: String = \"\", $ifsc: String = \"\", $location: String = \"\", $mobile_number: String = \"\", $name: String = \"\", $rent_amount: String = \"\", $rent_increment_reminder: String = \"\", $site_address: String = \"\", $width: String = \"\") {\n    insert_landlord_management_one(object: {account_no: $account_no, address: $address, agreement_from: $agreement_from, agreement_to: $agreement_to, bank_name: $bank_name, branch_name: $branch_name, height: $height, ifsc: $ifsc, location: $location, mobile_number: $mobile_number, name: $name, rent_amount: $rent_amount, rent_increment_reminder: $rent_increment_reminder, site_address: $site_address,  width: $width}) {\n      id\n    }\n  }\n`\n\nconst Updatelandloard_Master=gql`\nmutation MyMutation($id: Int = 0, $account_no: String = \"\", $address: String = \"\", $agreement_from: date = \"\", $agreement_to: date = \"\", $bank_name: String = \"\", $branch_name: String = \"\", $height: String = \"\", $id1: Int = 10, $ifsc: String = \"\", $location: String = \"\", $mobile_number: String = \"\", $name: String = \"\", $rent_amount: String = \"\", $rent_increment_reminder: String = \"\", $site_address: String = \"\", $width: String = \"\") {\n    update_landlord_management_by_pk(pk_columns: {id: $id}, _set: {account_no: $account_no, address: $address, agreement_from: $agreement_from, agreement_to: $agreement_to, bank_name: $bank_name, branch_name: $branch_name, height: $height, ifsc: $ifsc, location: $location, mobile_number: $mobile_number, name: $name, rent_amount: $rent_amount, rent_increment_reminder: $rent_increment_reminder, site_address: $site_address,width: $width}) {\n      account_no\n      address\n      agreement_from\n      agreement_to\n      bank_name\n      branch_name\n      height\n      id\n      ifsc\n      location\n      mobile_number\n      name\n      rent_amount\n      rent_increment_reminder\n      site_address\n      \n      width\n    }\n  }\n  \n\n`\nconst Deletelandloard_Master=gql`\nmutation MyMutation($id: Int = 10, $isDeleted: String = \"true\") {\n    update_landlord_management_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }  \n`\n// const Deletelandloard_Master=gql`\n\n// mutation MyMutation($id: Int = 10) {\n//     delete_landlord_management_by_pk(id: $id) {\n//       account_no\n//       address\n//       agreement_from\n//       agreement_to\n//       bank_name\n//       branch_name\n//       height\n//       id\n//       ifsc\n//       location\n//       mobile_number\n//       name\n//       rent_amount\n//       rent_increment_reminder\n//       site_address\n      \n//       width\n//     }\n//   }\n// `\n\n\n\n\n\n\nfunction Landloard_Management ()  {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [landloard, setlandloard] = useState({\n        name: '',\n        address: '',\n        mobile_number: '',\n        location: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc: '',\n        account_no: '',\n        rent_amount:'',\n        width:'',\n        height:'',\n        site_address:'',\n        agreement_from:'',\n        agreement_to:'',\n        rent_increment_reminder:'',\n\n\n    });\n\n    const [modallandloard, setModallandloard] = useState({\n        id: '',\n        name: '',\n        address: '',\n        mobile_number: '',\n        location: '',\n        bank_name: '',\n        branch_name: '',\n        ifsc: '',\n        account_no: '',\n        rent_amount:'',\n        width:'',\n        height:'',\n        site_address:'',\n        agreement_from:'',\n        agreement_to:'',\n        rent_increment_reminder:'',\n\n    });\n\n\n\n\n\n    const [Insert_landloardmanagementData] = useMutation(Insertlanloard_Master);\n    const [update_landloardmanagementData] = useMutation(Updatelandloard_Master);\n    const [delete_landloardmanagementData] = useMutation(Deletelandloard_Master);\n\n\n\n    const onModalInputChange = (e) => {\n        setModallandloard({ ...modallandloard, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_landloardmanagementData({ variables: modallandloard })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n\n\n\n\n\n\n\n\n\n    const onInputChange = (e) => {\n        setlandloard({ ...landloard, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        Insert_landloardmanagementData({ variables: landloard})\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n\n\n\n    const onDelete = (id) => {\n        delete_landloardmanagementData({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n\n    const onEdit = (row) => {\n        handleShow();\n        setModallandloard({\n            id: row.id,\n            name: row.name,\n            address: row.address,\n            mobile_number: row.mobile_number,\n            site_address: row.site_address,\n            bank_name: row.bank_name,\n            branch_name: row.branch_name,\n            ifsc: row.ifsc,\n            account_no: row.account_no,\n            location:row.location,\n            width:row.width,\n            height:row.height,\n            rent_amount:row.rent_amount,\n            agreement_from:row.agreement_from,\n            agreement_to:row.agreement_to,\n            rent_increment_reminder:row.rent_increment_reminder\n\n\n        })\n        console.log(modallandloard);\n    }\n\n\n\n\n\n\n\n\n\n    const getlandloard_management = useSubscription(getlandloard_Master);\n    if (getlandloard_management.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    if (getlandloard_management.error) {\n        return \"error\" + getlandloard_management.error;\n    }\n    console.log(getlandloard_management.data);\n\n\n\n\n\n\n\n\n\n\n\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n            hide: false,\n        },\n        {\n            field: 'name',\n            headerName: 'Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'address',\n            headerName: 'Address ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'mobile_number',\n            headerName: 'Mobile Number ',\n            width: 200,\n            editable: false,\n        },\n       \n        {\n            field: 'site_address',\n            headerName: 'Site Address',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'location',\n            headerName: 'Location ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'rent_amount',\n            headerName: 'Rent Amount ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'rent_increment_reminder',\n            headerName: 'Rent Increment Remainder ',\n            width: 200,\n            editable: false,\n        },\n         {\n            field: 'agreement_from',\n            headerName: 'Agreement From ',\n            width: 200,\n            editable: false,\n        },\n         {\n            field: 'agreement_to',\n            headerName: 'Agreement To ',\n            width: 200,\n            editable: false,\n        },\n\n\n        {\n            field: 'width',\n            headerName: 'Width ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'height',\n            headerName: 'Height ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'bank_name',\n            headerName: 'Bank Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'branch_name',\n            headerName: 'Branch Name ',\n            width: 200,\n            editable: false,\n        },\n        {\n            field: 'ifsc',\n            headerName: 'IFSC ',\n            width: 200,\n            editable: false,\n        }, \n        {\n            field: 'account_no',\n            headerName: 'Account Number ',\n            width: 200,\n            editable: false,\n        }, \n       \n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\" style={{ width: \"250%\", textAlign: 'center' }}>\n                        <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"tooltip\" title=\"Edit\" style={{ marginRight: '10%' }} ><i className=\"bi bi-pencil-fill\" onClick={() => { onEdit(params.row) }}></i></button>\n\n                        <button style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\"onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }}><i className=\"bi bi-trash-fill\"></i></button>\n\n                    </div>\n                );\n            }\n        },\n    ];\n\n\n\n\n\n\n\n\n\n\n    const rows = getlandloard_management.data.landlord_management;\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n\n    return ( \n        <div>\n\n<Modal show={showModal} onHide={handleClose}>\n                    <Modal.Header>\n                        <Modal.Title>Landloard Master</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                    <div className=\"field col-md-3\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modallandloard.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                        <div className=\"field col-md-3\">\n                            <label className=\"required\">landloard Name</label>\n                            <input placeholder=\"enter name\"defaultValue={modallandloard.name}onChange={onModalInputChange}  type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            <span ></span>\n                        </div>\n                        <div className=\"field col-md-3\">\n                            <label className=\"required\">landloard Address</label>\n                            <input  placeholder=\"enter address\" defaultValue={modallandloard.address}onChange={onModalInputChange} type=\"text\" name=\"address\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-3\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input  placeholder=\"enter contact \"defaultValue={modallandloard.mobile_number}onChange={onModalInputChange} type=\"text\" name=\"mobile_number\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                       \n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Width</label>\n                            <input  placeholder=\"enter Width\"defaultValue={modallandloard.width}onChange={onModalInputChange} type=\"number\" name=\"width\" className=\"form-control mt-1\"  title=\"Please enter valid email address\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Height</label>\n                            <input  placeholder=\"enter height\" defaultValue={modallandloard.height}onChange={onModalInputChange} type=\"number\" name=\"height\" className=\"form-control mt-1\"  title=\"Please enter valid email address\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <input  placeholder=\"enter location\"defaultValue={modallandloard.location}onChange={onModalInputChange} type=\"text\" name=\"location\" className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Amount Yearly</label>\n                            <input  placeholder=\"enter rent amount yearly \"defaultValue={modallandloard.rent_amount}onChange={onModalInputChange} type=\"number\" name=\"rent_amount\" className=\"form-control mt-1\"  title=\"Please enter valid pan\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Increment Remainder</label>\n                            <input   type=\"text\" name=\"rent_increment_reminder\" defaultValue={modallandloard.rent_increment_reminder}onChange={onModalInputChange}className=\"form-control mt-1\"  title=\"Please enter valid pan\" required />\n                        </div>\n                    </div><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  From</label>\n                            <input   type=\"date\" name=\"agreement_from\"defaultValue={modallandloard.agreement_from}onChange={onModalInputChange} className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  To</label>\n                            <input  type=\"date\" name=\"agreement_to\" defaultValue={modallandloard.agreement_to}onChange={onModalInputChange}className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Site Address</label>\n                            <input   type=\"text\" name=\"site_address\"defaultValue={modallandloard.site_address}onChange={onModalInputChange} className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                    </div>\n                    <br />\n                    <h5 style={{ textAlign: 'center' }}>Bank Details</h5><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Bank Name</label>\n                            <input  placeholder=\"enter Bank Name\"defaultValue={modallandloard.bank_name}onChange={onModalInputChange} type=\"text\" name=\"bank_name\" className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        \n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Branch Name</label>\n                            <input  placeholder=\"enter Branch Name\"defaultValue={modallandloard.branch_name} onChange={onModalInputChange}type=\"text\" name=\"branch_name\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                          \n                        </div>\n                        \n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">IFSC</label>\n                            <input  type=\"text\" name=\"ifsc\"defaultValue={modallandloard.ifsc}onChange={onModalInputChange} className=\"form-control\" placeholder=\"enter IFSC\" />\n\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Account Number</label>\n                            <input  type=\"text\" name=\"account_no\"defaultValue={modallandloard.account_no}onChange={onModalInputChange} className=\"form-control\" placeholder=\"enter Account Number\"/>\n                        </div>\n                        \n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                        \n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <h4 className=\"text-center\">Landloard Management</h4><br/>\n\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Landloard Name</label>\n                            <input placeholder=\"enter name\"onChange={onInputChange}  type=\"text\" name=\"name\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                            <span ></span>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Landloard Address</label>\n                            <input  placeholder=\"enter address\"onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control mt-1\" required pattern=\"^[a-zA-Z\\s-]+$\" title=\"Please enter Alphabets.\" />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input  placeholder=\"+91 \"onChange={onInputChange} type=\"tel\" name=\"mobile_number\" className=\"form-control mt-1\" required pattern=\"[789][0-9]{9}\" title=\"Please enter Alphabets.\" />\n                        </div>\n                    </div><br />\n                   \n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Location</label>\n                            <input  placeholder=\"enter location\"onChange={onInputChange} type=\"text\" name=\"location\" className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Amount Yearly</label>\n                            <input  placeholder=\"enter rent amount yearly \"onChange={onInputChange} type=\"text\" name=\"rent_amount\" className=\"form-control mt-1\"  title=\"Please enter valid pan\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Rent Increment Remainder</label>\n                            <input   type=\"text\" name=\"rent_increment_reminder\" onChange={onInputChange}className=\"form-control mt-1\"  title=\"Please enter valid pan\" required />\n                        </div>\n                    </div><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  From</label>\n                            <input   type=\"date\" name=\"agreement_from\"onChange={onInputChange} className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Agreement Tenure  To</label>\n                            <input  type=\"date\" name=\"agreement_to\" onChange={onInputChange}className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Site Address</label>\n                            <input   type=\"text\" name=\"site_address\"onChange={onInputChange} className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        </div>\n                    </div><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Width</label>\n                            <input  placeholder=\"enter Width\"onChange={onInputChange} type=\"number\" name=\"width\" className=\"form-control mt-1\"  title=\"Please enter valid email address\" required />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Height</label>\n                            <input  placeholder=\"enter height\"onChange={onInputChange} type=\"number\" name=\"height\" className=\"form-control mt-1\"  title=\"Please enter valid email address\" required />\n                        </div>\n                    </div>\n                    <br />\n                    <h5 style={{ textAlign: 'center' }}>Bank Details</h5><br/>\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Bank Name</label>\n                            <input  placeholder=\"enter bank Name\"onChange={onInputChange} type=\"text\" name=\"bank_name\" className=\"form-control mt-1\"  title=\"Please enter valid gstin\" required />\n                        \n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Branch Name</label>\n                            <input  placeholder=\"enter branch Name\" onChange={onInputChange}type=\"text\" name=\"branch_name\" className=\"form-control mt-1\" title=\"Please enter valid gstin\" required />\n                          \n                        </div>\n                        \n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">IFSC</label>\n                            <input  type=\"text\" name=\"ifsc\"onChange={onInputChange} className=\"form-control\"maxlength=\"11\" minlength=\"11\" placeholder=\"enter IFSC\" />\n\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Account Number</label>\n                            <input  type=\"number\" name=\"account_no\"onChange={onInputChange} className=\"form-control\" placeholder=\"enter account number\"/>\n                        </div>\n                        \n                    </div><br />\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                        <button className=\"btn btn-primary\" type='reset'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br />\n                        <br />\n\n                    </div>\n                    <br />\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n     );\n}\n \nexport default Landloard_Management;\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n  }  \n`\n\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n`\nconst READ_MEDIA = gql`\nquery MyQuery {\n    media_type_master {\n      id\n      media_type\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n    \n`\nconst READ_SIZE = gql`\nquery MyQuery {\n    size_master {\n      id\n      height\n      width\n      no_of_display\n    }\n  }  \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($country: Int!,$state:Int!,$city:Int!,$illumination:String!,$media_type:Int!,$_gt: date = \"\") {\n    Inventory_Master(where: {Country: {_eq: $country}, State:{_eq:$state},City_Village:{_eq:$city},Illumination:{_eq:$illumination},Media_Type:{_eq:$media_type},AvailabilityTo: {_lt: $_gt}}) {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        id\n        country {\n            id\n            name\n          }\n          city {\n            id\n            name\n          }\n          state {\n            id\n            name\n          }\n          media_type_master {\n            id\n            media_type\n          }\n      }\n  }\n  \n`\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($id: Int!) {\n  delete_inquiry_master_by_pk(id: $id) {\n    id\n  }\n}\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription {\n    inquiry_master {\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      end_date\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      work_order\n      task_sheet\n      downtime\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\n\nexport default function Inquiry_Master() {\n    //States\n    const [showhide, setShowhide] = useState('hidden');\n    const [country, setCountry] = useState();\n    const [state, setState] = useState();\n    const [city, setCity] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    // const [district, setDistrict] = useState();\n    // const [taluka, setTaluka] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n\n\n    const read_media = useQuery(READ_MEDIA);\n    const read_countries = useQuery(READ_COUNTRIES);\n    const read_states = useQuery(READ_STATES);\n    const read_cities = useQuery(READ_CITIES);\n    //const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n\n    //Loader\n    if (read_inquiry.loading  || read_countries.loading || read_states.loading || read_cities.loading || loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onCountryChange = (country_data) => {\n        setCountry(country_data.id)\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n    }\n    const onCityChange = (city_data) => {\n        setCity(city_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        console.log(e.target.value)\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        console.log(e.target.value);\n        setSearchDate(e.target.value);\n    }\n    // const onDistrictChange = (district_data) => {\n    //     setDistrict(district_data.District);\n    // }\n    // const onTalukaChange = (taluka_data) => {\n    //     setTaluka(taluka_data.Taluka);\n    // }\n    const onLocationChange = (e) => {\n        //console.log(e.target[1].value);\n\n        //console.log(e.target.value);\n        var inv = data.Inventory_Master[0]\n        const filteredInventory = data.Inventory_Master.filter((location) => location.Location.includes(e.target.value))\n        setInventoryData(filteredInventory[0]);\n        //console.log(filteredInventory[0].id)\n        setLocation(filteredInventory[0].id);\n        //setShowhide(\"visible\");\n    }\n    const onSearch = (e) => {\n        e.preventDefault();\n        //console.log(district);\n        // loadInventory({variables:{country:country,state:state,city:city,district:district,taluka:taluka,location:location,size:size,illumination:illumination,media:media}})\n        loadInventory({ variables: { country: country, state: state, city: city, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        //console.log(data);\n        setShowhide(\"visible\");\n    }\n    const columns = [\n        {\n            field: 'Country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.country.name;\n            }\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.state.name;\n            }\n        },\n        {\n            field: 'City_Village',\n            headerName: 'City_Village',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n        { \n            field: 'District', \n            headerName: 'District', \n            width: 200 \n        },\n        { \n            field: 'Taluka', \n            headerName: 'Taluka', \n            width: 200 \n        },\n        { \n            field: 'Location', \n            headerName: 'Location', \n            width: 200 \n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        { \n            field: 'Illumination', \n            headerName: 'Illumination', \n            width: 200 \n        },\n        { \n            field: 'Width', \n            headerName: 'Width', \n            width: 200 \n        },\n        { \n            field: 'Height', \n            headerName: 'Height', \n            width: 200 \n        },\n        { \n            field: 'NoofDisplay', \n            headerName: 'No Of Display', \n            width: 200 \n        },\n        { \n            field: 'Totalsqft', \n            headerName: 'Total Sq ft', \n            width: 200 \n        },\n        { \n            field: 'DrpmRate', \n            headerName: 'DrpmRate', \n            width: 200 \n        },\n        { \n            field: 'DisplayRatePM', \n            headerName: 'DisplayRatePM', \n            width: 200 \n        },\n        { \n            field: 'OtpcRate', \n            headerName: 'OtpcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimePrintingCost', \n            headerName: 'OneTimePrintingCost', \n            width: 200 \n        },\n        { \n            field: 'OtmcRate', \n            headerName: 'OtmcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimeMountingCost', \n            headerName: 'OneTimeMountingCost', \n            width: 200 \n        },\n        { \n            field: 'Total', \n            headerName: 'Total', \n            width: 200 \n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'AvailabilityFrom',\n            width: 200\n        },\n        { \n            field: 'AvailabilityTo', \n            headerName: 'AvailabilityTo', \n            width: 200 \n        },\n    ]\n    //console.log(data);\n    const emptyarr = [\n        {\n            id:45,\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            City_Village: \"\",\n            Country: \"\",\n            DisplayRatePM: \"\",\n            District: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            State: \"\",\n            Taluka: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            city:{\n                id: \"\",\n                name: \"\"\n            },\n            country:{\n                id: \"\",\n                name: \"\"\n            },\n            media_type_master:{\n                id: \"\",\n                media_type: \"\"\n            },\n            state:{\n                id: \"\",\n                name: \"\"\n            }\n        }\n    ]\n    var rows = emptyarr;\n    if(data)\n    {\n       rows=data.Inventory_Master;\n    }\n    console.log(rows);\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n                    <h4 className=\"text-center\">Quick Media Proposal</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"country\" className=\"form-control mt-1\" placeholder=\"enter country\" required>\n                        <option>--SELECT--</option>\n                        {read_countries.data.countries.map(country => (\n                            <option key={country.id} value={country.id}>{country.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"state\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                        <option>--SELECT--</option>\n                        {read_states.data.states.map(state => (\n                            <option key={state.id} value={state.id}>{state.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"cities\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                        <option>--SELECT--</option>\n                        {read_cities.data.cities.map(city => (\n                            <option key={city.id} value={city.id}>{city.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '10%' }}>Search</button>\n                    </div><br />\n                    <div className=\"row\">\n\n                        {/* <div className=\"field col-md-4\" style={{ marginLeft: '30%' }}>\n                            <label className=\"required\" style={{ visibility: 'visible' }}>Location</label>\n                            <select className=\"form-control\" onChange={onLocationChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.Location}>{inventory.Location}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                    </div><br /> <br />\n                </form >\n                {/* <div style={{ height: 500, width: '100%', visibility: showhide }}  >\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Country</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.country.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>State</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.state.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>City</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.city.name} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>District</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.District} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Taluka</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Taluka} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Location</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Location} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Media</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.media_type_master.media_type} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Illumination} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Width</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Width} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Height</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Height} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>No Of Display</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.NoofDisplay} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Total sq ft</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Totalsqft} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DrpmRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Display Rate PM</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DisplayRatePM} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtpcRate} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>One Time Printing Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimePrintingCost} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtmcRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>One Time Mounting Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimeMountingCost} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Total</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Total} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability From</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityFrom} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability To</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityTo} readOnly />\n                        </div>\n                    </div>\n                    <CSVLink data={data === undefined ? '' : data.Inventory_Master}>Download</CSVLink>\n                </div> */}\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription\n} from \"@apollo/client\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\n\n\n\n\nconst getPurchase_Master = gql`\nsubscription MySubscriptiony($_eq: String = \"false\"){\n    purchase_order(where: {isDeleted: {_eq: $_eq}}){\n      billing_name\n      billing_address\n      purchase_order_number\n      purchase_order_date\n      campaign_name\n      quotation_number\n      gst_details\n      company_pan\n      payment_terms\n      id\n    }\n  }\n  \n`\nconst InsertPurchase_Master = gql`\nmutation MyMutation($billing_address: String = \"\", $billing_name: String = \"\", $campaign_name: String = \"\", $company_pan: String = \"\", $gst_details: String = \"\", $payment_terms: String = \"\", $purchase_order_date: String = \"\", $purchase_order_number: String = \"\", $quotation_number: String = \"\") {\n  insert_purchase_order(objects: {billing_address: $billing_address, billing_name: $billing_name, campaign_name: $campaign_name, company_pan: $company_pan, gst_details: $gst_details, payment_terms: $payment_terms, purchase_order_date: $purchase_order_date, purchase_order_number: $purchase_order_number, quotation_number: $quotation_number}) {\n    affected_rows\n  }\n}\n\n`\n\n\nconst UpdatePurchase_Master = gql`\nmutation MyMutation($id: Int = 0, $billing_address: String = \"\", $billing_name: String = \"\", $campaign_name: String = \"\", $company_pan: String = \"\", $gst_details: String = \"\", $payment_terms: String = \"\", $purchase_order_date: String = \"\", $purchase_order_number: String = \"\", $quotation_number: String = \"\") {\n  update_purchase_order_by_pk(pk_columns: {id: $id}, _set: {billing_address: $billing_address, billing_name: $billing_name, campaign_name: $campaign_name, company_pan: $company_pan, gst_details: $gst_details, payment_terms: $payment_terms, purchase_order_date: $purchase_order_date, purchase_order_number: $purchase_order_number, quotation_number: $quotation_number}) {\n    billing_address\n    billing_name\n    campaign_name\n    company_pan\n    gst_details\n    id\n    payment_terms\n    purchase_order_date\n    purchase_order_number\n    quotation_number\n  }\n}\n\n  \n`\n\n// const DeletePurchase_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_purchase_order_by_pk(id: $id) {\n//       billing_name\n//       billing_address\n//       purchase_order_number\n//       purchase_order_date\n//       campaign_name\n//       quotation_number\n//       gst_details\n//       company_pan\n//       payment_terms\n//       id\n//     }\n//   }\n// `\n\nconst DeletePurchase_Master=gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n  update_purchase_order_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n    id\n  }\n}\n\n`\n\nfunction Purchase_Order_Management() {\n\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [purchase, setpurchase] = useState({\n    id: '',\n    billing_name: '',\n    billing_address: '',\n    purchase_order_number: '',\n    purchase_order_date: '',\n    campaign_name: '',\n    quotation_number: '',\n    gst_details: '',\n    company_pan: '',\n    payment_terms: '',\n  })\n\n  const [modalpurchase, setModalpurchase] = useState({\n    id: '',\n    billing_name: '',\n    billing_address: '',\n    purchase_order_number: '',\n    purchase_order_date: '',\n    campaign_name: '',\n    quotation_number: '',\n    gst_details: '',\n    company_pan: '',\n    payment_terms: '',\n  });\n\n\n  const [insertpurchasedata] = useMutation(InsertPurchase_Master);\n  const [updatepurchasedata] = useMutation(UpdatePurchase_Master);\n  const [deletepurchasedata] = useMutation(DeletePurchase_Master);\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(e.target.value)\n    insertpurchasedata({ variables: purchase })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalpurchase({\n      id: row.id,\n      billing_name: row.billing_name,\n      billing_address: row.billing_address,\n      purchase_order_number: row.purchase_order_number,\n      purchase_order_date: row.purchase_order_date,\n      campaign_name: row.campaign_name,\n      quotation_number: row.quotation_number,\n      gst_details: row.gst_details,\n      company_pan: row.company_pan,\n      payment_terms: row.payment_terms,\n    })\n  }\n  const onModalInputChange = (e) => {\n    setModalpurchase({ ...modalpurchase, [e.target.name]: e.target.value });\n  }\n\n  const onInputChange = (e) => {\n    setpurchase({ ...purchase, [e.target.name]: e.target.value })\n  }\n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(modalpurchase);\n    updatepurchasedata({ variables: { id: modalpurchase.id, billing_name: modalpurchase.billing_name, billing_address: modalpurchase.billing_address, purchase_order_number: modalpurchase.purchase_order_number, purchase_order_date: modalpurchase.purchase_order_date, campaign_name: modalpurchase.campaign_name, quotation_number: modalpurchase.quotation_number, gst_details: modalpurchase.gst_details, company_pan: modalpurchase.company_pan, payment_terms: modalpurchase.payment_terms } })\n    toast.configure();\n    toast.warning('Successfully Updated')\n    handleClose();\n  }\n\n  const onDelete = (id) => {\n    console.log(id);\n    deletepurchasedata({ variables: { id: id } });\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n\n\n\n  const columns = [\n    {\n      field: 'sno',\n      headerName: 'Serial No',\n      width: 150,\n  },\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'billing_name', headerName: 'Billing Name', width: 200 },\n\n    { field: 'billing_address', headerName: 'Billing Address', width: 200, },\n\n    { field: 'purchase_order_number', headerName: 'Purchase Order number', width: 230, },\n\n    { field: 'purchase_order_date', headerName: 'Purchase Order Date', width: 230, },\n\n\n    { field: 'campaign_name', headerName: 'Campaign', width: 210, },\n    { field: 'quotation_number', headerName: 'Quotation Number', width: 210, },\n    { field: 'gst_details', headerName: 'GST Details', width: 190, },\n    { field: 'company_pan', headerName: 'company Pan', width: 190, },\n    { field: 'payment_terms', headerName: 'Payment Terms', width: 190, },\n    // { field: 'gst no', headerName: 'gst no', width: 170, },\n    // { field: 'pan', headerName: 'pan', width: 170, },\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} onClick={() => onEdit(params.row)} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" onClick={() => {\n              const confirmBox = window.confirm(\n                \"Do you really want to delete?\"\n              )\n              if (confirmBox === true) {\n                onDelete(params.row.id)\n              }\n            }} ><i className=\"bi bi-trash-fill\"></i></button>\n\n          </div>\n        );\n      }\n    },\n\n\n  ];\n\n\n\n  const getpurchase_order = useSubscription(getPurchase_Master);\n  if (getpurchase_order.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n  }\n  //console.log(getpurchase_order.data);\n\n  const rows = getpurchase_order.data.purchase_order;\n  let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n\n\n\n  return (\n\n    <div>\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title style={{ marginLeft: \"130px\" }}>Edit Purchase Order</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <form className=\"form-group\" onSubmit={(e) => { onModalFormSubmit(e) }}>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">ID</label>\n                <input defaultValue={modalpurchase.id} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"id\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">billing Name</label>\n                <input defaultValue={modalpurchase.billing_name} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"billing_name\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">billing address</label>\n                <input defaultValue={modalpurchase.billing_address} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"billing_address\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Purchase Order Number</label>\n                <input defaultValue={modalpurchase.purchase_order_number} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"purchse_order_number\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Purchase_order_date</label>\n                <input defaultValue={modalpurchase.purchase_order_date} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"purchse_order_date\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Campaign Name</label>\n                <input defaultValue={modalpurchase.campaign_name} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"campaign_name\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Quotation Number</label>\n                <input defaultValue={modalpurchase.quotation_number} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"quotation_number\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">GST Details</label>\n                <input defaultValue={modalpurchase.gst_details} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"gst_details\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Company Pan</label>\n                <input defaultValue={modalpurchase.company_pan} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"company_pan\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-6\">\n                <label className=\"required\">Payment Terms</label>\n                <input defaultValue={modalpurchase.payment_terms} onChange={(e) => { onModalInputChange(e) }} className=\"form-control mt-1\" name=\"payment_terms\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"field col-md-6\">\n              <button className=\"btn btn-primary mt-3\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n            </div>\n          </form>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n\n        </Modal.Footer>\n      </Modal>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br />\n        <h4 className=\"text-center\">Purchase Order</h4>\n        <form onSubmit={onFormSubmit} className=\"form-group\">\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Billing Name</label>\n              <input placeholder=\"enter billing name\" className=\"form-control mt-1\" onChange={onInputChange} name=\"billing_name\" type=\"text\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Billing Adress</label>\n              <input placeholder=\"enter biiling_address\" className=\"form-control mt-1\" onChange={onInputChange} name=\"billing_address\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Purchase order Number</label>\n              <input placeholder=\"enter purchase order number\" className=\"form-control mt-1\" onChange={onInputChange} name=\"purchase_order_number\" type=\"text\" required />\n            </div><br />\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Purchase order date</label>\n              <input placeholder=\"enter date\" className=\"form-control mt-1\" onChange={onInputChange} name=\"purchase_order_date\" type=\"date\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Campaign Name</label>\n              <input placeholder=\"enter campaign name\" className=\"form-control mt-1\" onChange={onInputChange} name=\"campaign_name\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Quotation Number</label>\n              <input placeholder=\"enter quotation Number\" className=\"form-control mt-1\" onChange={onInputChange} name=\"quotation_number\" type=\"text\" required />\n            </div>\n          </div><br />\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">GST Details</label>\n              <input placeholder=\"enter gst details\" className=\"form-control mt-1\" onChange={onInputChange} name=\"gst_details\" type=\"text\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Company Pan</label>\n              <input placeholder=\"enter Pan\" className=\"form-control mt-1\" onChange={onInputChange} name=\"company_pan\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Payment Terms</label>\n              <input placeholder=\"enter payment terms\" className=\"form-control mt-1\" onChange={onInputChange} name=\"payment_terms\" type=\"text\" required />\n            </div>\n          </div>\n          <br />\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n            <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n            {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n          </div>\n          <br />\n        </form>\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={newData}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n    </div>\n  );\n\n}\n\nexport default Purchase_Order_Management;","import React, { useState } from 'react'\nimport Card from '@mui/material/Card'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from 'react-bootstrap';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useMutation,\n  useQuery,\n  gql,\n  useSubscription\n} from \"@apollo/client\";\n\nconst getFlex_Master = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n  flex_vinyl_management(where: {isDeleted: {_eq: $_eq}}){\n    designer_selection\n    designer_payment\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n\nconst InsertFlex_Master = gql`\nmutation MyMutation($designer_selection: String = \"\", $designer_payment: String = \"\", $media: String = \"\", $mounter_payment: String = \"\", $mounter_selection: String = \"\", $printer_payment: String = \"\", $printer_selection: Int = 10) {\n  insert_flex_vinyl_management_one(object: {designer_selection: $designer_selection, designer_payment: $designer_payment, media: $media, mounter_payment: $mounter_payment, mounter_selection: $mounter_selection, printer_payment: $printer_payment, printer_selection: $printer_selection}) {\n    designer_selection\n    designer_payment\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n  \n// const deleteFlex_Master = gql`\n// mutation MyMutation($id: Int = 10) {\n//   delete_flex_vinyl_management_by_pk(id: $id) {\n//     designer_selection\n//     designer_payment\n//     id\n//     media\n//     mounter_payment\n//     mounter_selection\n//     printer_payment\n//     printer_selection\n//   }\n// }`\n\nconst deleteFlex_Master=gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n  update_flex_vinyl_management_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n    id\n  }\n}\n\n`\n\nconst updateFlex_Master = gql`\nmutation MyMutation($designer_payment: String = \"\", $designer_selection: String = \"\", $media: String = \"\", $mounter_payment: String = \"\", $mounter_selection: String = \"\", $printer_payment: String = \"\", $printer_selection: Int = 10) {\n  update_flex_vinyl_management_by_pk(pk_columns: {id: 10}, _set: {designer_payment: $designer_payment, designer_selection: $designer_selection, media: $media, mounter_payment: $mounter_payment, mounter_selection: $mounter_selection, printer_payment: $printer_payment, printer_selection: $printer_selection}) {\n    designer_payment\n    designer_selection\n    id\n    media\n    mounter_payment\n    mounter_selection\n    printer_payment\n    printer_selection\n  }\n}`\n\n\n\n\nexport default function Flex_and_Vinyl_Management() {\n  const [showModal, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [showhide, setShowhide] = useState('hidden');\n  const [Media, setMedia] = useState();\n\n  const [modalId, setModalId] = useState();\n  const [modalMedia, setModalMedia] = useState();\n  const [flex, setflex] = useState({\n\n    media: '',\n    designer_selection: '',\n    designer_payment: '',\n    printer_selection: '',\n    printer_payment: '',\n    mounter_selection: '',\n    mounter_payment: '',\n\n\n\n\n  });\n  const [Modalflex, setModalflex] = useState({\n    id: '',\n    media: '',\n    designer_selection: '',\n    designer_payment: '',\n    printer_selection: '',\n    printer_payment: '',\n    mounter_selection: '',\n    mounter_payment: '',\n    \n  })\n\n\n\n\n\n\n\n  const [Insert_flexinsertData] = useMutation(InsertFlex_Master);\n  const [delete_flexdeleteData] = useMutation(deleteFlex_Master);\n  const [update_flexupdateData] = useMutation(updateFlex_Master);\n\n  const onMediaChange = (e) => {\n    if (e.target.value === 'Yes') {\n        setShowhide('visible');\n    }\n    else {\n        setShowhide('hidden');\n    }\n    setMedia(e.target.value);\n    console.log(e.target.value);\n}\n\n  const onInputChange = (e) => {\n    setflex({ ...flex, [e.target.name]: e.target.value })\n  }\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(e.target)\n    Insert_flexinsertData({ variables: flex })\n    toast.configure();\n    toast.success('Successfully Inserted')\n  }\n\n  const onEdit = (row) => {\n    handleShow();\n    setModalflex({\n      id: row.id,\n      media: row.media,\n      designer_selection: row.designer_selection,\n      designer_payment: row.designer_payment,\n      printer_selection: row.printer_selection,\n      printer_payment: row.printer_payment,\n      mounter_selection: row.mounter_selection,\n      mounter_payment: row.mounter_payment,\n\n    })\n    console.log(Modalflex);\n  }\n\n  const onModalInputChange = (e) => {\n    setModalflex({ ...Modalflex, [e.target.name]: e.target.value })\n  }\n  const onModalMediaChange = (e) => {\n    if (e.target.value === 'Yes') {\n        setShowhide('visible');\n    }\n    else {\n        setShowhide('hidden');\n    }\n    setModalMedia(e.target.value);\n    console.log(e.target.value);\n}\n  const onModalFormSubmit = (e) => {\n    e.preventDefault();\n    update_flexupdateData({ variables: Modalflex })\n    handleClose();\n    toast.configure();\n    toast.warning('Successfully Updated')\n  }\n\n\n\n  const onDelete = (id) => {\n    delete_flexdeleteData({ variables: { id: id } })\n    toast.configure();\n    toast.error('Successfully Deleted')\n  }\n\n\n\n  const getflex_vinyl_management = useSubscription(getFlex_Master);\n  if (getflex_vinyl_management.loading) {\n    return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    console.log(getflex_vinyl_management.data);\n\n  }\n\n  const columns = [\n    {\n      field: 'sno',\n      headerName: 'Serial No',\n      width: 150,\n  },\n    { field: 'id', headerName: 'ID', width: 100 },\n\n    { field: 'media', headerName: 'Media', width: 200 },\n    { field: 'designer_selection', headerName: 'Designer_Selection', width: 200 },\n    { field: 'designer_payment', headerName: 'Designer_Payment', width: 200 },\n    { field: 'printer_selection', headerName: 'printer_Selection', width: 200 },\n    { field: 'printer_payment', headerName: 'Printer_Payment', width: 230 },\n    { field: 'mounter_selection', headerName: 'Mounter_Selection', width: 230 },\n    { field: 'mounter_payment', headerName: 'Mounter_Payment', width: 230 },\n\n\n\n    {\n      field: 'action',\n      headerName: 'Action',\n      width: 170,\n      renderCell: (params) => {\n        return (\n          <div className=\"\">\n            <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { onEdit(params.row) }} style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n            <button onClick={() => {\n              const confirmBox = window.confirm(\n                \"Do you really want to delete?\"\n              )\n              if (confirmBox === true) {\n                onDelete(params.row.id)\n              }\n            }} style={{ marginLeft: '20%' }} className=\"btn btn-danger\" data-toggle=\"tooltip\" title=\"Delete\" ><i className=\"bi bi-trash-fill\"></i></button>\n\n\n\n\n          </div>\n        );\n      }\n    },\n  ];\n\n  const rows = getflex_vinyl_management.data.flex_vinyl_management;\n  let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n  //  const rows = [\n  //     // const rows = [\n  //     { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  // //     { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  // //     { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  // //     { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  // //     { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  // //     { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  // //     { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  // //     { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n\n  // //     { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  // //     { id: 10, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  //  ];\n  return (\n    <div>\n\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>Edit Flex And Vinyl Management</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <form onSubmit={onModalFormSubmit} className=\"form-group\" padding=\"1px\">\n\n            <div className=\"row mt-3\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Media</label>\n                <input placeholder=\"enter media\" defaultValue={Modalflex.media} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"media\" type=\"text\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Designer_Selection </label>\n                <input placeholder=\"enter designer selection \" defaultValue={Modalflex.designer_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"designer_selection\" type=\"text\" required />\n              </div>\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Designer_Payment</label>\n                <input placeholder=\"enter designer payment\" defaultValue={Modalflex.designer_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"designer_payment\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"row mt-4\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Printer_Selection</label>\n                <input placeholder=\"enter printer selection\" defaultValue={Modalflex.printer_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"printer_selection\" type=\"number\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">printer_Payment</label>\n                <input placeholder=\"enter printer payment\" defaultValue={Modalflex.printer_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"printer_payment\" type=\"text\" required />\n              </div>\n\n\n            </div>\n            <div className=\"row mt-4\">\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Mounter_Selection</label>\n                <input placeholder=\"enter mounter selection\" defaultValue={Modalflex.mounter_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"mounter_selection\" type=\"text\" required />\n              </div>\n\n              <div className=\"field col-md-4\">\n                <label className=\"required\">Mounter_Payment</label>\n                <input placeholder=\"enter mounter payment\" defaultValue={Modalflex.mounter_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"mounter_payment\" type=\"text\" required />\n              </div>\n\n\n            </div>\n\n            <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n              <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n              {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n            </div>\n            <br />\n          </form>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n        <br />\n        <h4 className=\"text-center\">Flex Vinyl Management</h4>\n\n        <br />\n        <form onSubmit={onFormSubmit}>\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Media</label>\n              <select className=\"form-control mt-2\" onChange={onMediaChange} >\n                                    <option>Select...</option>\n                                    <option>Flex</option>\n                                    <option>Vinyl</option>\n                                </select>\n              \n            </div>\n\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Designer Selection</label>\n              <input placeholder=\"enter designer selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"designer_selection\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Designer Payment</label>\n              <input placeholder=\"enter designer payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"designer_payment\" type=\"text\" required />\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Printer Selection</label>\n              <input placeholder=\"enter printer selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"printer_selection\" type=\"number\" required />\n            </div>\n\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Printer Payment</label>\n              <input placeholder=\"enter printer payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"printer_payment\" type=\"text\" required />\n            </div>\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Mounter Selection</label>\n              <input placeholder=\"enter mounter selection\" onChange={onInputChange} className=\"form-control mt-1\" name=\"mounter_selection\" type=\"text\" required />\n            </div>\n          </div>\n          \n            \n          <div className=\"row mt-4\">\n            <div className=\"field col-md-4\">\n              <label className=\"required\">Mounter Payment</label>\n              <input placeholder=\"enter mounter payment\" onChange={onInputChange} className=\"form-control mt-1\" name=\"mounter_payment\" type=\"text\" required />\n            </div>\n          </div>\n\n          <br />\n          <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n          <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n\n          </div>\n          <br />\n        </form>\n\n        {/* <div style={{ height: 500, width: '100%' }}>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={10}\n          rowsPerPageOptions={[10]}\n          checkboxSelection={false}\n          // components={{\n          //   Toolbar: GridToolbar,\n          // }}\n          style={{borderTop: '4px solid #05386b'}}\n          disableSelectionOnClick\n        />\n      </div> */}\n      </Card>\n      <Card variant=\"outlined\" className=\"form-card\" style={{\n        margin: \"2%\",\n        padding: \"2%\",\n        background: \"#FFFFFF\",\n        boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"10px\"\n      }}>\n\n        <div style={{ height: 500, width: '100%' }}>\n          <DataGrid\n            rows={newData}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[10]}\n            checkboxSelection={false}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n\n            disableSelectionOnClick\n          />\n        </div>\n      </Card>\n\n    </div>\n\n\n\n\n  )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_MONITORING = gql`\nquery MyQuery {\n    monitoring_images {\n      id\n      upload_image\n      status\n      geo_location\n      date\n      clients_name\n      brand_name\n    }\n  }\n`\nconst READ_MONITORING = gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    monitoring_images(where: {isDeleted: {_eq: $_eq}}) {\n      id\n      upload_image\n      status\n      geo_location\n      date\n      clients_name\n      brand_name\n    }\n  }  \n`\nconst INSERT_MONITORING = gql`\nmutation MyMutation($brand_name: String = \"\", $clients_name: String = \"\", $date: String = \"\", $geo_location: String = \"\", $status: String = \"\", $upload_image: String = \"\") {\n    insert_monitoring_images_one(object: {brand_name: $brand_name, clients_name: $clients_name, date: $date, geo_location: $geo_location, status: $status, upload_image: $upload_image}) {\n      id\n    }\n  }\n`\nconst UPDATE_MONITORING = gql`\nmutation MyMutation($id: Int = 1, $brand_name: String = \"\", $clients_name: String = \"\", $date: String = \"\", $geo_location: String = \"\", $status: String = \"\", $upload_image: String = \"\", $id1: Int = 10) {\n    update_monitoring_images_by_pk(pk_columns: {id: $id}, _set: {brand_name: $brand_name, clients_name: $clients_name, date: $date, geo_location: $geo_location, status: $status, upload_image: $upload_image}) {\n      brand_name\n      clients_name\n      date\n      geo_location\n      id\n      status\n      upload_image\n    }\n  }  \n`\n// const DELETE_MONITORING = gql`\n// mutation MyMutation($id: Int = 10) {\n//     delete_monitoring_images_by_pk(id: $id) {\n//       id\n//     }\n//   }  \n// `\n\nconst DELETE_MONITORING = gql`\nmutation MyMutation($isDeleted: String = \"true\", $id: Int = 0) {\n    update_monitoring_images_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\nexport default function MonitoringImages() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [monitoring, setMONITORING] = useState({\n        brand_name: '',\n        clients_name: '',\n        date: '',\n        geo_location: '',\n        status: '',\n        upload_image: '',\n    });\n\n    const [modalMONITORING, setModalMONITORING] = useState({\n        id: '',\n        brand_name: '',\n        clients_name: '',\n        date: '',\n        geo_location: '',\n        status: '',\n        upload_image: '',\n    });\n    const [insert_monitoring, insert_data] = useMutation(INSERT_MONITORING);\n    const [update_monitoring, update_data] = useMutation(UPDATE_MONITORING);\n    const [delete_monitoring, delete_data] = useMutation(DELETE_MONITORING);\n    const monitoring_data = useSubscription(READ_MONITORING);\n    if (monitoring_data.loading || monitoring_data.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setMONITORING({ ...monitoring, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        insert_monitoring({ variables: monitoring })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalMONITORING({\n            id: row.id,\n            brand_name: row.brand_name,\n            clients_name: row.clients_name,\n            date: row.date,\n            geo_location: row.geo_location,\n            status: row.status,\n            upload_image: row.upload_image\n        })\n        console.log(modalMONITORING);\n    }\n    const onModalInputChange = (e) => {\n        setModalMONITORING({ ...modalMONITORING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_monitoring({ variables: modalMONITORING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_monitoring({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'upload_image',\n            headerName: 'Upload Image',\n            width: 190\n        },\n        {\n            field: 'status',\n            headerName: 'Status',\n            width: 190\n        },\n        {\n            field: 'geo_location',\n            headerName: 'Location',\n            width: 250\n        },\n        {\n            field: 'clients_name',\n            headerName: 'Client Name',\n            width: 160\n        },\n        {\n            field: 'brand_name',\n            headerName: 'Brand Name',\n            width: 180\n        },\n        {\n            field: 'date',\n            headerName: 'Date',\n            width: 110\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = monitoring_data.data.monitoring_images;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Data</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalMONITORING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Upload Images</label>\n                                <input defaultValue={modalMONITORING.upload_image} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"upload_image\" type=\"text\" placeholder=\"enter address\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Status</label>\n                                <input defaultValue={modalMONITORING.status} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"status\" type=\"text\" placeholder=\"enter status\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Location</label>\n                                <input defaultValue={modalMONITORING.geo_location} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"geo_location\" type=\"text\" placeholder=\"enter location\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Client Name</label>\n                                <input defaultValue={modalMONITORING.clients_name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"clients_name\" type=\"text\" placeholder=\"enter clients name\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Display Brand Name</label>\n                                <input defaultValue={modalMONITORING.brand_name} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"brand_name\" type=\"text\" placeholder=\"enter brand name\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Date</label>\n                                <input defaultValue={modalMONITORING.date} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"date\" type=\"date\" placeholder=\"enter brand name\" />\n                            </div>\n\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\"style={{ marginRight: '50px', width:'22%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        </div>\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">MONITORING IMAGES</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Upload Image</label>\n                            <input type=\"text\" name=\"upload_image\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"upload your image\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Status</label>\n                            <input type=\"text\" name=\"status\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter status\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Location</label>\n                            <input type=\"text\" name=\"geo_location\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter location\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Client Name</label>\n                            <input type=\"text\" name=\"clients_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter client's name\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Display Brand Name</label>\n                            <input type=\"text\" name=\"brand_name\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter brand name\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Date</label>\n                            <input type=\"date\" name=\"date\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter date\" required />\n                        </div>\n                    </div><br />\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}\n","class Auth{\n\n    login(cb){\n        cb();\n        localStorage.setItem(\"authenticated\",\"true\")\n    }\n    logout(cb){\n        cb();\n        localStorage.clear();\n    }\n    isAuthenticated(){\n        return localStorage.getItem(\"authenticated\");\n    }\n}\n\nexport default new Auth();","import React,{useState} from 'react';\nimport { useHistory } from 'react-router';\nimport auth from '../auth';\nimport {\n    useQuery,\n    gql,\n    useMutation\n  } from \"@apollo/client\";\n//import Header from '../components/Header';\n\nconst LOGIN_MUTATION = gql`\nquery MyQuery {\n    User {\n      username\n      password\n      role\n    }\n  }\n`;\n\nconst Login=() =>\n{\n    const history = useHistory();\n    const [formState, setFormState] = useState({\n        username:'',\n        password: '',\n        role:''\n    });\n    const {loading,error,data} = useQuery(LOGIN_MUTATION);\n    //console.log(data.User);\n    const FormSubmit=(e)=>\n    {\n        e.preventDefault();\n        //console.log(formState);\n        Array.isArray(data.User) && data.User.map((user)=>{\n            if(formState.username === user.username && formState.password === user.password)\n            {\n                //console.log(\"-----------------\"+localStorage.getItem(\"authenticated\"));\n                auth.login(()=>{\n                    localStorage.setItem(\"userrole\",user.role)\n                    localStorage.setItem(\"userdata\",formState.username);\n                    history.push(\"/Dashboard\")\n                })\n                //console.log(\"-----------------\"+localStorage.getItem(\"authenticated\"));\n            }\n            else\n            {\n                console.log(\"Fail\");\n            }\n        })\n    }\n    \n    \n    const onInputChange=(e)=>{\n        setFormState({...formState,[e.target.name]:e.target.value})\n    }\n    //const authToken = localStorage.getItem(AUTH_TOKEN);\n    \n    //console.log(data)\n    return (\n        // <div className=\"container\">\n        //     <div>\n        //         <form onSubmit={(e)=>{FormSubmit(e)}}>\n        //         <div class=\"form-group\">\n        //             <label>Username</label>\n        //             <input type=\"text\" defaultValue={formState.username} onChange={(e)=>{onInputChange(e)}} name=\"username\" className=\"form-control\" placeholder=\"Enter Username\" />\n        //         </div>\n        //         <div class=\"form-group\">\n        //             <label>Password</label>\n        //             <input type=\"text\" defaultValue={formState.password} onChange={(e)=>{onInputChange(e)}} name=\"password\" className=\"form-control\" placeholder=\"Enter Password\" />\n        //         </div>\n        //         <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        //         </form>\n        //     </div>\n        // </div>\n        <section class=\"vh-100\">\n  <div class=\"container-fluid h-custom\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-md-9 col-lg-6 col-xl-5\">\n        <img src=\"https://mdbootstrap.com/img/Photos/new-templates/bootstrap-login-form/draw2.png\" class=\"img-fluid\"\n          alt=\"Sample image\" />\n      </div>\n      <div class=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n        <form onSubmit={(e)=>{FormSubmit(e)}}>\n          {/* <div class=\"d-flex flex-row align-items-center justify-content-center justify-content-lg-start\">\n            <p class=\"lead fw-normal mb-0 me-3\">Sign in with</p>\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-facebook-f\"></i>\n            </button>\n\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-twitter\"></i>\n            </button>\n\n            <button type=\"button\" class=\"btn btn-primary btn-floating mx-1\">\n              <i class=\"fab fa-linkedin-in\"></i>\n            </button>\n          </div> */}\n\n          {/* <div class=\"divider d-flex align-items-center my-4\">\n            <p class=\"text-center fw-bold mx-3 mb-0\">Or</p>\n          </div> */}\n\n        \n          <div class=\"form-outline mb-4\">\n            <label class=\"form-label\" for=\"form3Example3\">Username</label>\n            <input  defaultValue={formState.username} onChange={(e)=>{onInputChange(e)}} name=\"username\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter a valid username\" />\n          </div>\n\n       \n          <div class=\"form-outline mb-3\">\n            <label class=\"form-label\" for=\"form3Example4\">Password</label>\n            <input type=\"text\" defaultValue={formState.password} onChange={(e)=>{onInputChange(e)}} name=\"password\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter password\" />\n          </div>\n\n          \n          <div class=\"text-center text-lg-start mt-4 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary btn-lg\"\n              style={{paddingLeft: \"2.5rem\", paddingRight: \"2.5rem\"}}>Login</button>\n            {/* <p class=\"small fw-bold mt-2 pt-1 mb-0\">Don't have an account? <a href=\"#!\"\n                class=\"link-danger\">Register</a></p> */}\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n  {/* <div class=\"d-flex flex-column flex-md-row text-center text-md-start justify-content-between py-4 px-4 px-xl-5 bg-primary\">\n    \n    <div class=\"text-white mb-3 mb-md-0\">\n      Copyright © 2020. All rights reserved.\n    </div>\n    \n    <div>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-facebook-f\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-twitter\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white me-4\">\n        <i class=\"fab fa-google\"></i>\n      </a>\n      <a href=\"#!\" class=\"text-white\">\n        <i class=\"fab fa-linkedin-in\"></i>\n      </a>\n    </div>\n    \n  </div> */}\n</section>\n        \n    )\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport auth from \"./auth\";\n\nexport const ProtectedRoute=({component:Component,...rest})=>{\n    const auth = localStorage.getItem(\"authenticated\");\n    // console.log(\"==================================\"+auth)\n   \n    return (\n        <Route\n        {...rest}\n        render={props=>{\n            // console.log(\"Success\")\n            // console.log(\"==================================\"+auth)\n            // auth ? return (<Component {...props} />) : return(\n            //     <Redirect\n            //     to={{\n            //         pathname:\"/\",\n            //         state:{\n            //             from:props.location\n            //         }\n            //     }} />\n            // )\n\n            if (auth===\"true\"){\n                //console.log(\"Login\")\n                return <Component {...props} />\n            }\n            else\n            {\n                return(\n                    <Redirect\n                    to={{\n                        pathname:\"/Login\",\n                        state:{\n                            from:props.location\n                        }\n                    }} />\n                )\n            }\n        }} />\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nconst READ_COUNTRIES = gql`\nquery MyQuery {\n    countries {\n      id\n      name\n      phonecode\n      sortname\n    }\n  }  \n`\n\nconst READ_STATES = gql`\nquery MyQuery {\n    states {\n      country_id\n      id\n      name\n    }\n  }  \n`\n\nconst READ_CITIES = gql`\nquery MyQuery {\n    cities {\n      state_id\n      name\n      id\n    }\n  }\n`\nconst READ_MEDIA = gql`\nquery MyQuery {\n    media_type_master {\n      id\n      media_type\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n    \n`\nconst READ_SIZE = gql`\nquery MyQuery {\n    size_master {\n      id\n      height\n      width\n      no_of_display\n    }\n  }  \n`\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($country: Int!,$state:Int!,$city:Int!,$illumination:String!,$media_type:Int!,$_gt: date = \"\") {\n    Inventory_Master(where: {Country: {_eq: $country}, State:{_eq:$state},City_Village:{_eq:$city},Illumination:{_eq:$illumination},Media_Type:{_eq:$media_type},AvailabilityTo: {_lt: $_gt}}) {\n        Status\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        id\n        country {\n            id\n            name\n          }\n          city {\n            id\n            name\n          }\n          state {\n            id\n            name\n          }\n          media_type_master {\n            id\n            media_type\n          }\n      }\n  }\n  \n`\n\nconst INSERT_INQUIRY = gql`\nmutation MyMutation($inventory: Int! $email_id: String = \"\", $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\",$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    insert_inquiry_master_one(object: {inventory: $inventory, email_id: $email_id, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst UPDATE_INQUIRY = gql`\nmutation MyMutation($email_id: String = \"\", $inventory: Int!, $name: String = \"\", $number: String = \"\", $sol: String = \"\", $whatsapp_number: String = \"\", $id: Int!,$start_date:date!,$end_date:date!,$work_order:String=\"\",$task_sheet:String!,$downtime:String!,$media_type:Int!,$status:String!) {\n    update_inquiry_master_by_pk(pk_columns: {id: $id}, _set: {email_id: $email_id, inventory: $inventory, name: $name, number: $number, sol: $sol, whatsapp_number: $whatsapp_number,start_date:$start_date,end_date:$end_date,work_order:$work_order,task_sheet:$task_sheet,downtime:$downtime,media_type:$media_type,status:$status}) {\n      id\n    }\n  }\n`\nconst DELETE_INQUIRY = gql`\nmutation MyMutation($id: Int!) {\n  delete_inquiry_master_by_pk(id: $id) {\n    id\n  }\n}\n`\n\nconst READ_INQUIRY = gql`\nsubscription MySubscription {\n    inquiry_master {\n      email_id\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n        }\n        country {\n          id\n          name\n        }\n        errection_cost\n        errection_year\n        fabrication_selection\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          id\n          name\n        }\n      }\n      end_date\n      id\n      inventory\n      name\n      number\n      sol\n      start_date\n      whatsapp_number\n      work_order\n      task_sheet\n      downtime\n      media_type\n      media_type_master {\n        id\n        media_type\n        }\n        status\n    }\n  }\n`\nconst UPDATE_Inventory = gql`\nmutation MyMutation($id: Int = 0,$Status:String=\"Hold\") {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {Status:$Status}) {\n      id\n    }\n  }\n  \n`\n\nexport default function Availability_Master() {\n    //States\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [showhide, setShowhide] = useState('hidden');\n    const [country, setCountry] = useState();\n    const [state, setState] = useState();\n    const [city, setCity] = useState();\n    const [illumination, setIllumination] = useState();\n    const [searchMediaType, setSearchMediaType] = useState();\n    const [searchDate, setSearchDate] = useState();\n    // const [district, setDistrict] = useState();\n    // const [taluka, setTaluka] = useState();\n    const [location, setLocation] = useState();\n    const [inventoryData, setInventoryData] = useState();\n    // Modal States\n    \n    const [ModalId, setModalId] = useState();\n    const [ModalCountry, setModalCountry] = useState();\n    const [ModalStates, setModalStates] = useState();\n    const [ModalTaluka, setModalTaluka] = useState();\n    const [ModalDistrict, setModalDistrict] = useState();\n    const [ModalCity_Village, setModalCity_Village] = useState();\n    const [ModalLocation, setModalLocation] = useState();\n    const [ModalMedia_Type, setModalMedia_Type] = useState();\n    const [ModalIllumination, setModalIllumination] = useState();\n    const [ModalWidth, setModalWidth] = useState(1);\n    const [ModalHeight, setModalHeight] = useState(1);\n    const [ModalNoofDisplay, setModalNoofDisplay] = useState(1);\n    const [ModalTotalsqft, setModalTotalsqft] = useState();\n    const [ModalDisplayRatePM, setModalDisplayRatePM] = useState();\n    const [ModalOneTimePrintingCost, setModalOneTimePrintingCost] = useState();\n    const [ModalOneTimeMountingCost, setModalOneTimeMountingCost] = useState();\n    const [ModalTotal, setModalTotal] = useState();\n    const [ModalAvailabilityFrom, setModalAvailabilityFrom] = useState();\n    const [ModalAvailabilityTo, setModalAvailabilityTo] = useState();\n    const [ModalDrpmRate, setModalDrpmRate] = useState();\n    const [ModalOtpcRate, setModalOtpcRate] = useState();\n    const [ModalOtmcRate, setModalOtmcRate] = useState();\n    const [Modalhoarding_insurance,setModalhoarding_insurance]=useState();\n    const [Modalerrection_cost,setModalerrection_cost]=useState();\n    const [Modalerrection_year,setModalerrection_year]=useState();\n    const [Modalfabrication_selection,setModalfabrication_selection]=useState();\n    const [ModalStatus,setModalStatus]=useState();\n\n    const [update_InventorymasterData] = useMutation(UPDATE_Inventory);\n    const read_media = useQuery(READ_MEDIA);\n    const read_countries = useQuery(READ_COUNTRIES);\n    const read_states = useQuery(READ_STATES);\n    const read_cities = useQuery(READ_CITIES);\n    //const read_inventory = useQuery(READ_INVENTORY);\n    const read_inquiry = useSubscription(READ_INQUIRY);\n    const [loadInventory, { loading, error, data }] = useLazyQuery(SEARCH_INVENTORY);\n\n    //Loader\n    if (read_inquiry.loading  || read_countries.loading || read_states.loading || read_cities.loading || loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n\n    const onCountryChange = (country_data) => {\n        setCountry(country_data.id)\n    }\n    const onStateChange = (state_data) => {\n        setState(state_data.id)\n    }\n    const onCityChange = (city_data) => {\n        setCity(city_data.id);\n    }\n    const onIlluminationChange = (e) => {\n        setIllumination(e.target.value);\n    }\n    const onsearchMediaTypeChange = (e) => {\n        console.log(e.target.value)\n        setSearchMediaType(e.target.value)\n    }\n    const onDateChange = (e) => {\n        console.log(e.target.value);\n        setSearchDate(e.target.value);\n    }\n    // const onDistrictChange = (district_data) => {\n    //     setDistrict(district_data.District);\n    // }\n    // const onTalukaChange = (taluka_data) => {\n    //     setTaluka(taluka_data.Taluka);\n    // }\n    const onLocationChange = (e) => {\n        //console.log(e.target[1].value);\n\n        //console.log(e.target.value);\n        var inv = data.Inventory_Master[0]\n        const filteredInventory = data.Inventory_Master.filter((location) => location.Location.includes(e.target.value))\n        setInventoryData(filteredInventory[0]);\n        //console.log(filteredInventory[0].id)\n        setLocation(filteredInventory[0].id);\n        //setShowhide(\"visible\");\n    }\n    const onSearch = (e) => {\n        e.preventDefault();\n        //console.log(district);\n        // loadInventory({variables:{country:country,state:state,city:city,district:district,taluka:taluka,location:location,size:size,illumination:illumination,media:media}})\n        loadInventory({ variables: { country: country, state: state, city: city, illumination: illumination, media_type: searchMediaType, _gt: searchDate } })\n        //console.log(data);\n        setShowhide(\"visible\");\n    }\n    const onEdit = (row) => {\n        //console.log(row);\n        handleShow();\n        setModalId(row.id);\n        setModalStatus(row.Status);\n\n\n        //console.log(modalInventory);\n    }\n    const onModalStatusChange=(e)=>{\n        setModalStatus(e.target.value)\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        //console.log(ModalStates.toString());\n        update_InventorymasterData({ variables: { id: ModalId,Status:ModalStatus} })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'Country',\n            headerName: 'Country',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.country.name;\n            }\n        },\n        {\n            field: 'State',\n            headerName: 'State',\n            width: 160,\n            valueGetter: (params) => {\n                //console.log(params.row.stateByState)\n                return params.row.state.name;\n            }\n        },\n        {\n            field: 'City_Village',\n            headerName: 'City_Village',\n            width: 160,\n            valueGetter: (params) => {\n                return params.row.city.name;\n            }\n        },\n        { \n            field: 'District', \n            headerName: 'District', \n            width: 200 \n        },\n        { \n            field: 'Taluka', \n            headerName: 'Taluka', \n            width: 200 \n        },\n        { \n            field: 'Location', \n            headerName: 'Location', \n            width: 200 \n        },\n        {\n            field: 'Media_Type',\n            headerName: 'Media_Type',\n            width: 180,\n            valueGetter: (params) => {\n                return params.row.media_type_master.media_type;\n            }\n        },\n        { \n            field: 'Illumination', \n            headerName: 'Illumination', \n            width: 200 \n        },\n        { \n            field: 'Width', \n            headerName: 'Width', \n            width: 200 \n        },\n        { \n            field: 'Height', \n            headerName: 'Height', \n            width: 200 \n        },\n        { \n            field: 'NoofDisplay', \n            headerName: 'No Of Display', \n            width: 200 \n        },\n        { \n            field: 'Totalsqft', \n            headerName: 'Total Sq ft', \n            width: 200 \n        },\n        { \n            field: 'DrpmRate', \n            headerName: 'DrpmRate', \n            width: 200 \n        },\n        { \n            field: 'DisplayRatePM', \n            headerName: 'DisplayRatePM', \n            width: 200 \n        },\n        { \n            field: 'OtpcRate', \n            headerName: 'OtpcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimePrintingCost', \n            headerName: 'OneTimePrintingCost', \n            width: 200 \n        },\n        { \n            field: 'OtmcRate', \n            headerName: 'OtmcRate', \n            width: 200 \n        },\n        { \n            field: 'OneTimeMountingCost', \n            headerName: 'OneTimeMountingCost', \n            width: 200 \n        },\n        { \n            field: 'Total', \n            headerName: 'Total', \n            width: 200 \n        },\n        {\n            field: 'AvailabilityFrom',\n            headerName: 'AvailabilityFrom',\n            width: 200\n        },\n        { \n            field: 'AvailabilityTo', \n            headerName: 'AvailabilityTo', \n            width: 200 \n        },\n        { \n            field: 'Status', \n            headerName: 'Status', \n            width: 200 \n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 170,\n            renderCell: (params) => {\n              return (\n                <div className=\"\">\n                  <button data-toggle=\"tooltip\" title=\"Edit\" onClick={() => { onEdit(params.row) }} style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"> </i></button>\n                </div>\n              );\n            }\n          },\n    ]\n    //console.log(data);\n    const emptyarr = [\n        {\n            id:45,\n            AvailabilityFrom: \"\",\n            AvailabilityTo: \"\",\n            City_Village: \"\",\n            Country: \"\",\n            DisplayRatePM: \"\",\n            District: \"\",\n            DrpmRate: \"\",\n            Height: \"\",\n            Illumination: \"\",\n            Location: \"\",\n            Media_Type: \"\",\n            NoofDisplay: \"\",\n            OneTimeMountingCost: \"\",\n            OneTimePrintingCost: \"\",\n            OtmcRate: \"\",\n            OtpcRate: \"\",\n            State: \"\",\n            Taluka: \"\",\n            Total: \"\",\n            Totalsqft: \"\",\n            Width: \"\",\n            city:{\n                id: \"\",\n                name: \"\"\n            },\n            country:{\n                id: \"\",\n                name: \"\"\n            },\n            media_type_master:{\n                id: \"\",\n                media_type: \"\"\n            },\n            state:{\n                id: \"\",\n                name: \"\"\n            }\n        }\n    ]\n    var rows = emptyarr;\n    if(data)\n    {\n       rows=data.Inventory_Master;\n    }\n    let newData=[]\n    rows.map((item,index)=>{\n        newData.push({sno:index+1,...item})\n    })\n    console.log(rows);\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Availability Master</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                        <label>Id</label>\n                            <input type='text' name=\"id\" className=\"form-control\" defaultValue={ModalId} />\n                        </div>\n                        <div className=\"field col-md-4\">\n                        <label>Status</label>\n                            <select defaultValue={ModalStatus} className=\"form-control\"onChange={onModalStatusChange} >\n                                <option>Select...</option>\n                                <option>Immediate</option>\n                                <option>Booked</option>\n                                <option>Hold</option>\n                            </select>\n                        </div>\n                        </div><br/>\n\n                        <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                            <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n\n                            <br /><br />\n                            {/* <button className=\"btn btn-primary\" type='Next' style={{ marginLeft: '5%' }}>Next</button> */}\n                        </div>\n\n\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}><form className=\"form-group\">\n                    <h4 className=\"text-center\">Availability Master</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Country</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"country\" className=\"form-control mt-1\" placeholder=\"enter country\" required>\n                        <option>--SELECT--</option>\n                        {read_countries.data.countries.map(country => (\n                            <option key={country.id} value={country.id}>{country.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"country\"\n                                options={read_countries.data.countries}\n                                onChange={onCountryChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">State</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"state\" className=\"form-control mt-1\" placeholder=\"enter state\" required>\n                        <option>--SELECT--</option>\n                        {read_states.data.states.map(state => (\n                            <option key={state.id} value={state.id}>{state.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"state\"\n                                options={read_states.data.states}\n                                onChange={onStateChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">City</label>\n                            {/* <input onChange={onInputChange} type=\"text\" name=\"address\" className=\"form-control\" /> */}\n                            {/* <select onChange={onInputChange} type=\"text\" name=\"cities\" className=\"form-control mt-1\" placeholder=\"enter city\" required>\n                        <option>--SELECT--</option>\n                        {read_cities.data.cities.map(city => (\n                            <option key={city.id} value={city.id}>{city.name}</option>\n                        ))}\n                    </select> */}\n                            <Select\n                                name=\"city\"\n                                options={read_cities.data.cities}\n                                onChange={onCityChange}\n                                getOptionLabel={(option) => option.name}\n                                getOptionValue={(option) => option.id}\n                            />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <select className=\"form-control\" onChange={onIlluminationChange}>\n                                <option>Select...</option>\n                                <option>F LIT</option>\n                                <option>NON LIT</option>\n                                <option>ALL</option>\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Media Type</label>\n                            <select className=\"form-control\" onChange={onsearchMediaTypeChange}>\n                                <option>Select...</option>\n                                {read_media.data.media_type_master.map((media) => (\n                                    <option key={media.id} value={media.id}>{media.media_type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Date</label>\n                            <input type=\"date\" className=\"form-control\" onChange={onDateChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button onClick={onSearch} className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width:'10%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\n                    </div><br />\n                    <div className=\"row\">\n\n                        {/* <div className=\"field col-md-4\" style={{ marginLeft: '30%' }}>\n                            <label className=\"required\" style={{ visibility: 'visible' }}>Location</label>\n                            <select className=\"form-control\" onChange={onLocationChange}>\n                                <option>Select...</option>\n                                {data === undefined ? '' : data.Inventory_Master.map((inventory) => (\n                                    <option key={inventory.id} value={inventory.Location}>{inventory.Location}</option>\n                                ))}\n                            </select>\n                        </div> */}\n                    </div><br /> <br />\n                </form >\n                {/* <div style={{ height: 500, width: '100%', visibility: showhide }}  >\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Country</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.country.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>State</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.state.name} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>City</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.city.name} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>District</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.District} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Taluka</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Taluka} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Location</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Location} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Media</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.media_type_master.media_type} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Illumination</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Illumination} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Width</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Width} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Height</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Height} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>No Of Display</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.NoofDisplay} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Total sq ft</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Totalsqft} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DrpmRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Display Rate PM</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.DisplayRatePM} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtpcRate} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>One Time Printing Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimePrintingCost} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Rate</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OtmcRate} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>One Time Mounting Cost</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.OneTimeMountingCost} readOnly />\n                        </div>\n                    </div>\n                    <div className=\"row mt-2\">\n                        <div className=\"field col-md-4\">\n                            <label>Total</label>\n                            <input type=\"Text\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.Total} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability From</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityFrom} readOnly />\n                        </div>\n                        <div className=\"field col-md-4\">\n                            <label>Availability To</label>\n                            <input type=\"date\" className=\"form-control\" name=\"\" defaultValue={inventoryData === undefined ? '' : inventoryData.AvailabilityTo} readOnly />\n                        </div>\n                    </div>\n                    <CSVLink data={data === undefined ? '' : data.Inventory_Master}>Download</CSVLink>\n                </div> */}\n                <div style={{ height: 500, width: '100%', visibility: showhide }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n\n                        disableSelectionOnClick\n                    />\n                </div>\n            </Card>\n\n\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst SEARCH_INVENTORY = gql`\nquery MyQuery($id: Int!) {\n    Inventory_Master_by_pk(id: $id) {\n        id\n        hoarding_insurance_to\n        hoarding_insurance_from\n        hoarding_insurance\n      }\n  }  \n`\n\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      \n      hoarding_insurance\n      hoarding_insurance_to\n        hoarding_insurance_from\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n`\nconst UPDATE_INVENTORY=gql`\nmutation MyMutation($hoarding_insurance: String = \"\", $hoarding_insurance_from: date = \"\", $hoarding_insurance_to: date = \"\", $id: Int!) {\n    update_Inventory_Master_by_pk(pk_columns: {id: $id}, _set: {hoarding_insurance: $hoarding_insurance, hoarding_insurance_from: $hoarding_insurance_from, hoarding_insurance_to: $hoarding_insurance_to}) {\n      id\n    }\n  }  \n`\n\nfunction Hoarding_Insurance1() {\n    //States\n    const [filteredData,setFilteredData] = useState();\n    const [get_data, setGet_data] = useState();\n    const [inventory, setInventory] = useState();\n    const [id,setId] = useState();\n    const [insurance, setInsurance] = useState();\n    const [insuranceFrom, setInsuranceFrom] = useState();\n    const [insuranceTo, setInsuranceTo] = useState();\n\n    //Queries\n    const [update_inventory] = useMutation(UPDATE_INVENTORY);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const [searchInventory, searchInventoryData] = useLazyQuery(SEARCH_INVENTORY, {\n        onCompleted: data => {\n            // console.log('data ', data);\n            setGet_data(data);\n        }\n    });\n    if (read_inventory.loading || searchInventoryData.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n\n    //Events\n    const onInventoryChange = (e) => {\n        setFilteredData(\"\")\n        setInventory(e.target.value);\n        //console.log(typeof e.target.value);\n        searchInventory({ variables: { id: inventory } });\n        const filteredInventory = read_inventory.data.Inventory_Master.filter((location) => location.id.toString().includes(e.target.value))\n        console.log(read_inventory.data.Inventory_Master.filter((location) => location.id.toString().includes(e.target.value)));\n        //setFilteredData(filteredInventory);\n        setId(filteredInventory[0].id)\n        setInsurance(filteredInventory[0].hoarding_insurance)\n        setInsuranceFrom(filteredInventory[0].hoarding_insurance_from)\n        setInsuranceTo(filteredInventory[0].hoarding_insurance_to)\n        //console.log(filteredData[0].hoarding_insurance)\n\n    }\n    const onInsuranceChange=(e)=>{\n        setInsurance(e.target.value);\n    }\n    const onInsuranceFromChange=(e)=>{\n        setInsuranceFrom(e.target.value);\n    }\n    const onInsuranceToChange=(e)=>{\n        setInsuranceTo(e.target.value);\n    }\n    const onFormSubmit=(e)=>{\n        e.preventDefault();\n        update_inventory({variables:{id:id,hoarding_insurance:insurance,hoarding_insurance_from:insuranceFrom,hoarding_insurance_to:insuranceTo}})\n    }\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form className='form-group' onSubmit={onFormSubmit}>\n                    <div className=\"col-md-12\">\n                        <br />\n                        <h4 style={{ width: '100%', textAlign: 'center' }}>HOARDING INSURANCE</h4>\n                        <br />\n                        {/* <Divider style={{ marginBottom: '8px', }} /> */}\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Inventory</label>\n                                <select className=\"form-control mt-1\" onChange={onInventoryChange}>\n                                    <option>Select...</option>\n                                    {read_inventory.data.Inventory_Master.map(inventory => (\n                                        <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            <div className=\"field col-md-4 \">\n                                <label className=\"required\">Hoarding Insurance</label>\n                                <select defaultValue={insurance} onChange={onInsuranceChange} className=\"form-control mt-2\" >\n                                    <option>Select...</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n                            <div className=\"field col-md-2 \">\n                                <label className=\"required\">From Date</label>\n                                <input defaultValue={insuranceFrom} onChange={onInsuranceFromChange} type=\"date\" className=\"form-control\" />\n                            </div>\n                            <div className=\"field col-md-2 \">\n                                <label className=\"required\">To Date</label>\n                                <input defaultValue={insuranceTo} onChange={onInsuranceToChange} type=\"date\" className=\"form-control\" />\n                            </div>\n                        </div>\n\n                    </div>\n                    <br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '20px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        {/* <button className=\"btn btn-primary\" type='Next' style={{marginLeft:'5%'}}>Next</button> */}\n                    </div>\n                    <br />\n                </form>\n            </Card>\n        </div>\n    )\n}\n\nexport default Hoarding_Insurance1\n","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_HOARDING = gql`\nquery MyQuery {\n  hoarding_errection {\n    id\n    errection_cost\n    errection_year\n    fabricator\n    inventory\n  }\n}\n`\nconst READ_HOARDING = gql`\nsubscription MySubscription {\n    hoarding_errection {\n        Inventory_Master {\n          Location\n        }\n        inventory\n        fabricator\n        errection_year\n        errection_cost\n        id\n        labor_master {\n          name\n          id\n        }\n      }\n}\n`\nconst INSERT_HOARDING = gql`\nmutation MyMutation($errection_cost: String = \"\", $errection_year: String = \"\", $fabricator: Int!, $inventory: Int!) {\n  insert_hoarding_errection_one(object: {errection_cost: $errection_cost, errection_year: $errection_year, fabricator: $fabricator, inventory: $inventory}) {\n    id\n  }\n}\n`\nconst UPDATE_HOARDING = gql`\nmutation MyMutation($id: Int = 10, $errection_cost: String = \"\", $errection_year: String = \"\", $fabricator: Int = 10, $inventory: Int = 10) {\n  update_hoarding_errection_by_pk(pk_columns: {id: $id}, _set: {errection_cost: $errection_cost, errection_year: $errection_year, fabricator: $fabricator, inventory: $inventory}) {\n    id\n    errection_cost\n    errection_year\n    fabricator\n    inventory\n  }\n}\n`\nconst DELETE_HOARDING = gql`\nmutation MyMutation($id: Int = 10) {\n  delete_hoarding_errection_by_pk(id: $id) {\n    id\n  }\n}\n`\nconst READ_LABOR = gql`\nquery MyQuery {\n    labor_master(where: {labor_type: {_eq: 21}}) {\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      pan\n      name\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nquery MyQuery {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n      errection_cost\n      errection_year\n      fabrication_selection\n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n  \n`\nexport default function HoardingErrection() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [hoarding, setHOARDING] = useState({\n        errection_cost: '',\n        errection_year: '',\n        fabricator: '',\n        inventory: '',\n    });\n\n    const [modalHOARDING, setModalHOARDING] = useState({\n        id: '',\n        errection_cost: '',\n        errection_year: '',\n        fabricator: '',\n        inventory: '',\n    });\n    const [insert_hoarding, insert_data] = useMutation(INSERT_HOARDING);\n    const [update_hoarding, update_data] = useMutation(UPDATE_HOARDING);\n    const [delete_hoarding, delete_data] = useMutation(DELETE_HOARDING);\n    const read_labor = useQuery(READ_LABOR);\n    const read_inventory = useQuery(READ_INVENTORY);\n    const hoarding_data = useSubscription(READ_HOARDING);\n    if (hoarding_data.loading || hoarding_data.loading || read_labor.loading || read_inventory.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setHOARDING({ ...hoarding, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(hoarding)\n        insert_hoarding({ variables: hoarding })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalHOARDING({\n            id: row.id,\n            errection_cost: row.errection_cost,\n            errection_year: row.errection_year,\n            fabricator: row.fabricator,\n            inventory: row.inventory\n        })\n        console.log(modalHOARDING);\n    }\n    const onModalInputChange = (e) => {\n        setModalHOARDING({ ...modalHOARDING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_hoarding({ variables: modalHOARDING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_hoarding({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'errection_cost',\n            headerName: 'Errection Cost',\n            width: 190\n        },\n        {\n            field: 'errection_year',\n            headerName: 'Errection Year',\n            width: 190\n        },\n        {\n            field: 'fabricator',\n            headerName: 'Fabricator',\n            width: 250\n        },\n        {\n            field: 'fabricator',\n            headerName: 'Fabricator',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = hoarding_data.data.hoarding_errection;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Hoarding Errection</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalHOARDING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Errection Cost</label>\n                                <input defaultValue={modalHOARDING.errection_cost} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"errection_cost\" type=\"text\" placeholder=\"enter errection cost\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Errection Year</label>\n                                <input defaultValue={modalHOARDING.errection_year} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"errection_year\" type=\"text\" placeholder=\"enter errection year\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator</label>\n                                <input defaultValue={modalHOARDING.fabricator} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabricator\" type=\"text\" placeholder=\"enter location\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Inventory</label>\n                                <input defaultValue={modalHOARDING.inventory} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"inventory\" type=\"text\" placeholder=\"enter location\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        </div>\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">HOARDING ERECTION</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Errection Cost</label>\n                            <input type=\"text\" name=\"errection_cost\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter errection cost\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Errection Year</label>\n                            <input type=\"text\" name=\"errection_year\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter errection year\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator</label>\n                            {/* <input type=\"text\" name=\"status\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator cost\" required /> */}\n                            <select className=\"form-control\" name=\"fabricator\" onChange={onInputChange} >\n                                <option>Select...</option>\n                                {read_labor.data.labor_master.map(labor => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Inventory</label>\n                            {/* <input type=\"text\" name=\"status\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator cost\" required /> */}\n                            <select className=\"form-control\" name=\"inventory\" onChange={onInputChange}>\n                                <option>Select...</option>\n                                {read_inventory.data.Inventory_Master.map(inventory => (\n                                    <option key={inventory.id} value={inventory.id}>{inventory.Location}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nconst GET_HOARDING = gql`\nsubscription MySubscription {\n  hoarding_errection {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    fabricator\n  }\n}\n`\nconst READ_HOARDING = gql`\nsubscription MySubscription {\n    hoarding_errection {\n        laborMasterByExcavator {\n            id\n            labor_type\n            name\n          }\n          laborMasterByElectricianSelection {\n            id\n            labor_type\n            name\n          }\n          labor_master {\n            id\n            labor_type\n            name\n          }\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n    id\n    fabricator\n    }   \n}\n`\nconst INSERT_HOARDING = gql`\nmutation MyMutation($location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  insert_hoarding_errection_one(object: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n  }\n}\n`\nconst UPDATE_HOARDING = gql`\nmutation MyMutation($id: Int = 10, $location: String = \"\", $payment: String = \"\", $permission: String = \"\", $excavator: Int!, $excavator_charges: String = \"\", $civil_contractor: Int!, $civil_material: String = \"\", $civil_contractor_labour_payment: String = \"\", $fabrication_material: String = \"\", $fabricator_labour_payment: String = \"\", $transport_charges: String = \"\", $electrician_selection: Int!, $electric_material_purchase: String = \"\", $electrician_labour_payment: String = \"\",$fabricator:Int!) {\n  update_hoarding_errection_by_pk(pk_columns: {id: $id}, _set: {location: $location, payment: $payment, permission: $permission, excavator: $excavator, excavator_charges: $excavator_charges, civil_contractor: $civil_contractor, civil_material: $civil_material, civil_contractor_labour_payment: $civil_contractor_labour_payment, fabrication_material: $fabrication_material, fabricator_labour_payment: $fabricator_labour_payment, transport_charges: $transport_charges, electrician_selection: $electrician_selection, electric_material_purchase : $electric_material_purchase, electrician_labour_payment: $electrician_labour_payment,fabricator:$fabricator}) {\n    id\n    location\n    payment\n    permission\n    excavator\n    excavator_charges\n    civil_contractor\n    civil_material\n    civil_contractor_labour_payment\n    fabrication_material\n    fabricator_labour_payment\n    transport_charges\n    electrician_selection\n    electric_material_purchase\n    electrician_labour_payment\n  }\n}\n`\nconst DELETE_HOARDING = gql`\nmutation MyMutation($id: Int = 10) {\n  delete_hoarding_errection_by_pk(id: $id) {\n    id\n  }\n}\n`\nconst READ_LABOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 21}}) {\n      address\n      bank_id\n      gst_no\n      id\n      labor_type\n      mobile_no\n      pan\n      name\n    }\n  }\n  \n`\nconst READ_INVENTORY = gql`\nsubscription MySubscription {\n    Inventory_Master {\n      AvailabilityFrom\n      AvailabilityTo\n      City_Village\n      Country\n      DisplayRatePM\n      District\n      DrpmRate\n      Height\n      Illumination\n      Location\n      Media_Type\n      NoofDisplay\n      OneTimeMountingCost\n      OneTimePrintingCost\n      OtmcRate\n      OtpcRate\n      State\n      Taluka\n      Total\n      Totalsqft\n      Width\n      city {\n        id\n        name\n      }\n      country {\n        id\n        name\n      }\n     \n      hoarding_insurance\n      id\n      media_type_master {\n        id\n        media_type\n      }\n      state {\n        id\n        name\n      }\n    }\n  }\n`\nconst READ_ELECTRICIAN = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 20}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_CIVIL_CONTRACTOR = gql`\nsubscription MySubscription {\n    labor_master(where: {isDeleted: {_eq: \"false\"},labor_type: {_eq: 24}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nconst READ_EXCAVATOR = gql`\nsubscription MySubscription {\n    labor_master(where:{isDeleted: {_eq: \"false\"}, labor_type: {_eq: 23}}) {\n      id\n      labor_type\n      name\n    }\n  }\n`\n\nexport default function HoardingErrection() {\n    const [showModal, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [hoarding, setHOARDING] = useState({\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n\n    const [modalHOARDING, setModalHOARDING] = useState({\n        id: '',\n        location: '',\n        payment: '',\n        permission: '',\n        excavator: '',\n        excavator_charges: '',\n        civil_contractor: '',\n        civil_material: '',\n        civil_contractor_labour_payment: '',\n        fabrication_material: '',\n        fabricator_labour_payment: '',\n        transport_charges: '',\n        electrician_selection: '',\n        electric_material_purchase: '',\n        electrician_labour_payment: '',\n        fabricator:'',\n    });\n    const [insert_hoarding, insert_data] = useMutation(INSERT_HOARDING);\n    const [update_hoarding, update_data] = useMutation(UPDATE_HOARDING);\n    const [delete_hoarding, delete_data] = useMutation(DELETE_HOARDING);\n    const read_labor = useSubscription(READ_LABOR);\n    const read_excavator = useSubscription(READ_EXCAVATOR);\n    const read_electrician = useSubscription(READ_ELECTRICIAN);\n    const read_civil_contractor = useSubscription(READ_CIVIL_CONTRACTOR);\n    const read_inventory = useSubscription(READ_INVENTORY);\n    const hoarding_data = useSubscription(READ_HOARDING);\n    if (hoarding_data.loading || hoarding_data.loading || read_labor.loading || read_inventory.loading || read_excavator.loading || read_electrician.loading || read_civil_contractor.loading) {\n        return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    }\n    const onInputChange = (e) => {\n        setHOARDING({ ...hoarding, [e.target.name]: e.target.value })\n    }\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(hoarding)\n        insert_hoarding({ variables: hoarding })\n        toast.configure();\n        toast.success('Successfully Inserted')\n    }\n    const onEdit = (row) => {\n        handleShow();\n        setModalHOARDING({\n            id: row.id,\n            location: row.location,\n            payment: row.payment,\n            permission: row.permission,\n            excavator: row.excavator,\n            excavator_charges: row.excavator_charges,\n            civil_contractor: row.civil_contractor,\n            civil_material: row.civil_material,\n            civil_contractor_labour_payment: row.civil_contractor_labour_payment,\n            fabrication_material: row.fabrication_material,\n            fabricator_labour_payment: row.fabricator_labour_payment,\n            transport_charges: row.transport_charges,\n            electrician_selection: row.electrician_selection,\n            electric_material_purchase: row.electric_material_purchase,\n            electrician_labour_payment: row.electrician_labour_payment,\n            fabricator:row.fabricator,\n        })\n        console.log(modalHOARDING);\n    }\n    const onModalInputChange = (e) => {\n        setModalHOARDING({ ...modalHOARDING, [e.target.name]: e.target.value })\n    }\n    const onModalFormSubmit = (e) => {\n        e.preventDefault();\n        update_hoarding({ variables: modalHOARDING })\n        handleClose();\n        toast.configure();\n        toast.warning('Successfully Updated')\n    }\n    const onDelete = (id) => {\n        delete_hoarding({ variables: { id: id } })\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    const columns = [\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field: 'id',\n            headerName: 'ID',\n            width: 100,\n        },\n        {\n            field: 'location',\n            headerName: 'Location Provided By Agent Name',\n            width: 300\n        },\n        {\n            field: 'payment',\n            headerName: 'Payment For Location To Agent Amount',\n            width: 330\n        },\n        {\n            field: 'permission',\n            headerName: 'Permission Cost Amount',\n            width: 250\n        },\n        {\n            field: 'excavator',\n            headerName: 'Excavator Selection',\n            width: 210,\n            valueGetter: (params) => {\n                return params.row.laborMasterByExcavator.name;\n            }\n        },\n        {\n            field: 'excavator_charges',\n            headerName: 'Excavator Charges Amount',\n            width: 260\n        },\n        {\n            field: 'civil_contractor',\n            headerName: 'Civil Contractor Selection',\n            width: 250,\n            valueGetter: (params) => {\n                return params.row.labor_master.name;\n            }\n        },\n        {\n            field: 'civil_material',\n            headerName: 'Civil Material Purchase Amount',\n            width: 280\n        },\n        {\n            field: 'civil_contractor_labour_payment',\n            headerName: 'Civil Contractor Labour Payment Amount',\n            width: 340\n        },\n        {\n            field: 'fabrication_material',\n            headerName: 'Fabrication Material Purchase Amount',\n            width: 320\n        },\n        {\n            field: 'fabricator_labour_payment',\n            headerName: 'Fabricator Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'transport_charges',\n            headerName: 'Transport Charges If Any',\n            width: 240\n        },\n        {\n            field: 'electrician_selection',\n            headerName: 'Electrician Selection',\n            width: 220,\n            valueGetter: (params) => {\n                return params.row.laborMasterByElectricianSelection.name;\n            }\n        },\n        {\n            field: 'electric_material_purchase',\n            headerName: 'Electric Material Purchase Amount',\n            width: 310\n        },\n        {\n            field: 'electrician_labour_payment',\n            headerName: 'Electrician Labour Payment Amount',\n            width: 310\n        },\n        {\n            field: 'fabricator',\n            headerName: 'Fabricator',\n            width: 310\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        <button onClick={() => onEdit(params.row)} data-toggle=\"tooltip\" title=\"Edit\" style={{ marginLeft: '5%' }} type=\"button\" className=\"btn btn-warning\"  ><i className=\"bi bi-pencil-fill\"></i></button>\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '50%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n    ];\n    const rows = hoarding_data.data.hoarding_errection;\n    let newData = []\n    rows.map((item, index) => {\n        newData.push({ sno: index + 1, ...item })\n    })\n    return (\n        <div>\n            <Modal show={showModal} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Hoarding Errection</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n                    <form onSubmit={onModalFormSubmit} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">ID</label>\n                                <input defaultValue={modalHOARDING.id} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"id\" type=\"text\" placeholder=\"enter id\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Location Provided By Agent's Name\n                                </label>\n                                <input defaultValue={modalHOARDING.location} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"location\" type=\"text\" placeholder=\"enter location provided by agent's name\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Payment For Location To Agent Amount</label>\n                                <input defaultValue={modalHOARDING.payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"payment\" type=\"text\" placeholder=\"enter payment for location to agent's amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Permission Cost Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.permission} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"permission\" type=\"text\" placeholder=\"enter permission cost amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Selection</label>\n                                {/* <input defaultValue={modalHOARDING.excavator} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator\" type=\"text\" placeholder=\"select excavator\" /> */}\n                                <select defaultValue={modalHOARDING.excavator} name=\"excavator\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_excavator.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Excavator Charges Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.excavator_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"excavator_charges\" type=\"text\" placeholder=\"enter excavator charges amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contractor Selection</label>\n                                {/* <input defaultValue={modalHOARDING.civil_contractor} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor\" type=\"text\" placeholder=\"select civil contractor\" /> */}\n                                <select defaultValue={modalHOARDING.civil_contractor} name=\"civil_contractor\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_civil_contractor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.civil_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_material\" type=\"text\" placeholder=\"enter civil material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Civil Contract Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.civil_contractor_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"civil_contractor_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabrication Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.fabrication_material} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabrication_material\" type=\"text\" placeholder=\"enter fabrication material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator Labour Payment Amount</label>\n                                <input defaultValue={modalHOARDING.fabricator_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"fabricator_labour_payment\" type=\"text\" placeholder=\"enter civil contract labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Transport Changes If Any\n                                </label>\n                                <input defaultValue={modalHOARDING.transport_charges} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"transport_charges\" type=\"text\" placeholder=\"enter transport charges if any\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Selection</label>\n                                {/* <input defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_selection\" type=\"text\" placeholder=\"select electrician\" /> */}\n                                <select defaultValue={modalHOARDING.electrician_selection} onChange={onModalInputChange} name=\"electrician_selection\" onChange={onModalInputChange} className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_electrician.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electric Material Purchase Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electric_material_purchase} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electric_material_purchase\" type=\"text\" placeholder=\"enter electric material purchase amount\" />\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"row mt-2\">\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Electrician Labour Payment Amount\n                                </label>\n                                <input defaultValue={modalHOARDING.electrician_labour_payment} onChange={onModalInputChange} className=\"form-control mt-1\" name=\"electrician_labour_payment\" type=\"text\" placeholder=\"enter electrician labour payment amount\" />\n                            </div>\n                            <div className=\"field col-md-6\">\n                                <label className=\"required\">Fabricator</label>\n                                <select defaultValue={modalHOARDING.fabricator} name=\"fabricator\" className=\"form-control mt-1\">\n                                    <option>Select...</option>\n                                    {read_labor.data.labor_master.map((labor)=>(\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <br />\n                        <div className=\"field col-md-6\">\n                            <button className=\"btn btn-primary\" style={{ marginRight: '50px', width: '25%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n\n                        </div>\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"0.5%\",\n                padding: \"0.5%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n\n                <br />\n                <h4 className=\"text-center\">HOARDING ERRECTION</h4>\n                <br />\n                <form onSubmit={onFormSubmit} className=\"form-group\" padding=\"2px\">\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Location Provided By Agent Name</label>\n                            <input type=\"text\" name=\"location\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter location provided by agent name\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Payment For Location To Agent Amount</label>\n                            <input type=\"text\" name=\"payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter payment for location to agent amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Permission Cost Amount</label>\n                            <input type=\"text\" name=\"permission\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter permission cost amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Selection</label>\n                            {/* <input type=\"text\" name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select excavator\" required /> */}\n                            <select name=\"excavator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_excavator.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Excavator Charges Amount</label>\n                            <input type=\"text\" name=\"excavator_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter excavator charges amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Selection</label>\n                            {/* <input type=\"text\" name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select civil contractor\" required /> */}\n                            <select name=\"civil_contractor\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_civil_contractor.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Material Purchase Amount</label>\n                            <input type=\"text\" name=\"civil_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Civil Contractor Labour Payment Amount</label>\n                            <input type=\"text\" name=\"civil_contractor_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter civil contractor labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabrication Material Purchase Amount</label>\n                            <input type=\"text\" name=\"fabrication_material\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabrication material purchase amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Transport Charges If Any</label>\n                            <input type=\"text\" name=\"transport_charges\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter transport charges if any\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator Labour Payment Amount</label>\n                            <input type=\"text\" name=\"fabricator_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter fabricator labour payment amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Selection</label>\n                            {/* <input type=\"text\" name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"select electrician\" required /> */}\n                            <select name=\"electrician_selection\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {read_electrician.data.labor_master.map((labor) => (\n                                    <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electric Material Purchase Amount</label>\n                            <input type=\"text\" name=\"electric_material_purchase\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electric material purchase amount\" required />\n                        </div>\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Electrician Labour Payment Amount</label>\n                            <input type=\"text\" name=\"electrician_labour_payment\" onChange={onInputChange} className=\"form-control mt-1\" placeholder=\"enter electrician labour payment amount\" required />\n                        </div>\n                        <div className=\"field col-md-6\">\n                            <label className=\"required\">Fabricator</label>\n                            <select name=\"fabricator\" onChange={onInputChange} className=\"form-control mt-1\">\n                                <option>Select...</option>\n                                {\n                                    read_labor.data.labor_master.map((labor) => (\n                                        <option key={labor.id} value={labor.id}>{labor.name}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                    </div><br />\n                    <div className=\"field\" style={{ width: '100%', textAlign: 'center', marginTop: '40px' }}>\n                        <button className=\"btn btn-primary\" type='submit' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Save</button>\n                        <button className=\"btn btn-primary\" type='reset' style={{ marginRight: '50px', width: '20%', backgroundColor: '#33323296', borderColor: 'GrayText' }}>Reset</button>\n                        <br /><br />\n                    </div>\n                </form>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%' }}>\n                    <DataGrid\n                        rows={newData}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={false}\n                        disableSelectiononChange\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                    />\n                </div>\n            </Card>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport Card from '@mui/material/Card'\nimport { gql, useMutation, useQuery, useLazyQuery, useSubscription } from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { Modal, Button } from \"react-bootstrap\";\nimport Select from 'react-select'\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst INSERT_QUICK_MEDIA=gql`\nmutation MyMutation($inquiry: Int = 0, $mobile_no: String = \"\",$proposal_no:Int!) {\n    insert_quick_media_one(object: {inquiry: $inquiry, mobile_no: $mobile_no,proposal_no:$proposal_no}) {\n      id\n    }\n  }\n`\n\n// const DELETE_QUICK_MEDIA=gql`\n// mutation MyMutation($id: Int = 0) {\n//     delete_quick_media_by_pk(id: $id) {\n//       id\n//     }\n//   }\n  \n// `\n\nconst DELETE_QUICK_MEDIA=gql`\nmutation MyMutation($id: Int = 0, $isDeleted: String = \"true\") {\n    update_quick_media_by_pk(pk_columns: {id: $id}, _set: {isDeleted: $isDeleted}) {\n      id\n    }\n  }\n  \n`\nconst READ_QUICK=gql`\nsubscription MySubscription($_eq: String = \"false\"){\n    quick_media(where: {isDeleted: {_eq: $_eq}}) {\n      inquiry\n      inquiry_master {\n        id\n        Inventory_Master {\n          Location\n        }\n      }\n      id\n      mobile_no\n      proposal_no\n    }\n  }\n  \n`\nconst SEARCH_INQUIRY=gql`\nquery MyQuery($number: String!, $_eq: String = \"false\") {\n    inquiry_master(where: {number: {_eq: $number}, isDeleted: {_eq: $_eq}}) {\n      Inventory_Master {\n        AvailabilityFrom\n        AvailabilityTo\n        City_Village\n        Country\n        DisplayRatePM\n        District\n        DrpmRate\n        Height\n        Illumination\n        Location\n        Media_Type\n        NoofDisplay\n        OneTimeMountingCost\n        OneTimePrintingCost\n        OtmcRate\n        OtpcRate\n        State\n        Status\n        Taluka\n        Total\n        Totalsqft\n        Width\n        city {\n          id\n          name\n          state_id\n        }\n        country {\n          id\n          name\n          phonecode\n          sortname\n        }\n        hoarding_insurance\n        id\n        media_type_master {\n          id\n          media_type\n        }\n        state {\n          country_id\n          id\n          name\n        }\n      }\n      email_id\n      id\n      inventory\n      media_type\n      media_type_master {\n        id\n        media_type\n      }\n      name\n      number\n      sol\n      start_date\n      status\n      whatsapp_number\n    }\n  }\n    \n`\nconst GET_MOBILE=gql`\nquery MyQuery($mobile_no: String!, $_eq: String = \"false\") {\n    quick_media(where: {mobile_no: {_eq: $mobile_no}, isDeleted: {_eq: $_eq}}) {\n      id\n      inquiry\n      mobile_no\n      proposal_no\n    }\n  }\n  \n  \n  \n`\n\nfunction Quick_Media() {\n    //States\n    const [get_data,setGet_data] = useState();\n    const [mobile_no,setMobile_no] = useState();\n    const [selected,setSelected] = useState();\n    //Queries\n    const [delete_quick_media] = useMutation(DELETE_QUICK_MEDIA);\n    const [insert_quick_media] = useMutation(INSERT_QUICK_MEDIA);\n    const [search_inquiry,return_inquiry] = useLazyQuery(SEARCH_INQUIRY);\n    const [get_mobile,mobile_no_exists] = useLazyQuery(GET_MOBILE,{\n        onCompleted: data => {\n            console.log('data ', data);\n            setGet_data(data);\n          }\n    });\n    const read_quick = useSubscription(READ_QUICK)\n    //functions\n    const onSearch=(e)=>{\n        e.preventDefault();\n        //console.log(e.target[0].value)\n        get_mobile({variables:{mobile_no:e.target[0].value}})\n        search_inquiry({variables:{number:e.target[0].value}})\n    }\n    const onMobileNoChange=(e)=>{\n        setMobile_no(e.target.value);\n    }\n    const saveData=(e)=>{\n        console.log(get_data.quick_media);\n        // if(get_data.quick_media)\n        // {\n        //     var counter = \"\";\n        // }\n        // else\n        // {\n        //     var counter=get_data.quick_media.at(-1);\n        // }\n        //console.log(get_data.quick_media===\"[]\"?\"\":console.log(\"Hello\"));\n        //console.assert()\n        \n        console.log(get_data===undefined?\"\":get_data.quick_media.at(-1))\n        const counter=get_data.quick_media===undefined?\"\":get_data.quick_media.at(-1)\n        console.log(counter);\n        if(counter===\"\")\n        {\n            var counter_proposal=0;\n        }\n        else\n        {\n            var counter_proposal=counter.proposal_no\n        }\n        for(var i=0;i<selected.length;i++)\n        {\n            insert_quick_media({variables:{inquiry:selected[i],mobile_no:mobile_no,proposal_no:counter_proposal+1}});\n        }\n        \n    }\n    const onDelete=(id)=>{\n        delete_quick_media({variables:{id:id}})\n        toast.configure();\n        toast.error('Successfully Deleted')\n    }\n    //Loader\n    if (return_inquiry.loading||read_quick.loading||mobile_no_exists.loading) return <div style={{ width: \"100%\", marginTop: '25%', textAlign: 'center' }}><CircularProgress /></div>;\n    const emptyarr = [\n        {\n            id:\"\",\n            number:\"\",\n            name:\"\",\n            sol:\"\",\n            start_date:\"\",\n            status:\"\",\n            whatsapp_number:\"\",\n            Inventory_Master:\n            {\n                id:\"\",\n                AvailabilityFrom: \"\",\n                AvailabilityTo: \"\",\n                City_Village: \"\",\n                Country: \"\",\n                DisplayRatePM: \"\",\n                District: \"\",\n                DrpmRate: \"\",\n                Height: \"\",\n                Illumination: \"\",\n                Location: \"\",\n                Media_Type: \"\",\n                NoofDisplay: \"\",\n                OneTimeMountingCost: \"\",\n                OneTimePrintingCost: \"\",\n                OtmcRate: \"\",\n                OtpcRate: \"\",\n                State: \"\",\n                Taluka: \"\",\n                Total: \"\",\n                Totalsqft: \"\",\n                Width: \"\",\n                city:{\n                    id: \"\",\n                    name: \"\"\n                },\n                country:{\n                    id: \"\",\n                    name: \"\"\n                },\n                media_type_master:{\n                    id: \"\",\n                    media_type: \"\"\n                },\n                state:{\n                    id: \"\",\n                    name: \"\"\n                }\n            }\n        }\n    ]\n    //console.log(\"-------------------------------\",mobile_no_exists===undefined?\"\":mobile_no_exists.data);\n    \n    var rows = emptyarr;\n    //console.log(data);\n    if(return_inquiry.data)\n    {\n       rows=return_inquiry.data.inquiry_master;\n    }\n    const rows1=read_quick.data.quick_media;\n    let newData1 = []\n    rows1.map((item, index) => {\n        newData1.push({ sno: index + 1, ...item })\n    })\n    const columns1=[\n        {\n            field: 'sno',\n            headerName: 'Serial No',\n            width: 150,\n        },\n        {\n            field:'id',\n            headerName:'ID',\n            width:200\n        },\n        {\n            field:'mobile_no',\n            headerName:'Mobile No',\n            width:200\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.inquiry_master.Inventory_Master.Location;\n            }\n        },\n        {\n            field:'proposal_no',\n            headerName:'Proposal No',\n            width:200\n        },\n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 200,\n            renderCell: (params) => {\n                return (\n                    <div className=\"\">\n                        {/* <button onClick={() => onDownload(params.row)} data-toggle=\"tooltip\" title=\"Download\" type=\"button\" className=\"btn btn-primary\"  ><i className=\"bi bi-pencil-fill\"></i></button> */}\n                        <button onClick={() => {\n                            const confirmBox = window.confirm(\n                                \"Do you really want to delete?\"\n                            )\n                            if (confirmBox === true) {\n                                onDelete(params.row.id)\n                            }\n                        }} data-toggle=\"tooltip\" title=\"Delete\" style={{ marginLeft: '20%' }} className=\"btn btn-danger\" ><i className=\"bi bi-trash-fill\"></i></button>\n                    </div>\n                );\n            }\n        },\n        \n    ]\n    const columns=[\n        { \n            field: 'id', \n            headerName: 'ID', \n            width: 200 \n        },\n        { \n            field: 'name', \n            headerName: 'Name', \n            width: 200 \n        },\n        { \n            field: 'number', \n            headerName: 'Number', \n            width: 200 \n        },\n        { \n            field: 'sol', \n            headerName: 'Source Of Lead', \n            width: 200 \n        },\n        { \n            field: 'sol', \n            headerName: 'Source Of Lead', \n            width: 200 \n        },\n        { \n            field: 'start_date', \n            headerName: 'Start Date', \n            width: 200 \n        },\n        { \n            field: 'status', \n            headerName: 'Status', \n            width: 200 \n        },\n        { \n            field: 'whatsapp_number', \n            headerName: 'Whatsapp Number', \n            width: 200 \n        },\n        {\n            field: 'country',\n            headerName: 'Country',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.country.name;\n            }\n        },\n        {\n            field: 'state',\n            headerName: 'State',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.state.name;\n            }\n        },\n        {\n            field: 'city',\n            headerName: 'City',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.city.name;\n            }\n        },\n        {\n            field: 'media',\n            headerName: 'Media',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.media_type_master.media_type;\n            }\n        },\n        {\n            field: 'Illumination',\n            headerName: 'Illumination',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Illumination;\n            }\n        },\n        {\n            field: 'Width',\n            headerName: 'Width',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Width;\n            }\n        },\n        {\n            field: 'Height',\n            headerName: 'Height',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Height;\n            }\n        },\n        {\n            field: 'NoofDisplay',\n            headerName: 'No Of Display',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.NoofDisplay;\n            }\n        },\n        {\n            field: 'TotalSqft',\n            headerName: 'Total Sq Ft',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Totalsqft;\n            }\n        },\n        {\n            field: 'DrpmRate',\n            headerName: 'DRPM Rate',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.DrpmRate;\n            }\n        },\n        {\n            field: 'inventory',\n            headerName: 'Location',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.Location;\n            }\n        },\n        {\n            field: 'availability_from',\n            headerName: 'Availability From',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.AvailabilityFrom;\n            }\n        },\n        {\n            field: 'availability_to',\n            headerName: 'Availability To',\n            width: 190,\n            valueGetter: (params) => {\n                return params.row.Inventory_Master.AvailabilityTo;\n            }\n        },\n        \n    ]\n    return (\n        <div>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"4%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <form className=\"form-group\" onSubmit={onSearch}>\n                    <h4 className=\"text-center\">Quick Media Proposal</h4><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <div className=\"field col-md-4\">\n                            <label className=\"required\">Mobile Number</label>\n                            <input onChange={onMobileNoChange} type=\"text\" className=\"form-control\" />\n                        </div>\n                        <div className=\"field col-md-4\"></div><br />\n                    </div><br />\n                    <div className=\"row\">\n                        <div className=\"field col-md-4\"></div>\n                        <button className=\"btn btn-primary\" type='submit'style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Search</button>\n                        <div className=\"field col-md-4\"></div>\n                    </div>\n                </form><br />\n                <div style={{ height: 500, width: '100%'}}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                        checkboxSelection={true}\n                        components={{\n                            Toolbar: GridToolbar,\n                        }}\n                        onSelectionModelChange={itm => setSelected(itm)}\n                        \n                    />\n                    <button className=\"btn btn-primary\" onClick={saveData} style={{ marginRight: '50px', width:'20%', backgroundColor:'#33323296', borderColor:'GrayText' }}>Save</button>\n                    <br/>\n                </div>\n            </Card>\n            <Card variant=\"outlined\" className=\"form-card\" style={{\n                margin: \"2%\",\n                padding: \"2%\",\n                background: \"#FFFFFF\",\n                boxShadow: \"2px 2px 37px rgba(0, 0, 0, 0.25)\",\n                borderRadius: \"10px\"\n            }}>\n                <div style={{ height: 500, width: '100%'}}>\n                <DataGrid\n                    rows={newData1}\n                    columns={columns1}\n                    pageSize={10}\n                    rowsPerPageOptions={[10]}\n                    checkboxSelection={true}\n                    components={{\n                        Toolbar: GridToolbar,\n                    }}\n                        \n                        \n                    /> \n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Quick_Media","import { Divider } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory, Link } from \"react-router-dom\";\nimport Navbar from './Navbar';\nimport { GridMenuIcon } from \"@material-ui/data-grid\";\nimport Employee_Master from './NavItems/Employee_Master';\nimport Location_Master from './NavItems/Location_Master';\nimport Customer_Master from './NavItems/Customer_Master';\nimport Media_Type_Master from './NavItems/Media_Type_Master';\nimport Size_Master from './NavItems/Size_Master';\nimport Industry_Master from './NavItems/Industry_Master';\nimport GST_Type_Master from './NavItems/GST_Type_Master';\nimport Labour_Master from './NavItems/Labour_Master';\nimport Dashboard from './NavItems/Dashboard';\nimport Inventory_Master from \"./NavItems/Inventory_Master\";\nimport Labor_Category_Master from \"./NavItems/Labor_Category_Master\";\nimport Payment_Type from \"./NavItems/Payment_Type\";\nimport Availability from \"./NavItems/Availability\";\nimport Inquiry_Master from \"./NavItems/Inquiry_Master\";\nimport Booking from \"./NavItems/Booking\";\nimport Landloard_Management from \"./NavItems/Landlord_Management\";\nimport Quick_Media_Proposal from \"./NavItems/Quick_Media_Proposal\";\nimport Purchase_Order_Management from \"./NavItems/Purchase_Order_Management\";\nimport Flex_and_Vinyl_Management from \"./NavItems/Flex_and_Vnyl_Management\";\nimport MonitoringImages from \"./NavItems/MonitoringImages\";\nimport Login from \"./Login\";\nimport { ProtectedRoute } from '../protected.route';\nimport auth from '../auth';\nimport Availability_Master from \"./NavItems/Availability_Master\";\nimport Hoarding_Insurance1 from \"./NavItems/Hoarding_Insurance1\";\nimport Hoarding_Erection from \"./NavItems/Hoarding_Erection\";\nimport HoardingErrection from \"./NavItems/HoardingErrection\";\nimport Quick_Media from \"./NavItems/Quick_Media\";\n\n// import { MenuOpen } from \"@material-ui/icons\";\n\nconst Body = () => {\n  const [date, setDate] = useState(new Date());\n\n  function refreshClock() {\n    setDate(new Date());\n  }\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000);\n    return function cleanup() {\n      clearInterval(timerId);\n    };\n  }, []);\n  const history = useHistory();\n  const homeRedirect = () => {\n    history.push('/')\n  }\n\n  const [menu, setMenu] = useState(false);\n  const menu_toggle = () => {\n    let a = document.getElementById('sidebar');\n    let b = document.getElementById('main');\n    if (menu) {\n      a.style.display = 'none';\n      b.className = 'col-md-12 main';\n      setMenu(false);\n    } else {\n      a.style.display = 'block';\n      b.className = 'col-md-10 main';\n      setMenu(true);\n    }\n\n  }\n\n  return (\n    <div>\n      <div>\n        <header className=\"header\" id=\"header\" >\n          <GridMenuIcon onClick={menu_toggle} id='menu-btn' style={{ margin: '32px', color: 'black' }} />\n          <div className='adu'>\n            <h4 style={{ cursor: 'pointer', marginLeft: '10px', color: 'black' }} onClick={homeRedirect}>\n              BHARTI EXPO-ADS\n            </h4>\n          </div>\n          <div style={{ display: 'flex', width: '100%', flex: '1' }}>\n            <div className=\"text-black\">\n              <br />\n              <h4 style={{ textAlign: 'center' }}>\n                {date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })}\n              </h4>\n            </div>\n\n            <nav className=\"navbar navbar-dark navbar-expand-sm\" >\n\n\n              <div className=\"collapse navbar-collapse\" id=\"navbar-list-4\">\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\"\n                      id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                      aria-expanded=\"false\">\n                      <img src=\"https://www.w3schools.com/howto/img_avatar.png\" width=\"20\" height=\"20\"\n                        className=\"rounded-circle\" />\n                    </a>\n                    <div style={{ marginLeft: '260px' }} class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                      <a class=\"dropdown-item\" href=\"#\">Dashboard</a>\n                      <a class=\"dropdown-item\" href=\"#\">Edit Profile</a>\n                      <li className=\"nav-item\" onClick={() => {\n                        auth.logout(() => {\n                          history.push(\"/Login\");\n                        })\n                        console.log(localStorage.getItem(\"authenticated\"))\n                      }}>\n                        <Link className=\"dropdown-item\">\n                          Logout\n                        </Link>\n                      </li>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </div>\n        </header>\n      </div>\n      <div className='body1'>\n\n        <div className=\"sidenav\" id='sidebar'>\n          <Navbar menu_function={menu_toggle}/>\n        </div>\n        <div className=\" main\" id='main'>\n          <Switch>\n\n            <ProtectedRoute exact path='/' component={Dashboard} />\n            <ProtectedRoute exact path='/Employee_Master' component={Employee_Master} />\n            <ProtectedRoute exact path='/Labour_Master' component={Labour_Master} />\n            <ProtectedRoute exact path='/Location_Master' component={Location_Master} />\n            <ProtectedRoute exact path='/Customer_Master' component={Customer_Master} />\n            <ProtectedRoute exact path='/Media_Type_Master' component={Media_Type_Master} />\n            <ProtectedRoute exact path='/Size_Master' component={Size_Master} />\n            <ProtectedRoute exact path='/Inventory_Master' component={Inventory_Master} />\n            <ProtectedRoute exact path='/Industry_Master' component={Industry_Master} />\n            <ProtectedRoute exact path='/GST_Type_Master' component={GST_Type_Master} />\n            <ProtectedRoute exact path='/Labor_Category_Master' component={Labor_Category_Master} />\n            <ProtectedRoute exact path='/Payment_Type' component={Payment_Type} />\n            <ProtectedRoute exact path=\"/Availability\" component={Availability} />\n            <ProtectedRoute exact path=\"/Inquiry_Master\" component={Inquiry_Master} />\n            <ProtectedRoute exact path=\"/Booking\" component={Booking} />\n            <ProtectedRoute exact path=\"/Landlord_Management\" component={Landloard_Management} />\n            <ProtectedRoute exact path=\"/Quick_Media_Proposal\" component={Quick_Media_Proposal} />\n            <ProtectedRoute exact path=\"/Purchase_Order_Management\" component={Purchase_Order_Management} />\n            <ProtectedRoute exact path=\"/Flex_and_Vinyl_Management\" component={Flex_and_Vinyl_Management} />\n            <ProtectedRoute exact path=\"/MonitoringImages\" component={MonitoringImages} />\n            <ProtectedRoute exact path=\"/Availability_Master\" component={Availability_Master} />\n            <ProtectedRoute exact path=\"/Hoarding_Insurance\" component={Hoarding_Insurance1} />\n            <ProtectedRoute exact path=\"/Hoarding_Erection\" component={Hoarding_Erection} />\n            <ProtectedRoute exact path=\"/Quick_Media\" component={Quick_Media} />\n            <ProtectedRoute exact path=\"/HoardingErrection\" component={HoardingErrection} />\n          </Switch>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Body;\n","import './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Body from './Components/Body';\n//import 'bootstrap/dist/css/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  split,\n  ApolloProvider\n} from \"@apollo/client\";\n\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport Login from './Components/Login';\n// import jsPDF from 'jspdf';\n\nconst wsLink = new WebSocketLink({\n  uri: 'wss://refined-stork-71.hasura.app/v1/graphql',\n  options: {\n    reconnect: true\n  }\n});\nconsole.log(wsLink);\nconst httpLink = new HttpLink({\n  uri: 'https://refined-stork-71.hasura.app/v1/graphql',\n  // headers: {\n  //   'x-hasura-access-key': 'YrlJbtD2GXzRiZk16RqL4AIAHwrI25nvzcUDAIPQlozRWw007jDGsro4mILTcmb6'\n  // }\n})\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <Switch>\n        <Route exact path=\"/Login\" component={Login} />\n          <Route path=\"/\"> <Body /></Route>\n        </Switch>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}